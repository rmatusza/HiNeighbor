[{"/home/ryan/portfolio_projects/HiNeighbor/client/src/index.js":"1","/home/ryan/portfolio_projects/HiNeighbor/client/src/theme.js":"2","/home/ryan/portfolio_projects/HiNeighbor/client/src/App.js":"3","/home/ryan/portfolio_projects/HiNeighbor/client/src/reportWebVitals.js":"4","/home/ryan/portfolio_projects/HiNeighbor/client/src/store/configureStore.js":"5","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/userCredsAction.js":"6","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/ProtectedRoute.js":"7","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/top-bar/TopBar.js":"8","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/HomePage.js":"9","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedItems.js":"10","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserStats.js":"11","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/History.js":"12","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/BidHistory.js":"13","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/login/Login.js":"14","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileMain.js":"15","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/signup/SignUp.js":"16","/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/userCredsReducer.js":"17","/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/searchCategoryReducer.js":"18","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/types.js":"19","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserDropdown.js":"20","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/itemsActions.js":"21","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/PriceRange.js":"22","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/OfferType.js":"23","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/SearchBar.js":"24","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Distance.js":"25","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Category.js":"26","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/RentItems.js":"27","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Items.js":"28","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedSaleItems.js":"29","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedRentItems.js":"30","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/SalesChart.js":"31","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/ProfitsChart.js":"32","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js":"33","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/RentHistory.js":"34","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/TopBidderData.js":"35","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/NotTopBidderData.js":"36","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/LostAuctionData.js":"37","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForRent.js":"38","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForSale.js":"39","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/refresh_home_page/refreshHomePageItems.js":"40","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/searchCategoryActions.js":"41","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostRentItem.js":"42","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UpdateSaleItem.js":"43","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/purchase_functionality/Purchase.js":"44","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/bid_functionality/Bid.js":"45","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostItem.js":"46","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/Message.js":"47"},{"size":905,"mtime":1617993377760,"results":"48","hashOfConfig":"49"},{"size":272,"mtime":1614989084830,"results":"50","hashOfConfig":"49"},{"size":3328,"mtime":1619717281790,"results":"51","hashOfConfig":"49"},{"size":362,"mtime":1614989084830,"results":"52","hashOfConfig":"49"},{"size":549,"mtime":1614989084830,"results":"53","hashOfConfig":"49"},{"size":258,"mtime":1617035460710,"results":"54","hashOfConfig":"49"},{"size":270,"mtime":1614989084820,"results":"55","hashOfConfig":"49"},{"size":1894,"mtime":1619643770600,"results":"56","hashOfConfig":"49"},{"size":1786,"mtime":1619643770590,"results":"57","hashOfConfig":"49"},{"size":3875,"mtime":1619717281790,"results":"58","hashOfConfig":"49"},{"size":1747,"mtime":1619643770600,"results":"59","hashOfConfig":"49"},{"size":3383,"mtime":1619717281790,"results":"60","hashOfConfig":"49"},{"size":3184,"mtime":1619717281790,"results":"61","hashOfConfig":"49"},{"size":9361,"mtime":1619717281790,"results":"62","hashOfConfig":"49"},{"size":5996,"mtime":1619721071610,"results":"63","hashOfConfig":"49"},{"size":10222,"mtime":1619717281790,"results":"64","hashOfConfig":"49"},{"size":507,"mtime":1617035613620,"results":"65","hashOfConfig":"49"},{"size":2877,"mtime":1619643770600,"results":"66","hashOfConfig":"49"},{"size":700,"mtime":1619643770590,"results":"67","hashOfConfig":"49"},{"size":3060,"mtime":1619643770600,"results":"68","hashOfConfig":"49"},{"size":906,"mtime":1619643770590,"results":"69","hashOfConfig":"49"},{"size":2277,"mtime":1619643770590,"results":"70","hashOfConfig":"49"},{"size":1727,"mtime":1619643770590,"results":"71","hashOfConfig":"49"},{"size":2486,"mtime":1619717363460,"results":"72","hashOfConfig":"49"},{"size":1659,"mtime":1619643770590,"results":"73","hashOfConfig":"49"},{"size":2610,"mtime":1619643770590,"results":"74","hashOfConfig":"49"},{"size":14235,"mtime":1619717281790,"results":"75","hashOfConfig":"49"},{"size":8743,"mtime":1619643770590,"results":"76","hashOfConfig":"49"},{"size":11757,"mtime":1619717281790,"results":"77","hashOfConfig":"49"},{"size":9811,"mtime":1619717281790,"results":"78","hashOfConfig":"49"},{"size":1919,"mtime":1619717281790,"results":"79","hashOfConfig":"49"},{"size":1871,"mtime":1619717281790,"results":"80","hashOfConfig":"49"},{"size":9298,"mtime":1619717281790,"results":"81","hashOfConfig":"49"},{"size":13058,"mtime":1619717281790,"results":"82","hashOfConfig":"49"},{"size":6848,"mtime":1619643770600,"results":"83","hashOfConfig":"49"},{"size":6718,"mtime":1619643770600,"results":"84","hashOfConfig":"49"},{"size":6095,"mtime":1619643770600,"results":"85","hashOfConfig":"49"},{"size":12016,"mtime":1619717281790,"results":"86","hashOfConfig":"49"},{"size":6014,"mtime":1619717921960,"results":"87","hashOfConfig":"49"},{"size":535,"mtime":1619717281790,"results":"88","hashOfConfig":"49"},{"size":642,"mtime":1618332620590,"results":"89","hashOfConfig":"49"},{"size":10565,"mtime":1619717281790,"results":"90","hashOfConfig":"49"},{"size":8402,"mtime":1619717281790,"results":"91","hashOfConfig":"49"},{"size":2412,"mtime":1619717281790,"results":"92","hashOfConfig":"49"},{"size":4123,"mtime":1619717281790,"results":"93","hashOfConfig":"49"},{"size":10042,"mtime":1619725165310,"results":"94","hashOfConfig":"49"},{"size":4406,"mtime":1619728457030,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1hbvrm8",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ryan/portfolio_projects/HiNeighbor/client/src/index.js",[],["197","198"],"/home/ryan/portfolio_projects/HiNeighbor/client/src/theme.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/App.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/reportWebVitals.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/store/configureStore.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/userCredsAction.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/ProtectedRoute.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/top-bar/TopBar.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/HomePage.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedItems.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserStats.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/History.js",["199"],"import React, { useState, useEffect } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport PurchaseHistory from './PurchaseHistory';\nimport RentHistory from './RentHistory';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  Buttons: {\n    minWidth: '177px;',\n    maxWidth: '177px;',\n  }\n}))\n\n\nconst History = () => {\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [purchasedButtonState, setPurchasedButtonState] = useState(true)\n  const [rentedButtonState, setRentedButtonState] = useState(false)\n  const [purchasedItems, setPurchasedItems] = useState({'purchased_items': [], 'users': [], 'reviews': []})\n  const [rentedItems, setRentedItems] = useState({'rented_items': [], 'users': [], 'rent_reviews': [], 'returned_rented_items': []})\n  const classes = useStyles()\n  // let purchasedItems;\n  // let rentedItems = []\n  let divClass;\n  if(purchasedButtonState){\n    divClass = 'purchase-rent-toggle-buttons__purchased'\n  } else {\n    divClass = 'purchase-rent-toggle-buttons'\n  }\n\n  const handleClick = (e) => {\n    if(e.target.name === 'purchased') {\n      if(purchasedButtonState === false) {\n        setPurchasedButtonState(true)\n        setRentedButtonState(false)\n      } else {\n        setPurchasedButtonState(false)\n        setRentedButtonState(true)\n\n      }\n    } else {\n      if(rentedButtonState === false) {\n        setRentedButtonState(true)\n        setPurchasedButtonState(false)\n\n      }else {\n        setRentedButtonState(false)\n        setPurchasedButtonState(true)\n      }\n    }\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${currUserId}/get-purchase-history`)\n      const postedItems = await res.json()\n      //('PURCHASED ITEMS:', postedItems)\n      // //(postedItems)\n      setPurchasedItems({'purchased_items': postedItems.purchased_items, 'users': postedItems.users, 'reviews': postedItems.reviews})\n      const getRentHistory = await fetch(`http://localhost:5000/api/users/${currUserId}/get-rent-history`)\n      const returnedItems = await getRentHistory.json()\n      //('RENTED ITEMS:', returnedItems)\n      setRentedItems({'rented_items': returnedItems.rent_items, 'rent_reviews': returnedItems.reviews, 'returned_rented_items': returnedItems.returned_rented_items})\n    })()\n  }, [])\n\n  //(purchasedItems)\n\n  return (\n    <>\n      <div className={divClass} key={0}>\n        <div key={1}>\n          <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={purchasedButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"purchased\" key={2}>\n          Purchased\n          </Button>\n        </div>\n        <div className=\"purchase-rent-toggle-buttons-divider\" key={3}></div>\n        <div key={4}>\n          <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={rentedButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"rented\" key={5}>\n          Rented\n          </Button>\n        </div>\n      </div>\n      <div key={6}>\n        {purchasedButtonState ? <PurchaseHistory postedItems={purchasedItems} key={7}/> : <RentHistory postedItems={rentedItems} key={8}/>}\n      </div>\n    </>\n  )\n}\n\n\nexport default History;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/BidHistory.js",["200"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport TopBidderData from './TopBidderData';\nimport NotTopBidderData from './NotTopBidderData';\nimport LostAuctionData from './LostAuctionData';\nimport { setBidHistory } from '../../actions/itemsActions';\n\n\nconst BidHistory = () => {\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [lostAuctionData, setLostAuctionData] = useState([])\n  const [topBidderData, setTopBidderData] = useState([])\n  const [notTopBidderData, setNotTopBidderData] = useState([])\n  const [selectedView, setSelectedView] = useState('top-bidder')\n  const dispatch = useDispatch()\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${currUserId}/get-bid-history`)\n      const bidData = await res.json()\n      console.log('BID DATA:', bidData)\n      setLostAuctionData(bidData[0])\n      setTopBidderData(bidData[1])\n      setNotTopBidderData(bidData[2])\n      dispatch(setBidHistory([bidData[2], bidData[1]]))\n    })()\n  }, [])\n\n  \n  // const ws = new WebSocket(\"ws://localhost:8082\")\n  // ws.addEventListener(\"open\", () => {\n  //   console.log('We connected!')\n\n  //   ws.send(\"test\")\n  // })\n\n  // ws.addEventListener('message', e => {\n  //   console.log(e)\n  // })\n  const toggleButton = (button) => {\n    setSelectedView(button)\n  }\n\n  return(\n    <>\n      <div className=\"bid-info-toggle-buttons-container\">\n        {/* <div className=\"all-bids-button-container\">\n          <Button color=\"secondary\" variant={selectedView === \"all-bids\" ? \"contained\" : \"outlined\"} onClick={() => toggleButton('all-bids')}>\n            All Bids\n          </Button>\n        </div> */}\n        <div className=\"top-bidder-button-container\">\n          <Button color=\"secondary\" variant={selectedView === \"top-bidder\" ? \"contained\" : \"outlined\"} onClick={() => toggleButton('top-bidder')}>\n            Top Bidder\n          </Button>\n        </div>\n        <div className=\"other-bids-button-container\">\n          <Button color=\"secondary\" variant={selectedView === \"other-bids\" ? \"contained\" : \"outlined\"} onClick={() => toggleButton('other-bids')}>\n            Other Bids\n          </Button>\n        </div>\n        <div className=\"lost-auction-button-container\">\n          <Button color=\"secondary\" variant={selectedView === \"lost-auction\" ? \"contained\" : \"outlined\"} onClick={() => toggleButton('lost-auction')}>\n            Lost Auctions\n          </Button>\n        </div>\n      </div>\n      {(() => {\n        if(selectedView === 'top-bidder'){\n          return(\n            <>\n              <TopBidderData itemData={topBidderData} />\n            </>\n          )\n        } else if(selectedView === 'other-bids'){\n          return(\n            <>\n              <NotTopBidderData itemData={notTopBidderData} topBids={topBidderData} />\n            </>\n          )\n        } else {\n          return(\n            <>\n              <LostAuctionData itemData={lostAuctionData} />\n            </>\n          )\n        }\n      })()}\n    </>\n  )\n}\n\nexport default BidHistory;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/login/Login.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileMain.js",["201"],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/signup/SignUp.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/userCredsReducer.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/searchCategoryReducer.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/types.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserDropdown.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/itemsActions.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/PriceRange.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/OfferType.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/SearchBar.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Distance.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Category.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/RentItems.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Items.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedSaleItems.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedRentItems.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/SalesChart.js",["202"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport { useSelector } from \"react-redux\";\n\n\n\nconst SalesChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [salesData, setSalesData] = useState([])\n\n  let data =\n  [\n  { x: 1, y: 0, label: 'Janurary'},\n  { x: 2, y: 0, label: 'Februrary' },\n  { x: 3, y: 0, label: 'March' },\n  { x: 4, y: 0, label: 'April' },\n  { x: 5, y: 0, label: 'May' },\n  { x: 6, y: 0, label: 'June' },\n  { x: 7, y: 0, label: 'July' },\n  { x: 8, y: 0, label: 'August' },\n  { x: 9, y: 0, label: 'September' },\n  { x: 10, y: 0, label: 'October' },\n  { x: 11, y: 0, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      //('SALES DATA:', data)\n      items.forEach(item => {\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        //(idx)\n        data[idx].y += 1\n        //(data)\n      })\n      setSalesData(data)\n    })()\n  }, [])\n\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Sales'\n    },\n    axisY: {\n      title: 'Number of Sales'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: salesData\n    }]\n  }\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default SalesChart;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/ProfitsChart.js",["203"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport { useSelector } from \"react-redux\";\n\n\n\nconst ProfitsChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [profitData, setProfitData] = useState([])\n\n  let data =\n  [\n  { x: 1, y: 0, label: 'Janurary'},\n  { x: 2, y: 0, label: 'Februrary' },\n  { x: 3, y: 0, label: 'March' },\n  { x: 4, y: 0, label: 'April' },\n  { x: 5, y: 0, label: 'May' },\n  { x: 6, y: 0, label: 'June' },\n  { x: 7, y: 0, label: 'July' },\n  { x: 8, y: 0, label: 'August' },\n  { x: 9, y: 0, label: 'September' },\n  { x: 10, y: 0, label: 'October' },\n  { x: 11, y: 0, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      //('SALES DATA:', res)\n      items.forEach(item => {\n        //('ITEM:', item)\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        data[idx].y += item.price\n      })\n      setProfitData(data)\n    })()\n  }, [])\n\n  const options = {\n    animationEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Profits'\n    },\n    axisY: {\n      title: 'Profit',\n      prefix: '$'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      dataPoints: profitData\n    }]\n  }\n\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default ProfitsChart;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/RentHistory.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/TopBidderData.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/NotTopBidderData.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/LostAuctionData.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForRent.js",["204","205","206","207","208"],"import React, { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { \n  Grid, \n  Button,\n  Dialog,\n  TextField,\n  DialogActions,\n  DialogTitle,\n  useMediaQuery,\n  Card,\n  CardContent,\n  makeStyles,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell\n  } from \"@material-ui/core\";\nimport './sellerProfile.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px',\n  },\n  paper: {\n    marginLeft: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '280px',\n    width: '280px',\n  },\n  paper_large_screen: {\n    marginLeft: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  image_large_screen: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '280px',\n    width: '280px',\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  itemFormModal: {\n    position: \"absolute\",\n    top: 100,\n    left: 600,\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 350,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke',\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    width: '450px',\n    height: '94px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  gridItem: {\n    width: '100%',\n    borderRadius: '5px'\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n\n}))\n\nconst date = new Date()\nconst day = date.getDate()\nconst month = date.getMonth() + 1\nconst year = date.getFullYear()\nconst today = new Date(month+'-'+day+'-'+year)\n\nconst SellerProfileForRent = (props) => {\n  const currUserId = useSelector(store => store.session.currentUser.id);\n  let itemData;\n  let tableData;\n  const [currItem, setCurrItem] = useState()\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [rentTotal, setRentTotal] = useState(null)\n  const [selectedDateString, setSelectedDateString] = useState(null)\n  const [confirmRentDialog, setConfirmRentDialog] = useState(false);\n  const [selectedItemIdx, setSelectedItemIdx] = useState(null)\n  const classes = useStyles()\n  const largeScreen = useMediaQuery('(min-width:1870px)');\n\n  const updateSoldItems = (id) => {\n   currItem.expiry_date = selectedDateString\n   currItem.rented = true\n  }\n\n  const handleDialogOpen = (itemData, idx) => {\n    if(itemData.rented === true){\n      alert(`This Item is Being Rented by Another User Until the Specified Return Date`)\n      return\n    }\n    setCurrItem(itemData)\n    setDialogOpen(true)\n  };\n\n  const handleCloseAll = () => {\n    setDialogOpen(false)\n    setConfirmRentDialog(false)\n  }\n\n  const handleUpdateDate = (e) => {\n    setSelectedDate(e.target.value)\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleConfirmRentDialog = () => {\n    const date = new Date()\n    const day = date.getDate()\n    const month = date.getMonth() + 1\n    const year = date.getFullYear()\n    const today = new Date(month+'-'+day+'-'+year)\n    if(!selectedDate){\n      alert('Please select a return date')\n      return\n    }\n    let chosenMonth = selectedDate.slice(5, 7)\n    let chosenDay = selectedDate.slice(8)\n    let chosenYear = selectedDate.slice(0, 4)\n    let chosenDateObj = new Date(chosenMonth + '-' + chosenDay + '-' + chosenYear)\n\n    if(chosenDateObj < today) {\n      alert('Please select a valid date')\n      return\n    }\n\n    let chosenDateString = chosenMonth + '-' + chosenDay + '-' + chosenYear\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const rentPeriod = Math.round(Math.abs((chosenDateObj - today) / oneDay));\n    const total = rentPeriod * currItem.rate\n    setRentTotal(total)\n    setSelectedDateString(chosenDateString)\n    setConfirmRentDialog(true)\n  };\n\n  const handleCloseConfirmRentDialog = () => {\n    setConfirmRentDialog(false)\n  }\n\n  const handleRentItem = async () => {\n    let rate = currItem.rate\n    let seller_name = currItem.seller_name\n    let itemName = currItem.name\n    let imageURL = currItem.image_url\n    let category = currItem.category\n    let seller_id = currItem.seller_id\n    const body = {\n      currUserId,\n      itemName,\n      seller_name,\n      today,\n      selectedDateString,\n      rentTotal,\n      imageURL,\n      category,\n      rate,\n      seller_id\n    }\n\n    await fetch(`http://localhost:5000/api/items-and-services/${currItem.id}/rent`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    updateSoldItems(currItem.id)\n    handleCloseAll()\n  }\n\n  return(\n    <>\n      <div className=\"divider\"/>\n      {props.itemData.length > 0 ?\n        <Grid container spacing={3} className={classes.grid}>\n          {props.itemData.map((item, idx) => {\n            let url = item.image_url\n            return (\n                <Grid item xs={12} md={12} lg={largeScreen ? 6 : 12} className={classes.gridItem}>\n                  <div className=\"seller-items-body-container\">\n                    <div className=\"seller-page-item-cards\">\n                      <div className=\"item-name-seller-profile\"><h2 className=\"item-text\">{item.name}</h2></div>\n                      <div className=\"image-container-seller-profile\">\n                        <Card className={largeScreen ? classes.paper_large_screen : classes.paper}>\n                          <CardContent className={largeScreen ? classes.image_large_screen : classes.image}>\n                            <img alt=\"for-rent-item-seller-profile\" className=\"item-image\" src={url} />\n                          </CardContent>\n                        </Card>\n                        <div className=\"rent-button-container-for-rent-seller-profile\">\n                          <Button color=\"secondary\" style={{width: \"158.03px\"}} size=\"medium\" variant=\"contained\" onClick={() => {handleDialogOpen(item, idx)}}>\n                            Rent\n                          </Button>\n                        </div>\n                      </div>\n                      <div className=\"description-table-container__seller-profile-for-rent\">\n                        <div className=\"table-container\">\n                          <TableContainer className={classes.tableContainer}>\n                            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                              <TableHead className={classes.tableHead}>\n                                <TableRow>\n                                  <TableCell align=\"center\" className={classes.tableCell}>Category</TableCell>\n                                  <TableCell align=\"center\" className={classes.tableCell}>Daily Rate</TableCell>\n                                  <TableCell align=\"center\" className={classes.tableCell}>Availablity</TableCell>\n                                </TableRow>\n                              </TableHead>\n                              <TableBody>\n                                <TableRow key={props.itemData[idx].name}>\n                                  <TableCell align=\"center\">{props.itemData[idx].category}</TableCell>\n                                  <TableCell align=\"center\">${props.itemData[idx].rate}</TableCell>\n                                  <TableCell align=\"center\">{props.itemData[idx].rented === true ? `Unavailable Until: ${props.itemData[idx].expiry_date}` : 'Available'}</TableCell>\n                                </TableRow>\n                              </TableBody>\n                            </Table>\n                          </TableContainer>\n                        </div>\n                        <div className=\"seller-profile-rent-item-description-conatiner\">\n                          {item.description}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n            )\n          })}\n        </Grid>\n        :\n        <div className=\"no-items-message-seller-profile\">\n         <h1>No Items Have Been Posted For Rent by This User</h1>\n       </div>\n      }\n        <Dialog\n          open={dialogOpen}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          scroll='body'\n          fullWidth={true}\n          maxWidth='sm'\n          // className={classes.rentDialog}\n        >\n          <div className=\"rent-item-dbox-content-container\">\n            <div className=\"date-picker-container\">\n              {/* <div className=\"rent-item-dbox-content-container__inner-container\"> */}\n                <h5>Note: If you choose to rent this item, the beginning of the rent period will start today</h5>\n                <h3 className=\"select-return-date-heading\">Please Select a Return Date:</h3>\n                <form className={classes.container} noValidate>\n                  <TextField\n                    id=\"date\"\n                    type=\"date\"\n                    defaultValue={selectedDate}\n                    className={classes.textField}\n                    onChange={handleUpdateDate}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </form>\n              {/* </div> */}\n            </div>\n            <div className=\"rent-item-buttons-container\">\n              <div className=\"rent-item-buttons\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  // style={{ color: \"white\" }}\n                  size=\"small\"\n                  className={classes.confirmButton}\n                  onClick={handleConfirmRentDialog}\n                  type=\"submit\"\n                  name=\"confirm-button\">\n                    Confirm\n                  </Button>\n                  <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  // style={{ color: \"white\" }}\n                  size=\"small\"\n                  className={classes.cancelButton}\n                  onClick={handleDialogClose}\n                  type=\"submit\"\n                  name=\"cancel-button\"\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Dialog>\n\n        <Dialog\n          open={confirmRentDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          scroll='body'\n          fullWidth={true}\n          maxWidth='xs'\n          // className={classes.rentDialog}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {`Are you sure that you want to rent the selected item, which is to be returned on ${selectedDateString}, for a total of $${rentTotal}?`}\n          </DialogTitle>\n          <DialogActions>\n            <Button onClick={handleCloseConfirmRentDialog} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button color=\"secondary\" onClick={handleRentItem}>\n              Confirm\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n          {/* <Dialog\n          open={enlargeImage}\n          onClose={closeImage}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          >\n            <img className=\"item-image-enlarged\" src={image} />\n          </Dialog> */}\n\n    </>\n  )\n};\n\nexport default SellerProfileForRent;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForSale.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/refresh_home_page/refreshHomePageItems.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/searchCategoryActions.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostRentItem.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UpdateSaleItem.js",["209","210","211","212"],"import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  TextareaAutosize,\n  Modal,\n  MenuItem,\n  Select,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  itemFormModal: {\n    width: '400px',\n    margin: 'auto',\n    marginTop: '14vh',\n    backgroundColor: \"whitesmoke\",\n    boxShadow: theme.shadows[5],\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n\n  offerType: {\n    margin: '10px',\n    width: '100%'\n  },\n\n  formControl: {\n    width: '181px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  },\n\n  buttons: {\n    width: '160px'\n  },\n}));\n\nconst UpdateSaleItem = (props) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [confirmPostDialogBox, setConfirmPostDialogBox] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  const [itemCategory, setItemCategory] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const classes = useStyles()\n  const [popupVisible, setPopupVisible] = useState(false)\n  const[modalOpen, setModalOpen] = useState(false)\n  const [formErrors, setFormErrors] = useState([]);\n\n\tuseEffect(() => {\n    setModalOpen(props.itemData.clicked)\n  }, [props.itemData.clicked])\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleCloseCategory = () => {\n  }\n\n  const handleCategorySelection = (e) => {\n    setItemCategory(e.target.value)\n    handleCloseCategory()\n  }\n\t\n\tconst handleInputChange = (e) => {\n\t\tif (e.target.id === \"name-input\") {\n\t\t\tsetItemName(e.target.value);\n\t\t} else if (e.target.id === \"description-input\") {\n\t\t\tsetItemDescription(e.target.value);\n\t\t} else if(e.target.id === \"sell-price-input\") {\n\t\t\tsetItemPrice(e.target.value)\n\t\t} else if(e.target.id === \"quantitiy-input\") {\n\t\t}\n\t};\n\n\tconst handleCloseModal = (buttonName) => {\n    setModalOpen(false)\n\t\tprops.itemData.rerender_parent()\n\t}\n\n  const openConfirmPostDialogBox = () => {\n    setConfirmPostDialogBox(true)\n  }\n\n  const closeConfirmPostDialogBox = () => {\n    setConfirmPostDialogBox(false)\n  }\n\n\tconst postItem = async() => {\n\n    let item = props.itemData.data\n\n    let item_name = itemName ? itemName: item.name\n    let item_description = itemDescription ? itemDescription : item.description\n    let item_category = itemCategory ? itemCategory : item.category\n\n\t\tconst body = {\n      item_name, \n\t\t\titem_description,\n\t\t\titem_category,\n\t\t}\n\n    const res = await fetch(`http://localhost:5000/api/items-and-services/update-posted-sale-item/${item.id}`, {\n      method: 'PATCH',\n      headers: {\n      'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const response = await res.json()\n    let errors = [] \n    if(response.errors) {\n      response.errors.forEach(error => {\n        errors.push(error.msg)\n      })\n      setFormErrors(errors)\n      setDialogOpen(true)\n      return\n    } else if(response.error){\n      closeConfirmPostDialogBox()\n      alert(`${response.status}: ${response.error.message}`)\n    } else {\n      item.name = item_name\n      item.description = item_description\n      item.category = item_category\n      closeConfirmPostDialogBox()\n      handleCloseModal()\n    }\n  }\n\n  const validateForm = (e) => {\n    e.preventDefault()\n    let providedData = false\n    let requiredFields =\n    [\n    itemName,\n    itemDescription,\n    itemCategory,\n    ]\n    let errorMessage =\n    [\n      'You Must Edit at Least One Of The Available Fields'\n    ]\n\n    requiredFields.forEach((field, i) => {\n      if(field !== '') {\n       providedData = true\n      }\n    })\n    if(providedData === true) {\n      openConfirmPostDialogBox()\n    } else {\n      setFormErrors(errorMessage)\n      setDialogOpen(true)\n    }\n  }\n\n  const postItemBody = (\n    <div className={classes.itemFormModal}>\n      <h2 id=\"simple-modal-title\">Item Info:</h2>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"name-input\" style={{color: \"black\"}}>Name</InputLabel>\n          <Input id=\"name-input\" onChange={handleInputChange} autoFocus style={{color: \"black\"}} />\n        </FormControl>\n      </div>\n      <div className=\"post-sale-item-description-input-container\">\n        <InputLabel htmlFor=\"description-input\" style={{color: \"black\"}}>Description</InputLabel>\n        <FormControl>\n          <TextareaAutosize id=\"description-input\" onChange={handleInputChange} rowsMax={4}/>\n        </FormControl>\n      </div>\n      <div>\n      <FormControl className={classes.formControl}>\n          <InputLabel id=\"offer-type-select\" style={{color: \"black\"}}>Category</InputLabel>\n          <Select\n            labelId=\"offer-type-select\"\n            id=\"offer-type\"\n            onChange={(e) => handleCategorySelection(e)}\n          >\n            <MenuItem value={\"Books\"}>Books</MenuItem>\n            <MenuItem value={\"Clothing\"}>Clothing</MenuItem>\n            <MenuItem value={\"Electronics\"}>Electronics</MenuItem>\n            <MenuItem value={\"Home Decor\"}>Home Decor</MenuItem>\n            <MenuItem value={\"Kitchen\"}>Kitchen</MenuItem>\n            <MenuItem value={\"Music\"}>Music</MenuItem>\n            <MenuItem value={\"Video Games\"}>Video Games</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <div className=\"post-item-or-service-buttons\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={validateForm}\n          type=\"submit\"\n          name=\"post-button\"\n        >\n          Update Item\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={()=>handleCloseModal('close-button')}\n          type=\"submit\"\n          name=\"close-button\"\n        >\n         Close\n        </Button>\n      </div>\n    </div>\n  );\n\n  return(\n    <>\n      {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Post Successful!</h2></div> : <></>}\n\n      {/* Form for posting the item */}\n\n      <Modal\n        open={modalOpen}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {postItemBody}\n      </Modal>\n\n      {/* Dialog box that displays any errors in the user provided data */}\n\n      <Dialog\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"The Following Are Required:\"}\n        </DialogTitle>\n        <List>\n          {formErrors.map((error) => (\n            <ListItem>\n              <ListItemText>\n                {error}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n\n      {/* Dialog box that that asks the user to confirm their provided data */}\n      \n      <Dialog\n      open={confirmPostDialogBox}\n      onClose={closeConfirmPostDialogBox}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure that you want to update this item?\"}\n        </DialogTitle>\n        <div className=\"confirmation-buttons-post-sale-item\">\n          <div className=\"cancel-button__post-item\">\n            <Button onClick={closeConfirmPostDialogBox} className={classes.buttons} color=\"secondary\" variant=\"contained\">\n              Cancel\n            </Button>\n          </div>\n          <div className=\"confirm-button__post-item\">\n            <Button className={classes.buttons} color=\"secondary\" variant=\"contained\" autoFocus onClick={postItem}>\n              Confirm\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  )\n}\n\nexport default UpdateSaleItem;","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/purchase_functionality/Purchase.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/bid_functionality/Bid.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostItem.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/Message.js",["213","214","215"],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":67,"column":6,"nodeType":"222","endLine":67,"endColumn":8,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":28,"column":6,"nodeType":"222","endLine":28,"endColumn":8,"suggestions":"225"},{"ruleId":"220","severity":1,"message":"226","line":93,"column":5,"nodeType":"222","endLine":93,"endColumn":7,"suggestions":"227"},{"ruleId":"220","severity":1,"message":"228","line":58,"column":6,"nodeType":"222","endLine":58,"endColumn":8,"suggestions":"229"},{"ruleId":"220","severity":1,"message":"228","line":57,"column":6,"nodeType":"222","endLine":57,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":100,"column":3,"nodeType":"233","messageId":"234","endLine":100,"endColumn":8},{"ruleId":"235","severity":1,"message":"236","line":117,"column":7,"nodeType":"237","messageId":"238","endLine":117,"endColumn":15},{"ruleId":"235","severity":1,"message":"239","line":118,"column":7,"nodeType":"237","messageId":"238","endLine":118,"endColumn":16},{"ruleId":"235","severity":1,"message":"240","line":125,"column":10,"nodeType":"237","messageId":"238","endLine":125,"endColumn":25},{"ruleId":"235","severity":1,"message":"241","line":125,"column":27,"nodeType":"237","messageId":"238","endLine":125,"endColumn":45},{"ruleId":"235","severity":1,"message":"242","line":2,"column":10,"nodeType":"237","messageId":"238","endLine":2,"endColumn":21},{"ruleId":"235","severity":1,"message":"243","line":2,"column":23,"nodeType":"237","messageId":"238","endLine":2,"endColumn":34},{"ruleId":"235","severity":1,"message":"244","line":69,"column":10,"nodeType":"237","messageId":"238","endLine":69,"endColumn":19},{"ruleId":"235","severity":1,"message":"245","line":71,"column":24,"nodeType":"237","messageId":"238","endLine":71,"endColumn":39},{"ruleId":"235","severity":1,"message":"246","line":10,"column":2,"nodeType":"237","messageId":"238","endLine":10,"endColumn":18},{"ruleId":"235","severity":1,"message":"247","line":11,"column":2,"nodeType":"237","messageId":"238","endLine":11,"endColumn":10},{"ruleId":"235","severity":1,"message":"248","line":20,"column":8,"nodeType":"237","messageId":"238","endLine":20,"endColumn":14},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currUserId'. Either include it or remove the dependency array.","ArrayExpression",["251"],"React Hook useEffect has missing dependencies: 'currUserId' and 'dispatch'. Either include them or remove the dependency array.",["252"],"React Hook useEffect has missing dependencies: 'currUserId', 'dispatch', and 'id'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'data', 'findIndex', and 'userId'. Either include them or remove the dependency array.",["254"],["255"],"no-dupe-keys","Duplicate key 'image'.","ObjectExpression","unexpected","no-unused-vars","'itemData' is defined but never used.","Identifier","unusedVar","'tableData' is defined but never used.","'selectedItemIdx' is assigned a value but never used.","'setSelectedItemIdx' is assigned a value but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'itemPrice' is assigned a value but never used.","'setPopupVisible' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'TextArea' is defined but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"262","fix":"264"},"Update the dependencies array to be: [currUserId]",{"range":"265","text":"266"},"Update the dependencies array to be: [currUserId, dispatch]",{"range":"267","text":"268"},"Update the dependencies array to be: [currUserId, dispatch, id]",{"range":"269","text":"270"},"Update the dependencies array to be: [data, findIndex, userId]",{"range":"271","text":"272"},{"range":"273","text":"272"},[2409,2411],"[currUserId]",[1159,1161],"[currUserId, dispatch]",[3615,3617],"[currUserId, dispatch, id]",[1364,1366],"[data, findIndex, userId]",[1370,1372]]