[{"/home/ryan/aa_projects/hiNeighbor/client/src/index.js":"1","/home/ryan/aa_projects/hiNeighbor/client/src/theme.js":"2","/home/ryan/aa_projects/hiNeighbor/client/src/App.js":"3","/home/ryan/aa_projects/hiNeighbor/client/src/reportWebVitals.js":"4","/home/ryan/aa_projects/hiNeighbor/client/src/store/configureStore.js":"5","/home/ryan/aa_projects/hiNeighbor/client/src/actions/userCredsAction.js":"6","/home/ryan/aa_projects/hiNeighbor/client/src/components/ProtectedRoute.js":"7","/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/TopBar.js":"8","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/HomePage.js":"9","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/UserStats.js":"10","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Items.js":"11","/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/PostItem.js":"12","/home/ryan/aa_projects/hiNeighbor/client/src/components/login/Login.js":"13","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js":"14","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostedItems.js":"15","/home/ryan/aa_projects/hiNeighbor/client/src/components/seller_profile/SellerProfile.js":"16","/home/ryan/aa_projects/hiNeighbor/client/src/reducers/userCredsReducer.js":"17","/home/ryan/aa_projects/hiNeighbor/client/src/reducers/searchCategoryReducer.js":"18","/home/ryan/aa_projects/hiNeighbor/client/src/actions/types.js":"19","/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/UserDropdown.js":"20","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/PriceRange.js":"21","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Distance.js":"22","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/OfferType.js":"23","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/SearchBar.js":"24","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Category.js":"25","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/ProfitsChart.js":"26","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/SalesChart.js":"27","/home/ryan/aa_projects/hiNeighbor/client/src/actions/itemsActions.js":"28","/home/ryan/aa_projects/hiNeighbor/client/src/actions/searchCategoryActions.js":"29"},{"size":923,"mtime":1607042916884,"results":"30","hashOfConfig":"31"},{"size":260,"mtime":1607897400590,"results":"32","hashOfConfig":"31"},{"size":3334,"mtime":1609196249624,"results":"33","hashOfConfig":"31"},{"size":362,"mtime":1606955886074,"results":"34","hashOfConfig":"31"},{"size":549,"mtime":1607214752236,"results":"35","hashOfConfig":"31"},{"size":180,"mtime":1607042411814,"results":"36","hashOfConfig":"31"},{"size":270,"mtime":1607163007833,"results":"37","hashOfConfig":"31"},{"size":1580,"mtime":1607896532670,"results":"38","hashOfConfig":"31"},{"size":2110,"mtime":1609196249624,"results":"39","hashOfConfig":"31"},{"size":2386,"mtime":1607818201713,"results":"40","hashOfConfig":"31"},{"size":12709,"mtime":1609196249624,"results":"41","hashOfConfig":"31"},{"size":7611,"mtime":1609196249624,"results":"42","hashOfConfig":"31"},{"size":2403,"mtime":1609196249624,"results":"43","hashOfConfig":"31"},{"size":8987,"mtime":1609196249624,"results":"44","hashOfConfig":"31"},{"size":6253,"mtime":1609196249624,"results":"45","hashOfConfig":"31"},{"size":8493,"mtime":1609196249624,"results":"46","hashOfConfig":"31"},{"size":583,"mtime":1607198055613,"results":"47","hashOfConfig":"31"},{"size":1517,"mtime":1607532945799,"results":"48","hashOfConfig":"31"},{"size":341,"mtime":1607311027398,"results":"49","hashOfConfig":"31"},{"size":2642,"mtime":1607895969250,"results":"50","hashOfConfig":"31"},{"size":2227,"mtime":1608792815492,"results":"51","hashOfConfig":"31"},{"size":1570,"mtime":1607715358677,"results":"52","hashOfConfig":"31"},{"size":1669,"mtime":1608793018652,"results":"53","hashOfConfig":"31"},{"size":1700,"mtime":1609196249624,"results":"54","hashOfConfig":"31"},{"size":1821,"mtime":1608792917602,"results":"55","hashOfConfig":"31"},{"size":2299,"mtime":1609196249624,"results":"56","hashOfConfig":"31"},{"size":3428,"mtime":1609196249624,"results":"57","hashOfConfig":"31"},{"size":334,"mtime":1607576439995,"results":"58","hashOfConfig":"31"},{"size":551,"mtime":1607215538636,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f3ig4u",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"79"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"79"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ryan/aa_projects/hiNeighbor/client/src/index.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/theme.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/App.js",["128","129","130","131","132","133","134"],"/home/ryan/aa_projects/hiNeighbor/client/src/reportWebVitals.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/store/configureStore.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/actions/userCredsAction.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/ProtectedRoute.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/TopBar.js",["135","136","137","138","139","140","141"],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/HomePage.js",["142","143","144","145"],"import React, { useState, useEffect } from 'react';\nimport './homepage.css';\nimport PriceRange from './PriceRange';\nimport Distance from './Distance';\nimport OfferType from './OfferType';\nimport SearchBar from './SearchBar';\nimport Category from './Category'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\n// import { view, Animated, TouchableOpacity, Text } from 'react-native';\nimport Items from './Items';\n\n\n\nconst HomePage = () => {\n  const items = useSelector(store => store.entities.items_state.items)\n  const [popupVisible, setPopupVisible] = useState(false)\n  console.log(items)\n\n  const handlePopUp = () => {\n    setPopupVisible(true)\n    setTimeout(() => {\n      setPopupVisible(false)\n    }, 3900);\n  }\n\n  // WAS TESTING THE INCLUDES FUNCTIONALITY OF SEQUELIZE ON THE SELLER PROFILE\n  // HERE SO THAT I COULD AVIOD A FEW CLICKS\n\n  // useEffect(() => {\n  //   (async() => {\n  //     const res = await fetch(`http://localhost:5000/api/users/${2}/get-seller-info`)\n  //     const sellerInfo = await res.json()\n  //     // items = postedItems\n  //     console.log('RETURNED ITEMS:', sellerInfo)\n  //     // setPostedItems(postedItems)\n  //   })()\n  // }, [])\n\n\n  return (\n    <>\n      {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Your purchase was successful</h2></div> : <></>}\n      <div className='category-container'>\n        <Category />\n      </div>\n      <div className='search-container'>\n        <div className='toggles'>\n          <div className='price-range-container'>\n            <h4>\n              <PriceRange />\n            </h4>\n          </div>\n          <div className='distance-container'>\n            <h4>\n              <Distance />\n            </h4>\n          </div>\n          <div className='offer-type-container'>\n            <h4>\n              <OfferType />\n            </h4>\n          </div>\n        </div>\n        <div className='search-bar-container'>\n          <h4>\n            <SearchBar />\n          </h4>\n        </div>\n      </div>\n      <Items />\n    </>\n\n  )\n}\n\n\nexport default HomePage;\n",["146","147"],"/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/UserStats.js",["148","149","150","151","152"],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Items.js",["153","154","155","156","157","158","159","160","161","162"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Paper,\n  Button,\n  FormControl,\n  InputLabel,\n  Input,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setItems } from '../../actions/itemsActions';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useHistory, Link, Switch } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n    // border: '2px solid black'\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n    color: theme.palette.secondary.contrastText,\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '110px'\n  },\n  buyNow: {\n    maxHeight: \"50px\"\n  }\n\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining, item_id, current_bid, item_price) {\n  return { name, price, bid, num_bidders, days_remaining, item_id, current_bid, item_price };\n}\n\n\nconst Items = () => {\n  let items = useSelector(store => store.entities.items_state.items)\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [currItemId, setCurrItemId] = useState(null)\n  const [currBid, setCurrBid] = useState(null)\n  const [currItemPrice, setCurrItemPrice] = useState(null)\n  const [bidInput, setBidInput] = useState(null)\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const history = useHistory();\n  console.log('ITEMS:', items)\n\n  const updateBidInput = (e) => {\n    console.log('BID INPUT:', e.target.value)\n    setBidInput(e.target.value)\n  }\n\n  const updateItems = (updatedItem) => {\n    console.log('CURRENT ITEM OBJECT:', updatedItem)\n    const id = updatedItem.id\n    console.log('ITEM ID:', id)\n    items.forEach((item, i) => {\n      console.log('UPDATING ITEMS')\n      if(item.id === id) {\n        // console.log('CURR ITEM:', currItems[i])\n        items[i] = updatedItem\n        // console.log('CURRITEMS:', items)\n        dispatch(setItems(items))\n        // setCurrItemsState(currItems)\n      }\n    })\n  }\n\n  const updateSoldItems = (id) => {\n    let currItems = []\n    console.log('SOLD ITEM ID:', id)\n    items.forEach((item, i) => {\n      console.log('CURRENT ITEMS ID:', id)\n      // console.log('UPDATING ITEMS')\n      if(Number(item.id) !== Number(id)) {\n        console.log('IDS DO NOT MATCH')\n        // console.log()\n        // console.log('CURR ITEM:', currItems[i])\n        currItems.push(item)\n        console.log('CURRITEMS:', items)\n\n        // setCurrItemsState(currItems)\n      }\n      dispatch(setItems(currItems))\n    })\n  }\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = (itemData) => {\n    console.log('ITEM DATA:', itemData)\n    setCurrItemId(itemData.itemId)\n    setDialogOpen(true)\n  }\n\n  const submitBid = async () => {\n\n    const body = {\n      bidInput,\n      currUserId\n    }\n\n    const res = await fetch(`http://localhost:5000/api/items-and-services/${currItemId}/bid`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    const updatedItem = await res.json()\n\n    console.log('RETURNED UPDATED ITEM:', updatedItem)\n\n    updateItems(updatedItem)\n    // alert(`bid of $${bidInput} was placed`)\n    setModalOpen(false)\n  }\n\n  const handlePurchase = async () => {\n    const body = {\n      currUserId\n    }\n\n    const res = await fetch(`http://localhost:5000/api/items-and-services/${currItemId}/purchase`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    const {soldItemId} = await res.json()\n    console.log(soldItemId)\n\n    updateSoldItems(soldItemId)\n    handleDialogClose()\n  }\n\n  const handleClick = (sellerId) => {\n    history.replace('/seller-profile')\n    console.log(sellerId)\n  }\n\n  const openBidModal = (itemData) => {\n    console.log('ITEM DATA:', itemData)\n    setCurrItemId(itemData.itemId)\n    setCurrBid(itemData.currentBid)\n    setCurrItemPrice(itemData.itemPrice)\n    setModalOpen(true)\n  }\n\n  const closeModal = () => {\n    setModalOpen(false)\n  }\n  let dataRows = []\n  return(\n      <div className=\"items-body-container\">\n      <div className=\"items-container\">\n        <Grid container spacing={4} className={classes.grid} >\n          {items.map((item) => {\n            let ext = item.image_data\n            console.log(ext)\n            return (\n              <Grid item xs={12} md={12}>\n                <Link to={`/seller-profile/${item.seller_id}`}>\n                <CardActionArea >\n                  <Card className={classes.paper}>\n                    <CardContent className={classes.image}>\n                      <img className=\"item-image-homepage\" src={`data:image/png;bas64`,require(`../../uploads/${ext}`).default} />\n                    </CardContent>\n                  </Card>\n                </CardActionArea>\n                </Link>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </div>\n      <div className=\"item-data-container\">\n\n          {items.forEach((item, idx) => {\n\n            const d1 = new Date(item.expiry_date)\n            const today = new Date()\n            today.setDate(today.getDate()+0)\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n            const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n            if(item.current_bid === null) {\n              dataRows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining, item.id, item.current_bid, item.price))\n            } else {\n              dataRows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining, item.id, item.current_bid, item.price))\n            }\n\n          })}\n            {/* console.log(dataRows) */}\n          {dataRows.map((item, idx) => {\n            return(\n              <div className=\"main-page-items-table-container\">\n              <TableContainer className={classes.tableContainer}>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                  <TableHead className={classes.tableHead}>\n                    <TableRow className={classes.tableHead}>\n                      {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                      <TableCell align=\"right\" className={classes.tableCell}>Item Name</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Full Sale Price</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Current Bid</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Number of Bidders</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Days Remaining</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n\n                    <TableRow key={dataRows[idx].name}>\n                      {/* <TableCell component=\"th\" scope=\"row\">\n                        {dataRows.name}\n                      </TableCell> */}\n                      {/* <TableCell align=\"right\">{dataRows[idx].name}</TableCell> */}\n                      <TableCell align=\"right\">{dataRows[idx].name}</TableCell>\n                      <TableCell align=\"right\">${dataRows[idx].price}</TableCell>\n                      <TableCell align=\"right\">${dataRows[idx].bid}</TableCell>\n                      <TableCell align=\"right\">{dataRows[idx].num_bidders}</TableCell>\n                      <TableCell align=\"right\">{dataRows[idx].days_remaining}</TableCell>\n                    </TableRow>\n\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <div className=\"bid-buy-buttons-container\">\n                <div className=\"bid-button\">\n                <Button variant=\"contained\" color=\"primary\" variant=\"outlined\" onClick={() => {openBidModal({'itemId': dataRows[idx].item_id, 'currentBid': dataRows[idx].current_bid, 'itemPrice': dataRows[idx].item_price})}}>\n                  Bid\n                </Button>\n                </div>\n                <div className=\"bid-purchase-divider\"></div>\n                <div className=\"buy-button\">\n                <Button variant=\"contained\" color=\"primary\" size=\"medium\" variant=\"outlined\" onClick={() => {handleDialogOpen({'itemId': dataRows[idx].item_id, 'currentBid': dataRows[idx].current_bid, 'itemPrice': dataRows[idx].item_price})}}>\n                  Purchase\n                </Button>\n                </div>\n                </div>\n\n              </div>\n              )\n          })}\n\n      </div>\n\n\n      {/* BID MODAL */}\n\n\n      <Modal\n      open={modalOpen}\n      onClose={closeModal}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.itemFormModal}>\n          <h2 id=\"simple-modal-title\">Place Your Bid:</h2>\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"bid-input\">Bid Amount</InputLabel>\n              <Input id=\"bid-input\" onChange={updateBidInput} autoFocus />\n            </FormControl>\n          </div>\n          <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ color: \"white\" }}\n            size=\"small\"\n            className={classes.submitButton}\n            onClick={() => {\n              if(Number(bidInput) <= currBid) {\n                alert('Your bid must be larger than the current bid amount')\n              } else if(Number(bidInput) > currItemPrice) {\n                alert('Your bid must be less than the item sell price')\n              } else {\n                submitBid()\n              }\n            }}\n            type=\"submit\"\n          >\n            Submit Bid\n          </Button>\n          </div>\n        </div>\n      </Modal>\n\n\n      {/* BUY NOW DIALOG BOX */}\n\n      <Dialog\n      open={dialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure that you want to purchase this item at its full sale price?\"}\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" autoFocus onClick={handlePurchase}>\n            Purchase Item\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Items;\n// onClick={() => {handleClick(item.seller_id)}}\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/PostItem.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import React, { useState } from 'react';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setPostItemFormStatus } from '../../actions/itemsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button\n} from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { useForm } from 'react-hook-form';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst fs = require('fs')\n\nconst useStyles = makeStyles((theme) => ({\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  }\n}));\n\n\n\n\nconst PostItem = (props) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  const [itemCategory, setItemCategory] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemOfferType, setItemOfferType] = useState(\"\");\n  const [itemQuantity, setItemQuantity] = useState(\"\");\n  const [imageData, setImageData] = useState('')\n  const [classTime, setClassTime] = useState(\"\");\n  const [modalClosed, setModalClosed] = useState('false')\n  const [encodedImg, setEncodedImg] = useState({})\n  const form_state = useSelector(store => store.entities.post_item_form_state.status)\n  const userId = useSelector(store => store.session.currentUser.id)\n  console.log(userId)\n  const { register, handleSubmit } = useForm()\n  const classes = useStyles()\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [popupVisible, setPopupVisible] = useState(false)\n  const[modalOpen, setModalOpen] = useState(true)\n\n\n  console.log('CURRENT USER ID:', userId)\n\n  const handleInputChange = (e) => {\n    if (e.target.id === \"name-input\") {\n      setItemName(e.target.value);\n    } else if (e.target.id === \"description-input\") {\n      setItemDescription(e.target.value);\n    } else if(e.target.id === \"category-input\") {\n      setItemCategory(e.target.value);\n    } else if(e.target.id === \"sell-price-input\") {\n      setItemPrice(e.target.value)\n    }else if(e.target.id === \"quantitiy-input\") {\n      setItemQuantity(e.target.value)\n    } else if(e.target.id === \"offer-type-input\") {\n      setItemOfferType(e.target.value)\n    }\n  };\n\n  const handleCloseModal = () => {\n    console.log('MODAL STATE:', modalOpen)\n    setModalOpen(false)\n    setPopupVisible(true)\n    setTimeout(() => {\n      setPopupVisible(false)\n      dispatch(setPostItemFormStatus(false))\n    }, 2500)\n  }\n\n  const postItem = async() => {\n\n    let itemForSale = true\n    if(itemOfferType.toLocaleLowerCase() === 'rent') {\n      itemForSale = false\n    }\n    const expiryDate = new Date()\n    expiryDate.setDate(expiryDate.getDate() + 30);\n    console.log(expiryDate)\n    const body = {\n      userId,\n      itemName,\n      itemDescription,\n      itemCategory,\n      itemPrice,\n      itemQuantity,\n      itemForSale,\n      imageData,\n      expiryDate\n    }\n\n    console.log('EXPIRY DATE:', body)\n\n    const res = await fetch('http://localhost:5000/api/items-and-services/post-item', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const newItem = await res.json()\n    console.log(newItem)\n    handleCloseModal()\n  }\n\n\n  const uploadPhoto = async (data) => {\n    console.log(data.image[0].name)\n    const fd = new FormData();\n    fd.append('Image', data.image[0], data.image[0].name)\n    console.log(fd)\n\n    const res = await fetch('http://localhost:5000/api/items-and-services/upload-photo', {\n      method: 'POST',\n      body: fd\n    })\n\n    const image = await res.json()\n    const path = image.path.split('/')\n    const image_extenstion = path[path.length-1]\n    // console.log(image.path.split('/'))\n    setImageData(image_extenstion)\n    console.log(image_extenstion)\n    // console.log(image)\n    // setImageData(image)\n    alert('Upload Successful!')\n\n  }\n\n  console.log(imageData)\n\n  const postItemBody = (\n    <div className={classes.itemFormModal}>\n      <h2 id=\"simple-modal-title\">Item Info:</h2>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"name-input\">Name</InputLabel>\n          <Input id=\"name-input\" onChange={handleInputChange} autoFocus />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n          <Input id=\"description-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"category-input\">Category</InputLabel>\n          <Input id=\"category-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"quantitiy-input\">Quantity</InputLabel>\n          <Input id=\"quantitiy-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"sell-price-input\">Sell Price</InputLabel>\n          <Input id=\"sell-price-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"offer-type-input\"> Rent or Sell</InputLabel>\n          <Input id=\"offer-type-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div>\n      <div>\n        <form onSubmit={handleSubmit(uploadPhoto)}>\n          <input ref={register} type=\"file\" id=\"upload-image-input\" name='image'/>\n          <button>Confirm Upload</button>\n        </form>\n      </div>\n      <div className=\"post_item_or_service_buttons\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={postItem}\n          type=\"submit\"\n        >\n          Post Item\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={handleCloseModal}\n          type=\"submit\"\n        >\n         Close\n        </Button>\n      </div>\n    </div>\n  );\n\n\n\n\n  return(\n    <>\n    {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Post Successful!</h2></div> : <></>}\n    <Modal\n    open={(() => {\n      if(form_state === false || form_state === 'undefined' || modalOpen === false) {\n        console.log('FALSE')\n        return false\n      }\n      console.log('TRUE')\n      return true\n    })()}\n    aria-labelledby=\"simple-modal-title\"\n    aria-describedby=\"simple-modal-description\"\n    >\n    {postItemBody}\n    </Modal>\n    </>\n\n  )\n\n}\n\nexport default PostItem;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/login/Login.js",["179","180","181"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, Redirect } from 'react-router-dom'\nimport setUserCreds from '../../actions/userCredsAction'\nimport './login.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      // width: '25ch',\n      width: '500px'\n    },\n  },\n}));\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const updateInput = (e) => {\n    if(e.target.name === 'password-input') {\n      setPassword(e.target.value)\n    } else {\n      setEmail(e.target.value)\n    }\n  }\n\n  const handleSubmit = async () => {\n    const body = {\n      email,\n      password\n    }\n    console.log(body)\n    const res = await fetch('http://localhost:5000/api/users/token', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const { user } = await res.json()\n\n    if(user) {\n      const payload = {\n        id: user.id,\n        username: user.userName,\n        firstName: user.firstName,\n        lastName: user.lastName\n      }\n      dispatch(setUserCreds(payload))\n      props.setAuthenticated(true)\n    }\n  }\n\n\n  if(props.authenticated === true) {\n    return <Redirect to=\"/\" exact={true}/>\n  }\n\n  return (\n    <div className=\"sign-in-container\">\n    <div className=\"sign-in-page\">\n      <div className=\"site-name-sign-in\">\n        <h1>Hi Neighbor!</h1>\n      </div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField id=\"filled-basic\" label=\"Email:\" variant=\"filled\" name=\"email-input\" onChange={updateInput}/>\n        <div className=\"password-field\">\n        <TextField id=\"filled-basic\" label=\"Password:\" type=\"password\" variant=\"filled\" name=\"password-input\" fullWidth={true} onChange={updateInput}/>\n        </div>\n        <Button onClick={handleSubmit}  variant=\"contained\" color=\"secondary\">\n          Submit\n        </Button>\n      </form>\n    </div>\n    </div>\n  )\n}\n\n\nexport default Login;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js",["182","183","184","185","186","187","188","189","190","191"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { GiFalloutShelter } from 'react-icons/gi';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    // width: '800px'\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n}))\n\nfunction createData(name, seller, purchase_price, purchase_date) {\n  return { name, seller, purchase_price, purchase_date };\n}\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nconst PurchaseHistory = () => {\n\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [postedItems, setPostedItems] = useState({'items': [], 'users': []})\n  const [dataRows, setDataRows] = useState([])\n  const[ratingVisibility, setRatingVisibility] = useState({})\n  const[currItem, setCurrItem] = useState(null)\n  const[itemRating, setItemRating] = useState(null)\n  const [selectedRatingButton, setSelectedRatingButton] = useState(null)\n  const classes = useStyles()\n  let items = []\n  let ratingState = {}\n  // console.log('ITEMS:', items)\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`http://localhost:5000/api/users/${currUserId}/get-purchase-history`)\n      const postedItems = await res.json()\n      // items = postedItems\n      console.log('RETURNED ITEMS:', postedItems)\n      postedItems.items.forEach((item, i) => {\n        ratingState[i] = false\n        let month = item.date_sold.slice(5,7)\n        console.log(month)\n        let day = item.date_sold.slice(8,10)\n        console.log(day)\n        let year = item.date_sold.slice(0, 4)\n        if(item.current_bid === null) {\n          rows.push(createData(item.name, postedItems.users[item.seller_id - postedItems.items[0].seller_id].username, item.current_bid, month+'-'+day+'-'+year))\n        } else {\n          rows.push(createData(item.name, postedItems.users[item.seller_id - postedItems.items[0].seller_id].username, item.current_bid, month+'-'+day+'-'+year))\n        }\n      })\n      setDataRows(rows)\n      setRatingVisibility(ratingState)\n      setPostedItems(postedItems)\n    })()\n  }, [])\n\n  const updateItemRating = (e, value) => {\n    setItemRating(value)\n  }\n\n  const enableRating = (itemId, idx) => {\n    console.log(itemId)\n    let statecpy = {...ratingVisibility}\n    let value = ratingVisibility[idx]\n    statecpy[idx] = !value\n    if(selectedRatingButton !== null) {\n      statecpy[selectedRatingButton] = false\n    }\n    setCurrItem(itemId)\n    setRatingVisibility(statecpy)\n    setSelectedRatingButton(idx)\n  }\n\n  const submitRating = async(itemId, idx) => {\n   const body = {\n      currUserId,\n      itemRating\n    }\n\n    const res = await fetch(`http://localhost:5000/api/items-and-services/${currItem}/rate-item`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type':'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const rating = await res.json()\n    console.log('UPDATED RATING OBJECT:', rating)\n\n    enableRating(itemId, idx)\n  }\n\n  return(\n    <>\n    <div>\n      <h1>\n        Your Purchase History:\n      </h1>\n    </div>\n    <div className=\"items-body-container\">\n      <div className=\"items-container\">\n        <Grid container spacing={4} className={classes.grid} >\n          {postedItems.items.map((item) => {\n            // console.log(item)\n            let ext = item.image_data\n            console.log(ext)\n            return (\n              <Grid item xs={12} md={12}>\n                <Card className={classes.paper}>\n                  <CardContent className={classes.image}>\n                    <img className=\"item-image\" src={`data:image/png;bas64`,require(`../../uploads/${ext}`).default} />\n                  </CardContent>\n                </Card>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </div>\n      <div className=\"purchase-history-table-container\">\n\n          {postedItems.items.map((item, idx) => {\n            return(\n              <div className=\"purchase-history-table\">\n                 <TableContainer className={classes.tableContainer}>\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                      <TableHead className={classes.tableHead}>\n                        <TableRow>\n                          <TableCell align=\"right\" className={classes.tableCell}>seller</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Item Name</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Purchase Price</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Purchase Date</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow key={dataRows[idx].name}>\n                          <TableCell align=\"right\">{dataRows[idx].seller}</TableCell>\n                          <TableCell align=\"right\">{dataRows[idx].name}</TableCell>\n                          <TableCell align=\"right\">${dataRows[idx].purchase_price}</TableCell>\n                          <TableCell align=\"right\">{dataRows[idx].purchase_date}</TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                  <div className=\"rating-buttons-and-slider\">\n                    <div className=\"rate-and-submit-buttons\">\n                      <Button variant=\"outlined\" color=\"primary\" onClick={() => enableRating(item.id, idx)}>Rate item</Button>\n                      {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ? <></> : <div  className=\"submit-rating-button\"><Button variant=\"outlined\" color=\"primary\" onClick={() => submitRating(item.id, idx)}>Submit Rating</Button></div>}\n                    </div>\n                    {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ?\n                    <></>\n                    :  <div className={classes.root}>\n                    <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n                      Rating:\n                    </Typography>\n                      <Slider\n                        defaultValue={postedItems.reviews[idx].rating}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider-small-steps\"\n                        step={1}\n                        marks\n                        min={1}\n                        max={5}\n                        valueLabelDisplay=\"auto\"\n                        onChange={updateItemRating}\n                      />\n                    </div>}\n                  </div>\n              </div>\n            )\n          })}\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default PurchaseHistory;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostedItems.js",["192","193","194","195","196","197","198","199","200"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  }\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining) {\n  return { name, price, bid, num_bidders, days_remaining };\n}\n\nconst PostedItems = () => {\n\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [postedItems, setPostedItems] = useState([])\n  const [dataRows, setDataRows] = useState([])\n  const classes = useStyles()\n  let items = []\n  // console.log('ITEMS:', items)\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`http://localhost:5000/api/users/${currUserId}/get-posted-items`)\n      const postedItems = await res.json()\n      // items = postedItems\n      if(postedItems.length === 0) {\n        return\n      }\n      console.log('RETURNED ITEMS:', postedItems)\n\n      postedItems.forEach((item, idx) => {\n        const d1 = new Date(postedItems[idx].expiry_date)\n        console.log('EXPIRY DATE:', d1)\n        const today = new Date()\n        today.setDate(today.getDate()+0)\n        const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n        if(item.current_bid === null) {\n          rows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining))\n        } else {\n          rows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining))\n        }\n      })\n      console.log('ROWS:', rows)\n      setDataRows(rows)\n      setPostedItems(postedItems)\n    })()\n  }, [])\n\n  return(\n    <>\n    <div>\n      <h1>\n        Your Items for Sale:\n      </h1>\n    </div>\n    <div className=\"items-body-container\">\n      <div className=\"items-container\">\n        <Grid container spacing={4} className={classes.grid} >\n          {postedItems.map((item) => {\n            // console.log(item)\n            let ext = item.image_data\n            // console.log(ext)\n            return (\n              <Grid item xs={12} md={12}>\n                <Card className={classes.paper}>\n                  <CardContent className={classes.image}>\n                    <img className=\"item-image\" src={`data:image/png;bas64`,require(`../../uploads/${ext}`).default} />\n                  </CardContent>\n                </Card>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </div>\n      <ul>\n        {postedItems.map((item, idx) => {\n          return(\n            <div className=\"posted-items-table-container\">\n          <TableContainer className={classes.tableContainer}>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead className={classes.tableHead}>\n                <TableRow>\n                  {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                  <TableCell align=\"right\" className={classes.tableCell}>Full Sale Price</TableCell>\n                  <TableCell align=\"right\" className={classes.tableCell}>Current Bid</TableCell>\n                  <TableCell align=\"right\" className={classes.tableCell}>Number of Bidders</TableCell>\n                  <TableCell align=\"right\" className={classes.tableCell}>Days Remaining</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n\n                <TableRow key={dataRows[idx].name}>\n                  {/* <TableCell component=\"th\" scope=\"row\">\n                    {dataRows.name}\n                  </TableCell> */}\n                  {/* <TableCell align=\"right\">{dataRows[idx].name}</TableCell> */}\n                  <TableCell align=\"right\">${dataRows[idx].price}</TableCell>\n                  <TableCell align=\"right\">${dataRows[idx].bid}</TableCell>\n                  <TableCell align=\"right\">{dataRows[idx].num_bidders}</TableCell>\n                  <TableCell align=\"right\">{dataRows[idx].days_remaining}</TableCell>\n                </TableRow>\n\n              </TableBody>\n            </Table>\n          </TableContainer>\n          </div>\n          )\n        })}\n      </ul>\n    </div>\n    </>\n  )\n}\n\nexport default PostedItems;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/seller_profile/SellerProfile.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { GiClawSlashes, GiCrackedMask, GiAbstract017 } from \"react-icons/gi\";\nimport { useParams } from 'react-router';\nimport './sellerProfile.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px',\n    // padding: '10px',\n  },\n  paper: {\n    // textAlign: 'center',\n    // backgroundColor: theme.palette.secondary.light,\n    // background: theme.palette.success.light,\n    // color: theme.palette.secondary.contrastText,\n    // height: '200px',\n    // width: '200px'\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: 'white',\n    background: 'white',\n    color: theme.palette.secondary.contrastText,\n    height: '300px',\n    width: '300px',\n    // marginLeft: '200px',\n    marginLeft: '20px',\n    padding: '50px',\n\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: 'center',\n    alignItems: \"center\",\n    padding: '10px',\n    height: '300px',\n    marginBottom: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    // minWidth: 650,\n    minWidth: 350,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px',\n    width: '400px',\n    height: '94px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining) {\n  return { name, price, bid, num_bidders, days_remaining };\n}\n\n\n\nconst SellerProfile = () => {\n\n  const { id } = useParams()\n  const [userData, setUserData] = useState({'items': [], 'user': {}, 'sold': {}, 'reviews': {}})\n  const [dataRows, setDataRows] = useState([])\n  const classes = useStyles()\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`http://localhost:5000/api/users/${id}/get-seller-info`)\n      const sellerInfo = await res.json()\n      console.log('RETURNED ITEMS:', sellerInfo)\n      const d1 = new Date(sellerInfo.items[0].expiry_date)\n      const today = new Date()\n      today.setDate(today.getDate()+0)\n      const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n      const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n      sellerInfo.items.forEach(item => {\n        if(item.current_bid === null) {\n          rows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining))\n        } else {\n          rows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining))\n        }\n      })\n      setDataRows(rows)\n      setUserData(sellerInfo)\n    })()\n  },[])\n\n  return(\n    <>\n      <div className=\"seller-info\">\n        <div className=\"seller-username\">\n          <h3> Seller: </h3><h4 className=\"username\">{userData.user.username}</h4>\n        </div>\n        {/* <div className=\"seller-icon\">\n          <h2>\n            <GiCrackedMask />\n          </h2>\n        </div> */}\n        <div className=\"seller-sold-items-count\">\n          <h3> Items sold:</h3><h4 className=\"sell-count\">{userData.sold.count}</h4>\n        </div>\n        <div className=\"seller-sold-items-count\">\n          <h3> Average Rating:</h3><h4 className=\"average-ratings\">{userData.reviews.average === 0 ? 'No Ratings' : `${Number(userData.reviews.average).toFixed(2)} Stars`}</h4>\n        </div>\n        <div className=\"num-seller-ratings\">\n          <h3>Ratings:</h3><h4 className=\"num-ratings\">{userData.reviews.num_ratings === 0 ? <p> No Ratings</p> : <p>{userData.reviews.num_ratings}</p>}</h4>\n        </div>\n      </div>\n      <div>\n        <h1>\n        Current Items for Sale:\n        </h1>\n      </div>\n      <div className=\"seller-items-body-container\">\n        {/* <div className=\"seller-items-container\"> */}\n          <Grid container spacing={1} className={classes.grid} >\n            {userData.items.map((item, idx) => {\n              let ext = item.image_data\n              return (\n                <>\n                <Grid item xs={12} md={12}>\n                  <div className=\"item-name-seller-profile\"><h2 className=\"item-text\">{item.name}</h2></div>\n                  {/* <div className=\"inner-grid-container\"> */}\n                    <div className=\"seller-page-item-cards\">\n                      <Card className={classes.paper}>\n                        <CardContent className={classes.image}>\n                          <img className=\"item-image\" src={`data:image/png;bas64`,require(`../../uploads/${ext}`).default} />\n                        </CardContent>\n                      </Card>\n                      <div className=\"description-table-container\">\n                      <div className=\"item-description-conatiner\">\n                        {item.description}\n                      </div>\n                      <div className=\"table-container\">\n                        <TableContainer className={classes.tableContainer}>\n                          <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                            <TableHead className={classes.tableHead}>\n                              <TableRow>\n                                {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                                <TableCell align=\"right\" className={classes.tableCell}>Full Sale Price</TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>Current Bid</TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>Number of Bidders</TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>Days Remaining</TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n\n                              <TableRow key={dataRows[idx].name}>\n                                {/* <TableCell component=\"th\" scope=\"row\">\n                                  {dataRows.name}\n                                </TableCell> */}\n                                {/* <TableCell align=\"right\">{dataRows[idx].name}</TableCell> */}\n                                <TableCell align=\"right\">${dataRows[idx].price}</TableCell>\n                                <TableCell align=\"right\">${dataRows[idx].bid}</TableCell>\n                                <TableCell align=\"right\">{dataRows[idx].num_bidders}</TableCell>\n                                <TableCell align=\"right\">{dataRows[idx].days_remaining}</TableCell>\n                              </TableRow>\n\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      </div>\n                    </div>\n                    </div>\n\n                  {/* </div> */}\n                </Grid>\n                <div className=\"divider\">\n\n                </div>\n                </>\n              )\n            })}\n          </Grid>\n        {/* </div> */}\n      </div>\n    </>\n  )\n}\n\nexport default SellerProfile;\n","/home/ryan/aa_projects/hiNeighbor/client/src/reducers/userCredsReducer.js",["216"],"/home/ryan/aa_projects/hiNeighbor/client/src/reducers/searchCategoryReducer.js",["217"],"/home/ryan/aa_projects/hiNeighbor/client/src/actions/types.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/UserDropdown.js",["218","219","220","221"],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/PriceRange.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Distance.js",["222"],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/OfferType.js",["223"],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/SearchBar.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Category.js",["224"],"/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/ProfitsChart.js",["225","226","227"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst ProfitsChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [profitData, setProfitData] = useState([])\n\n\n\n  // const months = {1: 'Janurary', 2: 'Februrary', 3: 'March', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'August', 9: 'September', 10: 'October', 11: 'November', 12: 'December'}\n  let data =\n  [\n  { x: 1, y: 30, label: 'Janurary'},\n  { x: 2, y: 40, label: 'Februrary' },\n  { x: 3, y: 35, label: 'March' },\n  { x: 4, y: 70, label: 'April' },\n  { x: 5, y: 90, label: 'May' },\n  { x: 6, y: 50, label: 'June' },\n  { x: 7, y: 100, label: 'July' },\n  { x: 8, y: 50, label: 'August' },\n  { x: 9, y: 90, label: 'September' },\n  { x: 10, y: 80, label: 'October' },\n  { x: 11, y: 90, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      console.log('SALES DATA:', data)\n      items.forEach(item => {\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        if(item.price !== item.current_bid) {\n          data[idx].y += item.current_bid\n        }else {\n          data[idx].y += item.price\n        }\n      })\n      setProfitData(data)\n    })()\n  }, [])\n\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Profits'\n    },\n    axisY: {\n      title: 'Profit',\n      prefix: '$'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: profitData\n    }]\n  }\n\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default ProfitsChart;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/SalesChart.js",["228","229","230","231","232","233","234"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst SalesChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [salesData, setSalesData] = useState([])\n  const [salesButtonState, setSalesButtonState] = useState(true)\n  const [profitsButtonState, setProfitsButtonState] = useState(false)\n\n\n  // const months = {1: 'Janurary', 2: 'Februrary', 3: 'March', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'August', 9: 'September', 10: 'October', 11: 'November', 12: 'December'}\n  let data =\n  [\n  { x: 1, y: 10, label: 'Janurary'},\n  { x: 2, y: 5, label: 'Februrary' },\n  { x: 3, y: 15, label: 'March' },\n  { x: 4, y: 20, label: 'April' },\n  { x: 5, y: 10, label: 'May' },\n  { x: 6, y: 2, label: 'June' },\n  { x: 7, y: 3, label: 'July' },\n  { x: 8, y: 9, label: 'August' },\n  { x: 9, y: 25, label: 'September' },\n  { x: 10, y: 4, label: 'October' },\n  { x: 11, y: 9, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      console.log('SALES DATA:', data)\n      items.forEach(item => {\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        console.log(idx)\n        data[idx].y += 1\n        console.log(data)\n      })\n      setSalesData(data)\n    })()\n  }, [])\n\n  const handleClick = (e) => {\n    if(e.target.name === 'profits') {\n      if(profitsButtonState === false) {\n        setProfitsButtonState(true)\n        setSalesButtonState(false)\n      } else {\n        setProfitsButtonState(false)\n        setSalesButtonState(true)\n\n      }\n    } else {\n      if(salesButtonState === false) {\n        setSalesButtonState(true)\n        setProfitsButtonState(false)\n\n      }else {\n        setSalesButtonState(false)\n        setProfitsButtonState(true)\n      }\n    }\n  }\n\n  const resetItem = async() => {\n    // await fetch(`http://localhost:5000/api/items-and-services/${12}/unpurchase`,{\n      //   method: 'PATCH'\n      // })\n    }\n\n    const getCheese = async() => {\n      // const res = await fetch(`http://localhost:5000/api/items-and-services/${12}/cheese`)\n      // const {date} = await res.json()\n\n      // const dateobj = new Date(date)\n    // const diffDays = Math.round(Math.abs((dateobj - d1) / oneDay));\n\n    // console.log(diffDays)\n  }\n\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Sales'\n    },\n    axisY: {\n      title: 'Number of Sales'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: salesData\n    }]\n  }\n  const graph_1 = (\n    <div className=\"chart-data\">\n      <CanvasJSChart options={ options } />\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default SalesChart;\n","/home/ryan/aa_projects/hiNeighbor/client/src/actions/itemsActions.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/actions/searchCategoryActions.js",[],{"ruleId":"235","severity":1,"message":"236","line":2,"column":32,"nodeType":"237","messageId":"238","endLine":2,"endColumn":40},{"ruleId":"235","severity":1,"message":"239","line":9,"column":8,"nodeType":"237","messageId":"238","endLine":9,"endColumn":13},{"ruleId":"235","severity":1,"message":"240","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":16},{"ruleId":"235","severity":1,"message":"241","line":18,"column":9,"nodeType":"237","messageId":"238","endLine":18,"endColumn":14},{"ruleId":"235","severity":1,"message":"242","line":19,"column":9,"nodeType":"237","messageId":"238","endLine":19,"endColumn":19},{"ruleId":"235","severity":1,"message":"243","line":23,"column":9,"nodeType":"237","messageId":"238","endLine":23,"endColumn":16},{"ruleId":"244","severity":1,"message":"245","line":59,"column":6,"nodeType":"246","endLine":59,"endColumn":8,"suggestions":"247"},{"ruleId":"235","severity":1,"message":"248","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":23},{"ruleId":"235","severity":1,"message":"249","line":4,"column":25,"nodeType":"237","messageId":"238","endLine":4,"endColumn":38},{"ruleId":"235","severity":1,"message":"250","line":4,"column":40,"nodeType":"237","messageId":"238","endLine":4,"endColumn":53},{"ruleId":"235","severity":1,"message":"251","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"235","severity":1,"message":"252","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":9,"column":23,"nodeType":"237","messageId":"238","endLine":9,"endColumn":31},{"ruleId":"235","severity":1,"message":"253","line":25,"column":9,"nodeType":"237","messageId":"238","endLine":25,"endColumn":17},{"ruleId":"235","severity":1,"message":"254","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"255","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":21},{"ruleId":"235","severity":1,"message":"256","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":16},{"ruleId":"235","severity":1,"message":"257","line":20,"column":9,"nodeType":"237","messageId":"238","endLine":20,"endColumn":20},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"235","severity":1,"message":"254","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"255","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":21},{"ruleId":"235","severity":1,"message":"262","line":12,"column":9,"nodeType":"237","messageId":"238","endLine":12,"endColumn":15},{"ruleId":"235","severity":1,"message":"263","line":13,"column":21,"nodeType":"237","messageId":"238","endLine":13,"endColumn":33},{"ruleId":"235","severity":1,"message":"264","line":61,"column":9,"nodeType":"237","messageId":"238","endLine":61,"endColumn":16},{"ruleId":"235","severity":1,"message":"254","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"265","line":7,"column":3,"nodeType":"237","messageId":"238","endLine":7,"endColumn":8},{"ruleId":"235","severity":1,"message":"266","line":13,"column":22,"nodeType":"237","messageId":"238","endLine":13,"endColumn":32},{"ruleId":"235","severity":1,"message":"267","line":14,"column":36,"nodeType":"237","messageId":"238","endLine":14,"endColumn":43},{"ruleId":"235","severity":1,"message":"268","line":20,"column":28,"nodeType":"237","messageId":"238","endLine":20,"endColumn":34},{"ruleId":"235","severity":1,"message":"269","line":219,"column":9,"nodeType":"237","messageId":"238","endLine":219,"endColumn":20},{"ruleId":"270","severity":1,"message":"271","line":249,"column":23,"nodeType":"272","endLine":249,"endColumn":131},{"ruleId":"273","severity":1,"message":"274","line":249,"column":87,"nodeType":"275","messageId":"276","endLine":249,"endColumn":88},{"ruleId":"277","severity":1,"message":"278","line":310,"column":61,"nodeType":"279","endLine":310,"endColumn":79},{"ruleId":"277","severity":1,"message":"278","line":316,"column":75,"nodeType":"279","endLine":316,"endColumn":93},{"ruleId":"235","severity":1,"message":"280","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"235","severity":1,"message":"281","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":21},{"ruleId":"235","severity":1,"message":"282","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":19},{"ruleId":"235","severity":1,"message":"283","line":16,"column":8,"nodeType":"237","messageId":"238","endLine":16,"endColumn":12},{"ruleId":"235","severity":1,"message":"284","line":17,"column":8,"nodeType":"237","messageId":"238","endLine":17,"endColumn":16},{"ruleId":"235","severity":1,"message":"285","line":18,"column":7,"nodeType":"237","messageId":"238","endLine":18,"endColumn":9},{"ruleId":"235","severity":1,"message":"286","line":59,"column":10,"nodeType":"237","messageId":"238","endLine":59,"endColumn":20},{"ruleId":"235","severity":1,"message":"287","line":59,"column":22,"nodeType":"237","messageId":"238","endLine":59,"endColumn":35},{"ruleId":"235","severity":1,"message":"288","line":67,"column":10,"nodeType":"237","messageId":"238","endLine":67,"endColumn":19},{"ruleId":"235","severity":1,"message":"289","line":67,"column":21,"nodeType":"237","messageId":"238","endLine":67,"endColumn":33},{"ruleId":"235","severity":1,"message":"290","line":68,"column":10,"nodeType":"237","messageId":"238","endLine":68,"endColumn":21},{"ruleId":"235","severity":1,"message":"291","line":68,"column":23,"nodeType":"237","messageId":"238","endLine":68,"endColumn":37},{"ruleId":"235","severity":1,"message":"292","line":69,"column":10,"nodeType":"237","messageId":"238","endLine":69,"endColumn":20},{"ruleId":"235","severity":1,"message":"293","line":69,"column":22,"nodeType":"237","messageId":"238","endLine":69,"endColumn":35},{"ruleId":"235","severity":1,"message":"294","line":76,"column":10,"nodeType":"237","messageId":"238","endLine":76,"endColumn":22},{"ruleId":"235","severity":1,"message":"295","line":76,"column":24,"nodeType":"237","messageId":"238","endLine":76,"endColumn":39},{"ruleId":"235","severity":1,"message":"254","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"296","line":5,"column":23,"nodeType":"237","messageId":"238","endLine":5,"endColumn":34},{"ruleId":"235","severity":1,"message":"243","line":26,"column":9,"nodeType":"237","messageId":"238","endLine":26,"endColumn":16},{"ruleId":"235","severity":1,"message":"297","line":5,"column":3,"nodeType":"237","messageId":"238","endLine":5,"endColumn":17},{"ruleId":"235","severity":1,"message":"266","line":9,"column":22,"nodeType":"237","messageId":"238","endLine":9,"endColumn":32},{"ruleId":"235","severity":1,"message":"255","line":10,"column":10,"nodeType":"237","messageId":"238","endLine":10,"endColumn":21},{"ruleId":"235","severity":1,"message":"267","line":10,"column":36,"nodeType":"237","messageId":"238","endLine":10,"endColumn":43},{"ruleId":"235","severity":1,"message":"265","line":17,"column":8,"nodeType":"237","messageId":"238","endLine":17,"endColumn":13},{"ruleId":"235","severity":1,"message":"298","line":20,"column":10,"nodeType":"237","messageId":"238","endLine":20,"endColumn":26},{"ruleId":"235","severity":1,"message":"241","line":115,"column":7,"nodeType":"237","messageId":"238","endLine":115,"endColumn":12},{"ruleId":"244","severity":1,"message":"299","line":142,"column":6,"nodeType":"246","endLine":142,"endColumn":8,"suggestions":"300"},{"ruleId":"270","severity":1,"message":"271","line":199,"column":21,"nodeType":"272","endLine":199,"endColumn":120},{"ruleId":"273","severity":1,"message":"274","line":199,"column":76,"nodeType":"275","messageId":"276","endLine":199,"endColumn":77},{"ruleId":"235","severity":1,"message":"297","line":5,"column":3,"nodeType":"237","messageId":"238","endLine":5,"endColumn":17},{"ruleId":"235","severity":1,"message":"256","line":7,"column":3,"nodeType":"237","messageId":"238","endLine":7,"endColumn":9},{"ruleId":"235","severity":1,"message":"266","line":9,"column":22,"nodeType":"237","messageId":"238","endLine":9,"endColumn":32},{"ruleId":"235","severity":1,"message":"255","line":10,"column":10,"nodeType":"237","messageId":"238","endLine":10,"endColumn":21},{"ruleId":"235","severity":1,"message":"267","line":10,"column":36,"nodeType":"237","messageId":"238","endLine":10,"endColumn":43},{"ruleId":"235","severity":1,"message":"241","line":104,"column":7,"nodeType":"237","messageId":"238","endLine":104,"endColumn":12},{"ruleId":"244","severity":1,"message":"301","line":134,"column":6,"nodeType":"246","endLine":134,"endColumn":8,"suggestions":"302"},{"ruleId":"270","severity":1,"message":"271","line":154,"column":21,"nodeType":"272","endLine":154,"endColumn":120},{"ruleId":"273","severity":1,"message":"274","line":154,"column":76,"nodeType":"275","messageId":"276","endLine":154,"endColumn":77},{"ruleId":"235","severity":1,"message":"297","line":5,"column":3,"nodeType":"237","messageId":"238","endLine":5,"endColumn":17},{"ruleId":"235","severity":1,"message":"256","line":7,"column":3,"nodeType":"237","messageId":"238","endLine":7,"endColumn":9},{"ruleId":"235","severity":1,"message":"266","line":9,"column":22,"nodeType":"237","messageId":"238","endLine":9,"endColumn":32},{"ruleId":"235","severity":1,"message":"255","line":10,"column":10,"nodeType":"237","messageId":"238","endLine":10,"endColumn":21},{"ruleId":"235","severity":1,"message":"296","line":10,"column":23,"nodeType":"237","messageId":"238","endLine":10,"endColumn":34},{"ruleId":"235","severity":1,"message":"267","line":10,"column":36,"nodeType":"237","messageId":"238","endLine":10,"endColumn":43},{"ruleId":"235","severity":1,"message":"248","line":11,"column":10,"nodeType":"237","messageId":"238","endLine":11,"endColumn":23},{"ruleId":"235","severity":1,"message":"249","line":11,"column":25,"nodeType":"237","messageId":"238","endLine":11,"endColumn":38},{"ruleId":"235","severity":1,"message":"250","line":11,"column":40,"nodeType":"237","messageId":"238","endLine":11,"endColumn":53},{"ruleId":"235","severity":1,"message":"265","line":20,"column":8,"nodeType":"237","messageId":"238","endLine":20,"endColumn":13},{"ruleId":"303","severity":1,"message":"304","line":46,"column":5,"nodeType":"305","messageId":"306","endLine":46,"endColumn":12},{"ruleId":"303","severity":1,"message":"307","line":108,"column":5,"nodeType":"305","messageId":"306","endLine":108,"endColumn":11},{"ruleId":"244","severity":1,"message":"308","line":149,"column":5,"nodeType":"246","endLine":149,"endColumn":7,"suggestions":"309"},{"ruleId":"270","severity":1,"message":"271","line":190,"column":27,"nodeType":"272","endLine":190,"endColumn":126},{"ruleId":"273","severity":1,"message":"274","line":190,"column":82,"nodeType":"275","messageId":"276","endLine":190,"endColumn":83},{"ruleId":"235","severity":1,"message":"252","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":20},{"ruleId":"235","severity":1,"message":"310","line":18,"column":9,"nodeType":"237","messageId":"238","endLine":18,"endColumn":19},{"ruleId":"235","severity":1,"message":"256","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":14},{"ruleId":"235","severity":1,"message":"236","line":7,"column":23,"nodeType":"237","messageId":"238","endLine":7,"endColumn":31},{"ruleId":"235","severity":1,"message":"311","line":9,"column":8,"nodeType":"237","messageId":"238","endLine":9,"endColumn":19},{"ruleId":"235","severity":1,"message":"312","line":57,"column":9,"nodeType":"237","messageId":"238","endLine":57,"endColumn":26},{"ruleId":"235","severity":1,"message":"296","line":6,"column":23,"nodeType":"237","messageId":"238","endLine":6,"endColumn":34},{"ruleId":"235","severity":1,"message":"313","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":26},{"ruleId":"235","severity":1,"message":"313","line":13,"column":10,"nodeType":"237","messageId":"238","endLine":13,"endColumn":26},{"ruleId":"235","severity":1,"message":"256","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":14},{"ruleId":"235","severity":1,"message":"255","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":21},{"ruleId":"244","severity":1,"message":"314","line":64,"column":6,"nodeType":"246","endLine":64,"endColumn":8,"suggestions":"315"},{"ruleId":"235","severity":1,"message":"256","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":14},{"ruleId":"235","severity":1,"message":"255","line":5,"column":10,"nodeType":"237","messageId":"238","endLine":5,"endColumn":21},{"ruleId":"244","severity":1,"message":"314","line":63,"column":6,"nodeType":"246","endLine":63,"endColumn":8,"suggestions":"316"},{"ruleId":"235","severity":1,"message":"269","line":65,"column":9,"nodeType":"237","messageId":"238","endLine":65,"endColumn":20},{"ruleId":"235","severity":1,"message":"317","line":87,"column":9,"nodeType":"237","messageId":"238","endLine":87,"endColumn":18},{"ruleId":"235","severity":1,"message":"318","line":93,"column":11,"nodeType":"237","messageId":"238","endLine":93,"endColumn":20},{"ruleId":"235","severity":1,"message":"264","line":126,"column":9,"nodeType":"237","messageId":"238","endLine":126,"endColumn":16},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Items' is defined but never used.","'PostItem' is defined but never used.","'items' is assigned a value but never used.","'form_state' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["319"],"'GiClawSlashes' is defined but never used.","'GiCrackedMask' is defined but never used.","'GiAbstract017' is defined but never used.","'holyGrail' is defined but never used.","'setUserCreds' is defined but never used.","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Button' is defined but never used.","'handlePopUp' is assigned a value but never used.","no-native-reassign",["320"],"no-negated-in-lhs",["321"],"'userId' is assigned a value but never used.","'setSalesData' is assigned a value but never used.","'graph_1' is assigned a value but never used.","'Paper' is defined but never used.","'withStyles' is defined but never used.","'connect' is defined but never used.","'Switch' is defined but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'fs' is assigned a value but never used.","'dialogOpen' is assigned a value but never used.","'setDialogOpen' is assigned a value but never used.","'classTime' is assigned a value but never used.","'setClassTime' is assigned a value but never used.","'modalClosed' is assigned a value but never used.","'setModalClosed' is assigned a value but never used.","'encodedImg' is assigned a value but never used.","'setEncodedImg' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","'useSelector' is defined but never used.","'CardActionArea' is defined but never used.","'GiFalloutShelter' is defined but never used.","React Hook useEffect has missing dependencies: 'currUserId' and 'ratingState'. Either include them or remove the dependency array.",["322"],"React Hook useEffect has a missing dependency: 'currUserId'. Either include it or remove the dependency array.",["323"],"no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","Duplicate key 'height'.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["324"],"'stateClone' is assigned a value but never used.","'PostedItems' is defined but never used.","'handleDialogClose' is assigned a value but never used.","'selectedCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findIndex', and 'userId'. Either include them or remove the dependency array.",["325"],["326"],"'resetItem' is assigned a value but never used.","'getCheese' is assigned a value but never used.",{"desc":"327","fix":"328"},"no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"335","fix":"337"},"Update the dependencies array to be: [dispatch]",{"range":"338","text":"339"},"Update the dependencies array to be: [currUserId, ratingState]",{"range":"340","text":"341"},"Update the dependencies array to be: [currUserId]",{"range":"342","text":"343"},"Update the dependencies array to be: [id]",{"range":"344","text":"345"},"Update the dependencies array to be: [data, findIndex, userId]",{"range":"346","text":"347"},{"range":"348","text":"347"},[2106,2108],"[dispatch]",[4253,4255],"[currUserId, ratingState]",[3724,3726],"[currUserId]",[4114,4116],"[id]",[1728,1730],"[data, findIndex, userId]",[1776,1778]]