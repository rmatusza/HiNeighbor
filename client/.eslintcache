[{"/home/ryan/portfolio_projects/HiNeighbor/client/src/index.js":"1","/home/ryan/portfolio_projects/HiNeighbor/client/src/theme.js":"2","/home/ryan/portfolio_projects/HiNeighbor/client/src/App.js":"3","/home/ryan/portfolio_projects/HiNeighbor/client/src/reportWebVitals.js":"4","/home/ryan/portfolio_projects/HiNeighbor/client/src/store/configureStore.js":"5","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/userCredsAction.js":"6","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/top-bar/TopBar.js":"7","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/ProtectedRoute.js":"8","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/login/Login.js":"9","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/HomePage.js":"10","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js":"11","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostItem.js":"12","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Items.js":"13","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedItems.js":"14","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/History.js":"15","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserStats.js":"16","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileMain.js":"17","/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/searchCategoryReducer.js":"18","/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/userCredsReducer.js":"19","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/types.js":"20","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserDropdown.js":"21","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/PriceRange.js":"22","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Distance.js":"23","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/OfferType.js":"24","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/SearchBar.js":"25","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Category.js":"26","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/RentableItemTable.js":"27","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForRent.js":"28","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForSale.js":"29","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/ProfitsChart.js":"30","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/SalesChart.js":"31","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/RentHistory.js":"32","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedRentItems.js":"33","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedSaleItems.js":"34","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/itemsActions.js":"35","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostRentItem.js":"36","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/searchCategoryActions.js":"37","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/signup/SignUp.js":"38"},{"size":905,"mtime":1614989084830,"results":"39","hashOfConfig":"40"},{"size":272,"mtime":1614989084830,"results":"41","hashOfConfig":"40"},{"size":3515,"mtime":1615421367849,"results":"42","hashOfConfig":"40"},{"size":362,"mtime":1614989084830,"results":"43","hashOfConfig":"40"},{"size":549,"mtime":1614989084830,"results":"44","hashOfConfig":"40"},{"size":180,"mtime":1614989084820,"results":"45","hashOfConfig":"40"},{"size":1950,"mtime":1615416252829,"results":"46","hashOfConfig":"40"},{"size":270,"mtime":1614989084820,"results":"47","hashOfConfig":"40"},{"size":8326,"mtime":1615423026769,"results":"48","hashOfConfig":"40"},{"size":2843,"mtime":1615322029450,"results":"49","hashOfConfig":"40"},{"size":10229,"mtime":1615322029450,"results":"50","hashOfConfig":"40"},{"size":10413,"mtime":1615322029450,"results":"51","hashOfConfig":"40"},{"size":15567,"mtime":1615322029450,"results":"52","hashOfConfig":"40"},{"size":4458,"mtime":1615322029450,"results":"53","hashOfConfig":"40"},{"size":3374,"mtime":1615322029450,"results":"54","hashOfConfig":"40"},{"size":2438,"mtime":1614989084830,"results":"55","hashOfConfig":"40"},{"size":5415,"mtime":1615322029450,"results":"56","hashOfConfig":"40"},{"size":2053,"mtime":1614989084830,"results":"57","hashOfConfig":"40"},{"size":583,"mtime":1614989084830,"results":"58","hashOfConfig":"40"},{"size":457,"mtime":1614989084820,"results":"59","hashOfConfig":"40"},{"size":3258,"mtime":1614989084830,"results":"60","hashOfConfig":"40"},{"size":2503,"mtime":1614989084820,"results":"61","hashOfConfig":"40"},{"size":1895,"mtime":1614989084820,"results":"62","hashOfConfig":"40"},{"size":1946,"mtime":1614989084820,"results":"63","hashOfConfig":"40"},{"size":2495,"mtime":1615322029450,"results":"64","hashOfConfig":"40"},{"size":1823,"mtime":1614989084820,"results":"65","hashOfConfig":"40"},{"size":15293,"mtime":1615322029450,"results":"66","hashOfConfig":"40"},{"size":5951,"mtime":1614989084820,"results":"67","hashOfConfig":"40"},{"size":6307,"mtime":1614989084820,"results":"68","hashOfConfig":"40"},{"size":1890,"mtime":1615326534560,"results":"69","hashOfConfig":"40"},{"size":1979,"mtime":1615322029450,"results":"70","hashOfConfig":"40"},{"size":13029,"mtime":1615322029450,"results":"71","hashOfConfig":"40"},{"size":6222,"mtime":1614989084820,"results":"72","hashOfConfig":"40"},{"size":6714,"mtime":1614989084820,"results":"73","hashOfConfig":"40"},{"size":610,"mtime":1614989084820,"results":"74","hashOfConfig":"40"},{"size":11504,"mtime":1615322029450,"results":"75","hashOfConfig":"40"},{"size":533,"mtime":1614989084820,"results":"76","hashOfConfig":"40"},{"size":8306,"mtime":1615423054559,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1hbvrm8",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"80"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"80"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"80"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ryan/portfolio_projects/HiNeighbor/client/src/index.js",[],["179","180"],"/home/ryan/portfolio_projects/HiNeighbor/client/src/theme.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/App.js",["181","182","183","184","185","186","187","188"],"/home/ryan/portfolio_projects/HiNeighbor/client/src/reportWebVitals.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/store/configureStore.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/userCredsAction.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/top-bar/TopBar.js",["189","190","191","192","193","194","195","196","197"],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/ProtectedRoute.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/login/Login.js",["198","199","200","201"],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/HomePage.js",["202","203","204","205","206","207","208","209"],"import React, { useState, useEffect } from 'react';\nimport './homepage.css';\nimport PriceRange from './PriceRange';\nimport Distance from './Distance';\nimport OfferType from './OfferType';\nimport SearchBar from './SearchBar';\nimport Category from './Category'\nimport RentableItemTable from './RentableItemTable';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\n// import { view, Animated, TouchableOpacity, Text } from 'react-native';\nimport Items from './Items';\n\nconst HomePage = () => {\n  const items = useSelector(store => store.entities.items_state.saleItems)\n  const rentItems = useSelector(store => store.entities.items_state.rentItems)\n  const search_params = useSelector((store) => store.entities.search_params)\n\n  const [popupVisible, setPopupVisible] = useState(false)\n  const [itemComponent, setItemComponent] = useState(null)\n  //(items)\n\n  const handlePopUp = () => {\n    setPopupVisible(true)\n    setTimeout(() => {\n      setPopupVisible(false)\n    }, 3900);\n  }\n\n  // WAS TESTING THE INCLUDES FUNCTIONALITY OF SEQUELIZE ON THE SELLER PROFILE\n  // HERE SO THAT I COULD AVIOD A FEW CLICKS\n\n  // useEffect(() => {\n  //   (async() => {\n  //     const res = await fetch(`/api/users/${2}/get-seller-info`)\n  //     const res = await fetch(`/api/users/${2}/get-seller-info`)\n  //     const sellerInfo = await res.json()\n  //     // items = postedItems\n  //     //('RETURNED ITEMS:', sellerInfo)\n  //     // setPostedItems(postedItems)\n  //   })()\n  // }, [])\n\n\n\n  return (\n    <>\n      {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Your purchase was successful</h2></div> : <></>}\n        <div className='category-contents-container'>\n        <Category />\n      </div>\n      <div className=\"search-container-outer\">\n        <div className='search-container'>\n          <div className='toggles'>\n            <div className='price-range-container'>\n              <h4>\n                <PriceRange />\n              </h4>\n            </div>\n            <div className='distance-container'>\n              <h4>\n                <Distance />\n              </h4>\n            </div>\n            <div className='offer-type-container'>\n              <h4>\n                <OfferType />\n              </h4>\n            </div>\n          </div>\n          <div className='search-bar-container'>\n            <h4>\n              <SearchBar />\n            </h4>\n          </div>\n        </div>\n      </div>\n      {(() => {\n        if(search_params.offer_type === 'Purchase') {\n          return(<Items />)\n        } else if(search_params.offer_type === 'Rent') {\n          return(<RentableItemTable />)\n        } else {\n          return(<div className=\"items-area\"></div>)\n        }\n      })()}\n\n    </>\n  )\n}\n\n\nexport default HomePage;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js",["210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { GiFalloutShelter } from 'react-icons/gi';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    marginTop: '30px',\n    // marginLeft: '30px',\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n   maxWidth: '639px',\n   overflow: 'auto'\n  },\n  tableHead: {\n    backgroundColor: \"black\",\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    // width: '800px'\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px',\n    maxWidth: '639px',\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n}))\n\nfunction createData(name, seller, purchase_price, purchase_date) {\n  return { name, seller, purchase_price, purchase_date };\n}\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nconst PurchaseHistory = (props) => {\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [postedItems, setPostedItems] = useState({'items': [], 'users': []})\n  // const [dataRows, setDataRows] = useState([])\n  const[ratingVisibility, setRatingVisibility] = useState({})\n  const[currItem, setCurrItem] = useState(null)\n  const[itemRating, setItemRating] = useState(null)\n  const [selectedRatingButton, setSelectedRatingButton] = useState(null)\n  const classes = useStyles()\n  let items = []\n  let ratingState = {}\n  let dataRows = []\n\n  let rows = []\n  // const res = await fetch(`/api/users/${currUserId}/get-purchase-history`)\n  // const postedItems = await res.json()\n  // items = postedItems\n  //('PURCHASED ITEMS:',  props.postedItems.purchased_items)\n  props.postedItems.purchased_items.forEach((item, i) => {\n    //('ITEM:', item)\n    ratingState[i] = false\n    let month = item.date_sold.slice(5,7)\n    // //(month)\n    let day = item.date_sold.slice(8,10)\n    // //(day)\n    let year = item.date_sold.slice(0, 4)\n    if(item.current_bid === null) {\n      dataRows.push(createData(item.name, item.seller_name, item.price, month+'-'+day+'-'+year))\n    } else {\n      dataRows.push(createData(item.name, item.seller_name, item.price, month+'-'+day+'-'+year))\n    }\n  })\n\n\n  const marks = [\n    {\n      value: 1,\n      label: '1',\n    },\n    {\n      value: 2,\n      label: '2',\n    },\n    {\n      value: 3,\n      label: '3',\n    },\n    {\n      value: 4,\n      label: '4',\n    },\n    {\n      value: 5,\n      label: '5',\n    },\n  ];\n\n  const updateItemRating = (e, value) => {\n    setItemRating(value)\n  }\n\n  const enableRating = (itemId, idx) => {\n    //(itemId)\n    let statecpy = {...ratingVisibility}\n    let value = ratingVisibility[idx]\n    statecpy[idx] = !value\n    if(selectedRatingButton !== null && selectedRatingButton !== idx) {\n      statecpy[selectedRatingButton] = false\n    }\n    setCurrItem(itemId)\n    setRatingVisibility(statecpy)\n    setSelectedRatingButton(idx)\n    // currItem = itemId\n    // ratingVisibility = statecpy\n    // selectedRatingButton = idx\n  }\n\n  const submitRating = async(itemId, idx, sellerId) => {\n   const body = {\n      currUserId,\n      itemRating,\n      sellerId\n    }\n    try {\n    const res = await fetch(`/api/items-and-services/${currItem}/rate-item`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type':'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const rating = await res.json()\n    const status = await res.status\n    if(!(status >= 200 && status <= 399)) {\n      const err = new Error()\n      err.message = status\n      throw err\n    }\n    enableRating(itemId, idx)\n    } catch(e) {\n      alert(`Something went wrong. Error status: ${e.message}`)\n    }\n  }\n\n  return(\n    <>\n      {props.postedItems.purchased_items.length === 0 ?\n      <>\n        <h1 className=\"no-history-heading\">No Purchase History...</h1>\n        <div className=\"items-body-container-user-dropdown\">\n        </div>\n      </>\n      :\n      <>\n        <div>\n          <h1 className=\"purchase-history-heading\">\n            Your Purchase History:\n          </h1>\n        </div>\n        <div className=\"body-container-purchase-history\">\n          <div className=\"body-container-purchase-history__photos-container\">\n              {props.postedItems.purchased_items.map((item) => {\n                let url = item.image_url\n                return (\n                  <div className=\"item-photo-container-purchase-history\">\n                      <Card className={classes.paper}>\n                        <CardContent className={classes.image}>\n                          <img className=\"item-image-purchase-history\" src={url} />\n                        </CardContent>\n                      </Card>\n                  </div>\n                )\n              })}\n          </div>\n          <div className=\"body-container-purchase-history__purchase-history-table-container\">\n            {props.postedItems.purchased_items.map((item, idx) => {\n              return(\n                <>\n                  <div className=\"body-container-purchase-history__purchase-history-table-container__purchase-history-table\">\n                    <TableContainer className={classes.tableContainer}  style={{height: '100px'}}>\n                        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                          <TableHead className={classes.tableHead}>\n                            <TableRow>\n                              <TableCell align=\"center\" className={classes.tableCell}>seller</TableCell>\n                              <TableCell align=\"center\" className={classes.tableCell}>Item Name</TableCell>\n                              <TableCell align=\"center\" className={classes.tableCell}>Purchase Price</TableCell>\n                              <TableCell align=\"center\" className={classes.tableCell}>Purchase Date</TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody >\n                            <TableRow key={dataRows[idx].name}>\n                              <TableCell align=\"center\">{dataRows[idx].seller}</TableCell>\n                              <TableCell align=\"center\">{dataRows[idx].name}</TableCell>\n                              <TableCell align=\"center\">${dataRows[idx].purchase_price}</TableCell>\n                              <TableCell align=\"center\">{dataRows[idx].purchase_date}</TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                      <div className=\"rating-buttons-and-slider\">\n                        <div className=\"rate-and-submit-buttons\">\n                          <Button variant=\"contained\" color=\"secondary\" onClick={() => enableRating(item.id, idx)}>Rate item</Button>\n                          {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ? <></> : <div  className=\"submit-rating-button\"><Button variant=\"contained\" color=\"secondary\" onClick={() => submitRating(item.id, idx, item.seller_id)}>Submit Rating</Button></div>}\n                        </div>\n                        {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ?\n                        <></>\n                        :\n                        <div className=\"slider\">\n                        <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n                          Rating:\n                        </Typography>\n                          <Slider\n                            defaultValue={props.postedItems.reviews[idx].rating}\n                            getAriaValueText={valuetext}\n                            aria-labelledby=\"discrete-slider-small-steps\"\n                            step={1}\n                            marks={marks}\n                            min={1}\n                            max={5}\n                            color=\"secondary\"\n                            valueLabelDisplay=\"auto\"\n                            onChange={updateItemRating}\n                          />\n                        </div>}\n                      </div>\n                  </div>\n                </>\n              )\n            })}\n          </div>\n\n        </div>\n      </>\n      }\n    </>\n  )\n}\n\nexport default PurchaseHistory;\n\n\n\n// defaultValue={props.postedItems.reviews.length > 0 ? props.postedItems.reviews[idx].rating : 0}\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostItem.js",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, { useState } from 'react';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setPostItemFormStatus } from '../../actions/itemsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button\n} from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { useForm } from 'react-hook-form';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from \"@material-ui/core/Select\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst fs = require('fs')\n\nconst useStyles = makeStyles((theme) => ({\n  itemFormModal: {\n    // position: \"absolute\",\n    // top: '50rem',\n    // left: '50vh',\n    // top: '50vh',\n    width: '400px',\n    margin: 'auto',\n    marginTop: '14vh',\n    backgroundColor: \"whitesmoke\",\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n\n  offerType: {\n    margin: '10px',\n    width: '100%'\n  },\n\n  formControl: {\n    width: '181px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  }\n}));\n\nconst PostItem = (props) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  const [itemCategory, setItemCategory] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemOfferType, setItemOfferType] = useState(\"\");\n  const [itemQuantity, setItemQuantity] = useState(\"\");\n  // const [imageURL, setImageURL] = useState('')\n  const [imageFile, setImageFile] = useState(null)\n  const [classTime, setClassTime] = useState(\"\");\n  const [modalClosed, setModalClosed] = useState('false')\n  const [encodedImg, setEncodedImg] = useState({})\n  const form_state = useSelector(store => store.entities.post_item_form_state.status)\n  const userId = useSelector(store => store.session.currentUser.id)\n  const username = useSelector(store => store.session.currentUser.username)\n  //(userId)\n  const { register, handleSubmit } = useForm()\n  const classes = useStyles()\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [popupVisible, setPopupVisible] = useState(false)\n  const[modalOpen, setModalOpen] = useState(true)\n  const [anchorElOffer, setAnchorElOffer] = useState(null);\n  const [anchorElCategory, setAnchorElCategory] = useState(null);\n  const [formErrors, setFormErrors] = useState([]);\n\n  // //('CURRENT USER ID:', userId)\n  let generatedImageURL;\n  // const handleClick = (event) => {\n  //   setAnchorElOffer(event.currentTarget);\n  // };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = (itemData) => {\n    setDialogOpen(true)\n  }\n\n  const handleCloseOffer = () => {\n    setAnchorElOffer(null);\n  };\n\n  const handleCloseCategory = () => {\n    setAnchorElCategory(null);\n  }\n\n  const handleOfferTypeSelection = (e) => {\n    //(e.target.value)\n    setItemOfferType(e.target.value)\n    handleCloseOffer()\n  }\n\n  const handleCategorySelection = (e) => {\n    //(e.target.value)\n    setItemCategory(e.target.value)\n    handleCloseCategory()\n  }\n\n  const handleInputChange = (e) => {\n    if (e.target.id === \"name-input\") {\n      setItemName(e.target.value);\n    } else if (e.target.id === \"description-input\") {\n      setItemDescription(e.target.value);\n    } else if(e.target.id === \"sell-price-input\") {\n      setItemPrice(e.target.value)\n    } else if(e.target.id === \"quantitiy-input\") {\n      setItemQuantity(e.target.value)\n    }\n  };\n\n  const handleCloseModal = (buttonName) => {\n    setModalOpen(false)\n    // //(e)\n    if(buttonName === 'close-button') {\n      dispatch(setPostItemFormStatus(false))\n      return\n    }\n    setPopupVisible(true)\n    setTimeout(() => {\n      setPopupVisible(false)\n      dispatch(setPostItemFormStatus(false))\n    }, 2500)\n  }\n\n\n  const postItem = async() => {\n\n\n    const expiryDate = new Date()\n    expiryDate.setDate(expiryDate.getDate() + 30);\n    //(generatedImageURL)\n\n    const body = {\n      userId,\n      username,\n      itemName,\n      itemDescription,\n      itemCategory,\n      itemPrice,\n      generatedImageURL,\n      expiryDate\n    }\n\n    //('EXPIRY DATE:', body)\n\n      const res = await fetch('/api/items-and-services/post-item', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const response = await res.json()\n    console.log('RESPONSE:', response)\n    let errors = []\n    if(response.errors) {\n      response.errors.forEach(error => {\n        errors.push(error.msg)\n      })\n      setFormErrors(errors)\n      setDialogOpen(true)\n      return\n    }\n    handleCloseModal()\n  }\n\n  const uploadPhoto = async () => {\n    //(imageFile)\n    // //(data.image[0].name)\n    const fd = new FormData();\n    fd.append('file', imageFile)\n    // //(fd)\n    try {\n      const res = await fetch('/api/items-and-services/upload-photo', {\n        method: 'POST',\n        body: fd\n      })\n      const { imageURL } = await res.json()\n      generatedImageURL = imageURL\n      //(generatedImageURL)\n      postItem()\n    } catch(e) {\n      alert(e)\n      return\n    }\n  }\n\n  const validateForm = (e) => {\n    e.preventDefault()\n    let discoveredErrors = []\n    let requiredFields =\n    [\n    imageFile,\n    itemName,\n    itemDescription,\n    itemCategory,\n    itemPrice,\n    ]\n    let errorMessages =\n    [\n      'You Must Upload an Image',\n      'You Must Enter an Item Name',\n      'You Must Enter an Item Description',\n      'You Must Pick a Category',\n      'You Must Enter an Item Price',\n    ]\n\n    requiredFields.forEach((field, i) => {\n      if(!field) {\n        discoveredErrors.push(errorMessages[i])\n      }\n      setFormErrors(discoveredErrors)\n    })\n    if(discoveredErrors.length === 0) {\n      uploadPhoto()\n    } else {\n      setDialogOpen(true)\n    }\n  }\n\n  const postItemBody = (\n    <div className={classes.itemFormModal}>\n      <h2 id=\"simple-modal-title\">Item Info:</h2>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"name-input\" style={{color: \"black\"}}>Name</InputLabel>\n          <Input id=\"name-input\" onChange={handleInputChange} autoFocus style={{color: \"black\"}} />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"description-input\" style={{color: \"black\"}}>Description</InputLabel>\n          <Input id=\"description-input\" onChange={handleInputChange} style={{color: \"black\"}}/>\n        </FormControl>\n      </div>\n      <div>\n      <FormControl className={classes.formControl}>\n          <InputLabel id=\"offer-type-select\" style={{color: \"black\"}}>Category</InputLabel>\n          <Select\n            labelId=\"offer-type-select\"\n            id=\"offer-type\"\n            onChange={(e) => handleCategorySelection(e)}\n          >\n            <MenuItem value={\"Books\"}>Books</MenuItem>\n            <MenuItem value={\"Clothing\"}>Clothing</MenuItem>\n            <MenuItem value={\"Electronics\"}>Electronics</MenuItem>\n            <MenuItem value={\"Home Decor\"}>Home Decor</MenuItem>\n            <MenuItem value={\"Kitchen\"}>Kitchen</MenuItem>\n            <MenuItem value={\"Music\"}>Music</MenuItem>\n            <MenuItem value={\"Video Games\"}>Video Games</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"sell-price-input\" style={{color: \"black\"}}>Sell Price</InputLabel>\n          <Input id=\"sell-price-input\" onChange={handleInputChange} style={{color: \"black\"}}/>\n\n        </FormControl>\n      </div>\n      <div className=\"photo-upload-container\">\n        <form onChange={(e) => setImageFile(e.target.files[0])}>\n          <input type=\"file\" id=\"upload-image-input\" name='image'/>\n          {/* <button onClick={uploadPhoto} className=\"confirm-upload-button\">Confirm Upload</button> */}\n        </form>\n      </div>\n      <div className=\"post-item-or-service-buttons\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={validateForm}\n          type=\"submit\"\n          name=\"post-button\"\n        >\n          Post Item\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={()=>handleCloseModal('close-button')}\n          type=\"submit\"\n          name=\"close-button\"\n        >\n         Close\n        </Button>\n      </div>\n    </div>\n  );\n\n  return(\n    <>\n      {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Post Successful!</h2></div> : <></>}\n      <Modal\n      open={(() => {\n        if(form_state === false || form_state === 'undefined' || modalOpen === false) {\n          //('FALSE')\n          return false\n        }\n        //('TRUE')\n        return true\n      })()}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      >\n      {postItemBody}\n      </Modal>\n      <Dialog\n      open={dialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      >\n         <DialogTitle id=\"alert-dialog-title\">\n          {\"The Following Are Required:\"}\n        </DialogTitle>\n        <List>\n          {formErrors.map((error) => (\n            <ListItem>\n              <ListItemText>\n                {error}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n    </>\n  )\n}\n\nexport default PostItem;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Items.js",["243","244","245","246","247","248","249","250","251","252","253","254","255"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Paper,\n  Button,\n  FormControl,\n  InputLabel,\n  Input,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setItems } from '../../actions/itemsActions';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useHistory, Link, Switch } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { CgArrowsExpandLeft } from \"react-icons/cg\";\nimport './homepage.css'\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '50%',\n    margin: '0px',\n  },\n  paper: {\n    textAlign: 'center',\n    backgroundColor: 'white',\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px',\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: \"whitesmoke\",\n    color: \"black\",\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n  submitButton: {\n    marginTop: \"2rem\",\n    backgroundColor: theme.palette.secondary.main\n  },\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"#000000\",\n    color: theme.palette.secondary.contrastText,\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px',\n    width: '100%',\n    height: '115px'\n  },\n  buyNow: {\n    maxHeight: \"50px\"\n  },\n  cardActionArea: {\n    width: '200px'\n  },\n  buttons: {\n    width: '160px'\n  },\n  submitButton: {\n    width: '160px',\n    marginTop: '20px'\n  },\n  gridItem: {\n    backgroundImage: 'url(../../static/memphis-mini.png)'\n  }\n}))\n\n\n\nfunction createData(name, price, bid, num_bidders, days_remaining, item_id, current_bid, item_price, sellerId, description) {\n  return { name, price, bid, num_bidders, days_remaining, item_id, current_bid, item_price, sellerId, description };\n}\n\n\nconst Items = () => {\n  let items = useSelector(store => store.entities.items_state.saleItems)\n  let rentItems = useSelector(store => store.entities.items_state.rentItems)\n  //('ITEMS:', items)\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [currItemId, setCurrItemId] = useState(null)\n  const [currBid, setCurrBid] = useState(null)\n  const [currItemPrice, setCurrItemPrice] = useState(null)\n  const [bidInput, setBidInput] = useState(null)\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [enlargeImage, setEnlargeImage] = useState(false);\n  const [image, setImage] = useState(null);\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const history = useHistory();\n  //('ITEMS:', items)\n\n  const updateBidInput = (e) => {\n    // //('BID INPUT:', e.target.value)\n    setBidInput(e.target.value)\n  }\n\n  const updateItems = (updatedItem) => {\n    // //('CURRENT ITEM OBJECT:', updatedItem)\n    const id = updatedItem.id\n    // //('ITEM ID:', id)\n    items.forEach((item, i) => {\n      // //('UPDATING ITEMS')\n      if(item.id === id) {\n        // //('CURR ITEM:', currItems[i])\n        items[i] = updatedItem\n        // //('CURRITEMS:', items)\n        dispatch(setItems(items))\n        // setCurrItemsState(currItems)\n      }\n    })\n  }\n\n  const updateSoldItems = (id) => {\n    let currItems = []\n    items.forEach((item, i) => {\n      if(Number(item.id) !== Number(id)) {\n        currItems.push(item)\n      }\n      dispatch(setItems(currItems))\n    })\n  }\n\n  const closeImage = () => {\n    setEnlargeImage(false)\n  }\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = (itemData) => {\n    //('ITEM DATA:', itemData)\n    setCurrItemId(itemData.itemId)\n    setDialogOpen(true)\n  }\n\n  const submitBid = async () => {\n\n    const body = {\n      bidInput,\n      currUserId\n    }\n\n    const res = await fetch(`/api/items-and-services/${currItemId}/bid`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    const updatedItem = await res.json()\n\n    //('RETURNED UPDATED ITEM:', updatedItem)\n\n    updateItems(updatedItem)\n    // alert(`bid of $${bidInput} was placed`)\n    setModalOpen(false)\n  }\n\n  const handlePurchase = async () => {\n\n    const body = {\n      currUserId\n    }\n\n    const res = await fetch(`/api/items-and-services/${currItemId}/purchase`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    const {soldItemId} = await res.json()\n    //(soldItemId)\n\n    updateSoldItems(soldItemId)\n    handleDialogClose()\n  }\n\n  const handleClick = (sellerId) => {\n    history.replace(`/seller-profile/${sellerId}`)\n  }\n\n  const handleEnlargeImage = (image) => {\n    setImage(image)\n    setEnlargeImage(true)\n  }\n\n  const openBidModal = (itemData) => {\n    //('ITEM DATA:', itemData)\n    setCurrItemId(itemData.itemId)\n    setCurrBid(itemData.currentBid)\n    setCurrItemPrice(itemData.itemPrice)\n    setModalOpen(true)\n  }\n\n  const closeModal = () => {\n    setModalOpen(false)\n  }\n  let dataRows = []\n\n  {if(items[0] === 'no_items') {\n      return(\n        <div className=\"items-body-container-no-items\">\n          <h1 className=\"no-results-heading\">No Results Found</h1>\n        </div>\n      )\n    }else {\n      return(\n        <div className=\"home-page-sale-items-container\">\n          <div className=\"home-page-sale-items-container__photos-outer-container\">\n            {items.map((item) => {\n              let url = item.image_url\n              return (\n                <div className=\"home-page-sale-items-container__photos-inner-container\">\n                  <CardActionArea className={classes.cardActionArea} onClick={() => handleEnlargeImage(item.image_url)}>\n                    <Card className={classes.paper}>\n                      <div className=\"home-page-sale-items-container__photos-inner-container__expand-icon-outer-container\">\n                        <div className=\"home-page-sale-items-container__photos-inner-container__expand-icon-inner-container\">\n                          <CgArrowsExpandLeft className=\"expand-icon\"/>\n                        </div>\n                      </div>\n                      <CardContent className={classes.image}>\n                        <img className=\"item-image-homepage\" src={url} />\n                      </CardContent>\n                    </Card>\n                  </CardActionArea>\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"home-page-sale-items-container__item-table-and-description-outer-container\">\n            {items.forEach((item, idx) => {\n              const d1 = new Date(item.expiry_date)\n              const today = new Date()\n              today.setDate(today.getDate()+0)\n              const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n              const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n              if(item.current_bid === null) {\n                dataRows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining, item.id, item.current_bid, item.price, item.seller_id, item.description))\n              } else {\n                dataRows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining, item.id, item.current_bid, item.price, item.seller_id, item.description))\n              }\n\n            })}\n            {dataRows.map((item, idx) => {\n              return(\n                <div className=\"home-page-sale-items-container__item-table-and-description-inner-container\">\n                  <TableContainer className=\"home-page-sale-items-container__item-table-and-description-inner-container__table-container\">\n                    <Table className=\"home-page-sale-items-container__item-table-and-description-inner-container__table-container__table\"\n                    size=\"small\" aria-label=\"a dense table\"\n                    >\n                      <TableHead className={classes.tableHead}>\n                        <TableRow className={classes.tableHead}>\n                          {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                          <TableCell align=\"center\" className={classes.tableCell}>Item Name</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Full Sale Price</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Current Bid</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Number of Bidders</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Days Remaining</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n\n                        <TableRow key={dataRows[idx].name}>\n                          <TableCell align=\"center\">{dataRows[idx].name}</TableCell>\n                          <TableCell align=\"center\">${dataRows[idx].price}</TableCell>\n                          <TableCell align=\"center\">${dataRows[idx].bid}</TableCell>\n                          <TableCell align=\"center\">{dataRows[idx].num_bidders}</TableCell>\n                          <TableCell align=\"center\">{dataRows[idx].days_remaining}</TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                  <div className=\"home-page-sale-items-container__item-table-and-description-inner-container__description-container\">\n                    <p>\n                      {dataRows[idx].description}\n                    </p>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"home-page-sale-items-container__buttons-outer-container\">\n            {dataRows.map((item, idx) => {\n              return(\n                <div className=\"home-page-sale-items-container__buttons-inner-container\">\n                  <div className=\"bid-button\">\n                    <Button color=\"secondary\" variant=\"contained\" onClick={() => {openBidModal({'itemId': dataRows[idx].item_id, 'currentBid': dataRows[idx].current_bid, 'itemPrice': dataRows[idx].item_price})}} className={classes.buttons}>\n                      Bid\n                    </Button>\n                  </div>\n                  <div className=\"divider-container\">\n                    <div className=\"bid-purchase-divider\"></div>\n                  </div>\n                  <div className=\"buy-button\">\n                    <Button color=\"secondary\" size=\"medium\" variant=\"contained\" onClick={() => {handleDialogOpen({'itemId': dataRows[idx].item_id, 'currentBid': dataRows[idx].current_bid, 'itemPrice': dataRows[idx].item_price})}} className={classes.buttons}>\n                      Purchase\n                    </Button>\n                  </div>\n                  <div className=\"divider-container\">\n                    <div className=\"bid-purchase-divider\"></div>\n                  </div>\n                  <div className=\"seller-profile-button\">\n                    <Button color=\"secondary\" size=\"medium\" variant=\"contained\" onClick={() => {handleClick(dataRows[idx].sellerId)}} className={classes.buttons}>\n                      View Seller Info\n                    </Button>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n\n          {/* BID MODAL */}\n\n          <Modal\n            open={modalOpen}\n            onClose={closeModal}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <div className={classes.itemFormModal}>\n              <h2 id=\"simple-modal-title\">Place Your Bid:</h2>\n              <div>\n                <FormControl>\n                  <InputLabel htmlFor=\"bid-input\" style={{color: \"black\"}}>Bid Amount</InputLabel>\n                  <Input id=\"bid-input\" onChange={updateBidInput} autoFocus style={{color: \"black\"}}/>\n                </FormControl>\n              </div>\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{ color: \"white\" }}\n                  size=\"small\"\n                  className={classes.submitButton}\n                  onClick={() => {\n                    if(Number(bidInput) <= currBid) {\n                      alert('Your bid must be larger than the current bid amount')\n                    } else if(Number(bidInput) > currItemPrice) {\n                      alert('Your bid must be less than the item sell price')\n                    } else {\n                      submitBid()\n                    }\n                  }}\n                  type=\"submit\"\n                >\n                  Submit Bid\n                </Button>\n              </div>\n            </div>\n          </Modal>\n\n\n          {/* BUY NOW DIALOG BOX */}\n\n          <Dialog\n          open={dialogOpen}\n          onClose={handleDialogClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Are you sure that you want to purchase this item at its full sale price?\"}\n            </DialogTitle>\n            <DialogActions>\n              <Button onClick={handleDialogClose} className={classes.buttons} color=\"secondary\" variant=\"contained\">\n                Cancel\n              </Button>\n              <Button className={classes.buttons} color=\"secondary\" variant=\"contained\" autoFocus onClick={handlePurchase}>\n                Purchase Item\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n        {/* ENLARGED IMAGE DIALOG BOX */}\n\n          <Dialog\n          open={enlargeImage}\n          onClose={closeImage}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          >\n            <img className=\"item-image-enlarged\" src={image} />\n\n          </Dialog>\n\n        </div>\n      )\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\nexport default Items;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedItems.js",["256","257","258","259","260","261","262","263"],"import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport PostedSaleItems from './PostedSaleItems';\nimport PostedRentItems from './PostedRentItems';\n\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  }\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining) {\n  return { name, price, bid, num_bidders, days_remaining };\n}\n\nconst PostedItems = () => {\n\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [forSaleButtonState, setForSaleButtonState] = useState(true)\n  const [forRentButtonState, setForRentButtonState] = useState(false)\n  const [postedItems, setPostedItems] = useState([])\n  const [saleItems, setSaleItems] = useState({'items_for_sale': []})\n  const [rentItems, setRentItems] = useState({'items_for_rent': []})\n  const [dataRows, setDataRows] = useState([])\n  const classes = useStyles()\n\n  const handleClick = (e) => {\n    if(e.target.name === 'for-sale') {\n      if(forSaleButtonState === false) {\n        setForSaleButtonState(true)\n        setForRentButtonState(false)\n      } else {\n        setForSaleButtonState(false)\n        setForRentButtonState(true)\n      }\n    } else {\n      if(forRentButtonState === false) {\n        setForRentButtonState(true)\n        setForSaleButtonState(false)\n      }else {\n        setForRentButtonState(false)\n        setForSaleButtonState(true)\n      }\n    }\n  }\n\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`/api/users/${currUserId}/get-posted-items`)\n      const postedItems = await res.json()\n      // items = postedItems\n      if(postedItems.length === 0) {\n        return\n      }\n      setDataRows(rows)\n      let forSaleObj = {}\n      let forRentObj = {}\n      forSaleObj['items_for_sale'] = postedItems.items_for_sale\n      forRentObj['items_for_rent'] = postedItems.items_for_rent\n      setRentItems(forRentObj)\n      setSaleItems(forSaleObj)\n    })()\n  }, [])\n\n  return(\n    <>\n    <div className=\"for-rent-or-sale-buttons\">\n      <div>\n      <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={forSaleButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"for-sale\">\n        For Sale\n      </Button>\n      </div>\n      <div className=\"for-sale-rent-toggle-buttons-divider\"></div>\n      <div>\n      <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={forRentButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"for-rent\">\n        For Rent\n      </Button>\n      </div>\n    </div>\n    <div>\n        {forSaleButtonState ? <PostedSaleItems postedItems={saleItems}/> : <PostedRentItems postedItems={rentItems}/> }\n      </div>\n    </>\n  )\n}\n\nexport default PostedItems;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/History.js",["264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from 'react';\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport PurchaseHistory from './PurchaseHistory';\nimport RentHistory from './RentHistory';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  Buttons: {\n    minWidth: '177px;',\n    maxWidth: '177px;',\n  }\n}))\n\n\nconst History = () => {\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [purchasedButtonState, setPurchasedButtonState] = useState(true)\n  const [rentedButtonState, setRentedButtonState] = useState(false)\n  const [purchasedItems, setPurchasedItems] = useState({'purchased_items': [], 'users': [], 'reviews': []})\n  const [rentedItems, setRentedItems] = useState({'rented_items': [], 'users': [], 'rent_reviews': [], 'returned_rented_items': []})\n  const classes = useStyles()\n  // let purchasedItems;\n  // let rentedItems = []\n  let ratingState = {}\n  let divClass;\n  if(purchasedButtonState){\n    divClass = 'purchase-rent-toggle-buttons__purchased'\n  } else {\n    divClass = 'purchase-rent-toggle-buttons'\n  }\n\n  const handleClick = (e) => {\n    if(e.target.name === 'purchased') {\n      if(purchasedButtonState === false) {\n        setPurchasedButtonState(true)\n        setRentedButtonState(false)\n      } else {\n        setPurchasedButtonState(false)\n        setRentedButtonState(true)\n\n      }\n    } else {\n      if(rentedButtonState === false) {\n        setRentedButtonState(true)\n        setPurchasedButtonState(false)\n\n      }else {\n        setRentedButtonState(false)\n        setPurchasedButtonState(true)\n      }\n    }\n  }\n\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`/api/users/${currUserId}/get-purchase-history`)\n      const postedItems = await res.json()\n      console.log('RETURNED ITEMS:', postedItems)\n      // //(postedItems)\n      setPurchasedItems({'purchased_items': postedItems.purchased_items, 'users': postedItems.users, 'reviews': postedItems.reviews})\n      const getRentHistory = await fetch(`/api/users/${currUserId}/get-rent-history`)\n      const returnedItems = await getRentHistory.json()\n      setRentedItems({'rented_items': returnedItems.rent_items, 'rent_reviews': returnedItems.reviews, 'returned_rented_items': returnedItems.returned_rented_items})\n    })()\n  }, [])\n\n  //(purchasedItems)\n\n  return (\n    <>\n      <div className={divClass}>\n        <div>\n        <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={purchasedButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"purchased\">\n         Purchased\n        </Button>\n        </div>\n        <div className=\"purchase-rent-toggle-buttons-divider\"></div>\n        <div>\n        <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={rentedButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"rented\">\n         Rented\n        </Button>\n        </div>\n      </div>\n      <div>\n        {purchasedButtonState ? <PurchaseHistory postedItems={purchasedItems}/> : <RentHistory postedItems={rentedItems}/>}\n      </div>\n    </>\n  )\n}\n\n\nexport default History;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserStats.js",["272","273","274","275","276"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SalesChart from './SalesChart';\nimport ProfitsChart from './ProfitsChart';\n\n\nconst UserStats = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [salesData, setSalesData] = useState([])\n  const [salesButtonState, setSalesButtonState] = useState(true)\n  const [profitsButtonState, setProfitsButtonState] = useState(false)\n\n  const handleClick = (e) => {\n    if(e.target.name === 'profits') {\n      if(profitsButtonState === false) {\n        setProfitsButtonState(true)\n        setSalesButtonState(false)\n      } else {\n        setProfitsButtonState(false)\n        setSalesButtonState(true)\n\n      }\n    } else {\n      if(salesButtonState === false) {\n        setSalesButtonState(true)\n        setProfitsButtonState(false)\n\n      }else {\n        setSalesButtonState(false)\n        setProfitsButtonState(true)\n      }\n    }\n  }\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Sales'\n    },\n    axisY: {\n      title: 'Number of Sales'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: salesData\n    }]\n  }\n  const graph_1 = (\n    <div className=\"chart-data\">\n      <CanvasJSChart options={ options } />\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"background\">\n      <div className=\"stats-buttons\">\n        <div>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={salesButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"sales\">\n          Sales\n        </Button>\n        </div>\n        <div className=\"button-divider\"></div>\n        <div>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={profitsButtonState ? 'contained' : 'outlined'} color=\"secondary\" onClick={handleClick} name=\"profits\">\n          Profits\n        </Button>\n        </div>\n      </div>\n      <div>\n        {/* <CanvasJSChart options={ options } /> */}\n        {salesButtonState ? <SalesChart /> : <ProfitsChart />}\n      </div>\n      </div>\n    </>\n  )\n}\n\nexport default UserStats;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileMain.js",["277","278","279","280","281","282","283","284","285","286","287","288","289","290"],"import React, { useState, useEffect } from 'react';\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport SellerProfileForSale from './SellerProfileForSale';\nimport SellerProfileForRent from './SellerProfileForRent';\nimport { useParams } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n  Buttons: {\n    minWidth: '177px;',\n    maxWidth: '177px;',\n  }\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining) {\n  return { name, price, bid, num_bidders, days_remaining };\n}\n\nfunction createRentData(name, rate, rented, expiry_date) {\n  return { name, rate, rented, expiry_date };\n}\n\nconst SellerProfileMain = () => {\n  const { id } = useParams()\n  const [userData, setUserData] = useState({'items_for_sale': [], 'items_for_rent': [], 'user': {}, 'sold': {}, 'reviews': {}})\n  const [dataRows, setDataRows] = useState([])\n  const [dataRowsRentItems, setDataRowsRentItems] = useState([])\n  const [itemType, setItemType] = useState([])\n  const [forSale, setForSale] = useState(true)\n  const [forRent, setForRent] = useState(false)\n  const [forSaleItems, setForSaleItems] = useState([])\n  const [forRentItems, setForRentItems] = useState([])\n  const classes = useStyles()\n\n  const setButtonState = (e) => {\n    if(e.target.name === 'for-sale') {\n      if(forSale === false) {\n        setForSale(true)\n        setForRent(false)\n      } else {\n        setForSale(false)\n        setForRent(true)\n      }\n    } else {\n      if(forRent === false) {\n        setForRent(true)\n        setForSale(false)\n      }else {\n        setForRent(false)\n        setForSale(true)\n      }\n    }\n  }\n\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      let rentRows = []\n      const res = await fetch(`/api/users/${id}/get-seller-info`)\n      const sellerInfo = await res.json()\n      console.log('RETURNED ITEMS:', sellerInfo.items_for_sale)\n      sellerInfo.items.forEach(item => {\n        console.log('ITEM FOR SALE?:', item.for_sale)\n        if(item.for_sale === true) {\n          const d1 = new Date(item.expiry_date)\n          const today = new Date()\n          today.setDate(today.getDate()+0)\n          const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n          const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n          if(item.current_bid === null) {\n            rows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining))\n          } else {\n            rows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining))\n          }\n        } else {\n          let date;\n          if(item.expiry_date){\n            let month = item.expiry_date.slice(5,7)\n            let day = item.expiry_date.slice(8,10)\n            let year = item.expiry_date.slice(0, 4)\n            date = month+'-'+day+'-'+year\n          }\n          console.log('RENT ITEM:', item)\n          rentRows.push(createRentData(item.name, item.rate, item.rented, date))\n        }\n      })\n      setDataRows(rows)\n      setDataRowsRentItems(rentRows)\n      setUserData(sellerInfo)\n      setForSaleItems(sellerInfo.items_for_sale)\n      setForRentItems(sellerInfo.items_for_rent)\n    })()\n  },[])\n\n\n  //(purchasedItems)\n\n  return (\n    <>\n      {userData ?\n      <div className='seller-info-and-current-items-container'>\n        <h1 className=\"seller-info-heading\">Seller Info:</h1>\n        <div className=\"seller-info\">\n          <div className=\"seller-username\">\n            <h3> Seller: </h3><h4 className=\"username\">{userData.user.username}</h4>\n          </div>\n          <div className=\"seller-sold-items-count\">\n            <h3> Items sold:</h3><h4 className=\"sell-count\">{userData.sold.count}</h4>\n          </div>\n          <div className=\"seller-sold-items-count\">\n            <h3> Average Rating:</h3><h4 className=\"average-ratings\">{userData.reviews.average === 0 ? 'No Ratings' : `${Number(userData.reviews.average).toFixed(2)} Stars`}</h4>\n          </div>\n          <div className=\"num-seller-ratings\">\n            <h3>Ratings:</h3><h4 className=\"num-ratings\">{userData.reviews.num_ratings === 0 ? <p> No Ratings</p> : <p>{userData.reviews.num_ratings}</p>}</h4>\n          </div>\n        </div>\n        <div className=\"current-items-heading-container\">\n          <h1 className=\"current-items-heading\">\n          {userData.user.username} is Currently Offering the Following Items:\n          </h1>\n        </div>\n        <div className=\"buttons-container\">\n          <div className=\"for-sale-button-container\">\n            <Button variant=\"contained\" color=\"secondary\" name=\"for-sale\" onClick={setButtonState} variant={forSale ? 'contained' : 'outlined'}>For Sale</Button>\n          </div>\n          <div className=\"for-rent-button-container\">\n            <Button variant=\"contained\" color=\"secondary\" onClick={setButtonState} variant={forRent ? 'contained' : 'outlined'}>For Rent</Button>\n          </div>\n        </div>\n      </div>\n      :\n      <>\n      </>\n      }\n      <div>\n        {forSale ? <SellerProfileForSale itemData={ {'user_data': userData, 'table_data': dataRows} }/> : <SellerProfileForRent itemData={ {'user_data': userData, 'table_data': dataRowsRentItems} }/>}\n      </div>\n    </>\n  )\n}\n\nexport default SellerProfileMain;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/searchCategoryReducer.js",["291"],"const _ = require('lodash')\nconst { SET_PRICE_RANGE, SET_CATEGORY, SET_DISTANCE, SET_OFFER_TYPE, SET_ITEMS, SET_RENT_ITEMS, SET_POST_ITEM_FORM_STATUS, SET_POST_ITEM_RENT_STATUS  } = require(\"../actions/types\")\n\n\nconst initialState = {\n  search_params: {\n    category: \"Books\",\n    offer_type: \"Purchase\"\n  },\n  items_state: {\n    saleItems: [],\n    rentItems: []\n  },\n  post_item_form_state: {\n    status: false\n  },\n  post_item_rent_state: {\n    rentStatus: false\n  }\n}\nconst searchCategoryReducer = (state = initialState, action) => {\n\n\n  const stateClone = _.cloneDeep(state)\n  //('ACTION:', action)\n\n  switch(action.type) {\n    case SET_CATEGORY:\n      let category = action.category.category\n      return {\n        ...state,\n       search_params: {...state.search_params,  category}\n      }\n    case SET_PRICE_RANGE:\n      let price_range = action.price_range.price_range\n    return {\n      ...state,\n      search_params: {...state.search_params, price_range}\n    }\n    case SET_DISTANCE:\n      let distance = action.distance.distance\n    return {\n      ...state,\n      search_params: {...state.search_params, distance}\n    }\n    case SET_OFFER_TYPE:\n      let offer_type = action.offer_type.offer_type\n    return {\n      ...state,\n      search_params: {...state.search_params,  offer_type}\n    }\n    case SET_POST_ITEM_FORM_STATUS:\n      let status = action.status\n      return{\n        ...state,\n        post_item_form_state: {...state.post_item_form_state, status}\n      }\n    case SET_POST_ITEM_RENT_STATUS:\n      let rentStatus = action.rentStatus\n      return{\n        ...state,\n        post_item_rent_state: {...state.post_item_rent_state, rentStatus}\n      }\n    case SET_ITEMS:\n      let saleItems = action.items\n    return {\n      ...state,\n      items_state: {...state.items_state, saleItems}\n    }\n    case SET_RENT_ITEMS:\n      let rentItems = action.rentItems\n      return {\n        ...state,\n        items_state: {...state.items_state, rentItems}\n      }\n    default:\n      return state;\n  }\n}\n\nexport default searchCategoryReducer;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/reducers/userCredsReducer.js",["292"],"import { SET_USER_CREDS } from '../actions/types';\nimport setUserCreds from '../actions/userCredsAction';\n\nconst initialState = {\n  // session: {\n  //   // currentUserId: '',\n  //   // currentUsername: '',\n  //   // currentUserFirstName: '',\n  //   // currentUserLastName: ''\n  // },\n\n}\n\nconst setUserCredsReducer = (state = initialState, action) => {\n  const currentUser = action.currentUserData\n  switch(action.type) {\n    case SET_USER_CREDS:\n      return {\n        ...state,\n        currentUser\n      }\n    default:\n      return state;\n  }\n}\n\nexport default setUserCredsReducer;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/types.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/UserDropdown.js",["293","294","295","296","297"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\nimport { useHistory,  Redirect } from 'react-router-dom'\nimport PostItem from './PostItem';\nimport PostRentItem from './PostRentItem';\nimport { setPostItemFormStatus } from '../../actions/itemsActions';\nimport { setPostItemRentStatus } from '../../actions/itemsActions';\n\n\n\n\nconst UserDropdown = (props) => {\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const form_state = useSelector(store => store.entities.post_item_form_state.status)\n  const rent_form_state = useSelector(store => store.entities.post_item_rent_state.rentStatus)\n  //(rent_form_state)\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    setAnchorEl(null);\n    document.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    props.setAuthenticated(false)\n  };\n\n  const handlePostedItems = () => {\n    history.replace('/posted-items')\n  }\n\n  const handlePurchaseHistory = () => {\n    history.replace('/purchase-history')\n  }\n\n  const handleMyStats = () => {\n    history.replace('/user-stats')\n  }\n\n  // const togglePostItemForm = () => {\n  //   //('here')\n  //   setVisibility(true)\n  //   return(<PostItem visible={visibility}/>)\n  // }\n\n  //(form_state)\n\n  const handleDialogClose = () => {\n    dispatch(setPostItemFormStatus(false))\n    // setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n   dispatch(setPostItemFormStatus(true))\n  };\n\n  const handleDialogRentClose = () => {\n    dispatch(setPostItemRentStatus(false))\n    // setDialogOpen(false);\n  };\n\n  const handleDialogRentOpen = () => {\n   dispatch(setPostItemRentStatus(true))\n  };\n\n  return (\n    <>\n      <div>\n        {/* <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}> */}\n          <h2 className=\"three-dots\">\n            <BiDotsVerticalRounded aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}/>\n          </h2>\n        {/* </Button> */}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleDialogOpen}> Post an Item for Sale</MenuItem>\n          <MenuItem onClick={handleDialogRentOpen}> Post an Item for Rent</MenuItem>\n          <MenuItem onClick={handleMyStats}>My Stats</MenuItem>\n          <MenuItem onClick={handlePostedItems}>Posted Items</MenuItem>\n          <MenuItem onClick={handlePurchaseHistory}>Purchase History</MenuItem>\n          <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        </Menu>\n      </div>\n      {rent_form_state === true ? <PostRentItem /> : <> </>}\n      {form_state === true ? <PostItem /> : <> </>}\n\n      {/* <PostRentItem /> */}\n    </>\n\n  );\n}\n\n{/* || rent_form_state.length === 0) */}\n// || form_state.length === 0)\n\nexport default UserDropdown;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/PriceRange.js",["298"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MdAttachMoney } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPriceRange } from '../../actions/searchCategoryActions';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  priceRangeButton : {\n    minHeight: '64.4px',\n    minWidth: '210px;',\n    maxWidth: '210px;',\n  }\n}));\n\nconst PriceRange = () => {\n\n  let defaultPriceRange = useSelector(store => store.entities.search_params.price_range)\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const options = ['ANY', '$5 - $20', '$20 - $50', '$50 - $100', '$100 +']\n  const prices = [[0, 1000000000], [5, 20], [20, 50], [50, 100], [100, 10000000000]]\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  //('DEFAULT PRICE RANGE:', defaultPriceRange)\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = async (e, idx) => {\n\n    dispatch(setPriceRange({\n      price_range: prices[idx]\n    }))\n    setSelectedCategory(options[idx])\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  if(defaultPriceRange && defaultPriceRange[1] === 10000000000) {\n    defaultPriceRange = '$100+'\n  } else if(defaultPriceRange && defaultPriceRange[1] === 1000000000) {\n    defaultPriceRange = 'Any'\n  } else if(defaultPriceRange && defaultPriceRange.length === 2) {\n    defaultPriceRange = `$${defaultPriceRange[0]} - $${defaultPriceRange[1]}`\n  }\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant=\"outlined\" color=\"secondary\" className=\"search-container__price-range-button\">\n        <MdAttachMoney /> Price Range: {selectedCategory ? selectedCategory : <p className=\"price-range-selection\">{defaultPriceRange ? defaultPriceRange : 'Any'}</p>}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, idx) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(event, idx)}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\nexport default PriceRange;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Distance.js",["299","300"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { GiPathDistance } from \"react-icons/gi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setDistance } from '../../actions/searchCategoryActions';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  distanceButton : {\n    minHeight: '64.4px',\n    minWidth: '210px;',\n    maxWidth: '210px;',\n  }\n}));\n\nconst Distance = () => {\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const options = ['0 - 5 mi', '10 - 20 mi', '20 mi +']\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleClick = (event) => {\n    alert('Distance Feature in Progress')\n    // setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = async (e, idx) => {\n\n    dispatch(setDistance({\n      distance: options[idx]\n    }))\n    setSelectedCategory(options[idx])\n    setAnchorEl(null);\n  };\n\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant=\"outlined\" color=\"secondary\" className=\"search-container__distance-button\">\n        <GiPathDistance /> Distance: {selectedCategory ? selectedCategory : <p className=\"distance-selection\">Any</p>}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, idx) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(event, idx)}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\nexport default Distance;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/OfferType.js",["301","302"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MdLocalGroceryStore } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setOfferType} from '../../actions/searchCategoryActions';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  offerTypeButton : {\n    minHeight: '64.4px',\n    minWidth: '210px;',\n    maxWidth: '210px;',\n  }\n}));\n\nconst OfferType = () => {\n\n  let defaultOfferType = useSelector(store => store.entities.search_params.offer_type)\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const options = ['Purchase', 'Rent']\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = async (e, idx) => {\n\n    dispatch(setOfferType({\n      offer_type: options[idx]\n    }))\n    setSelectedCategory(options[idx])\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant=\"outlined\" color=\"secondary\" className=\"search-container__offer-type-button\">\n        <MdLocalGroceryStore /> OfferType: {defaultOfferType ? defaultOfferType : <p className=\"offer-type-selection\">Purchase</p>}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, idx) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(event, idx)}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\nexport default OfferType;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/SearchBar.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/Category.js",["303"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { setCategory } from '../../actions/searchCategoryActions';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Category = () => {\n\n  let defaultCategory = useSelector(store => store.entities.search_params.category)\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const dispatch = useDispatch();\n  const options = ['Books', 'Clothing', 'Electronics', 'Home Decor', 'Kitchen', 'Music', 'Video Games', ]\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuItemClick = async (e, idx) => {\n\n    dispatch(setCategory({\n      category: options[idx]\n    }))\n    setSelectedCategory(options[idx])\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div className='category-contents'>\n      <span>\n        <h1>\n          Category:\n        </h1>\n      </span>\n      <div className=\"chosen-category\">\n        <h3>\n        {defaultCategory ? defaultCategory : <p>Books</p>}\n        </h3>\n      </div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        <GiHamburgerMenu />\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, idx) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(event, idx)}>\n            {options[idx]}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nexport default Category;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/homepage/RentableItemTable.js",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Paper,\n  Button,\n  FormControl,\n  InputLabel,\n  Input,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setRentItems } from '../../actions/itemsActions';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useHistory, Link, Switch } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '50%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n    // border: '2px solid black'\n  },\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"black\",\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  },\n  buyNow: {\n    maxHeight: \"50px\"\n  },\n  cardActionArea: {\n    width: '200px'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  rentDialog: {\n    width: '300px',\n    height: '200px'\n  },\n  confirmButton: {\n    color: theme.palette.secondary.main,\n    marginBottom: '5px',\n    color: \"white\"\n  },\n  cancelButton: {\n    marginBottom: '5px',\n    color: theme.palette.secondary.main,\n    color: \"white\"\n  }\n}))\n\nfunction createData(name, rate,rented, id, seller_username, image_url, category, description, seller_id, return_date) {\n  return { name, rate,rented, id, seller_username, image_url, category, description, seller_id, return_date};\n}\n// sets the current date as the default date for the date picker\n\nconst date = new Date()\nconst day = date.getDate()\nconst month = date.getMonth() + 1\nconst year = date.getFullYear()\n//(year)\n//(day)\n//(month)\nconst today = new Date(month+'-'+day+'-'+year)\n\nconst RentableItemTable = () => {\n  let rentItems = useSelector(store => store.entities.items_state.rentItems);\n  const currUserId = useSelector(store => store.session.currentUser.id);\n  const [currItem, setCurrItem] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [confirmRentDialog, setConfirmRentDialog] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [rentTotal, setRentTotal] = useState(null)\n  const [selectedDateString, setSelectedDateString] = useState(null)\n  const [enlargeImage, setEnlargeImage] = useState(false);\n  const [image, setImage] = useState(null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const updateItems = (updatedItem) => {\n    const id = updatedItem.id\n    rentItems.forEach((item, i) => {\n      if(item.id === id) {\n        rentItems[i] = updatedItem\n        dispatch(setRentItems(rentItems))\n      }\n    })\n  }\n\n  const updateSoldItems = (id) => {\n    let currItems = []\n    rentItems.forEach((item, i) => {\n      if(Number(item.id) !== Number(id)) {\n        currItems.push(item)\n      }\n      dispatch(setRentItems(currItems))\n    })\n  }\n  const handleUpdateDate = (e) => {\n    setSelectedDate(e.target.value)\n  }\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = (itemData) => {\n    if(itemData.rented === true){\n      alert(`This Item is Being Rented by Another User Until the Specified Return Date`)\n      return\n    }\n    setCurrItem(itemData)\n    setDialogOpen(true)\n  }\n\n  const handleConfirmRentDialog = () => {\n    const date = new Date()\n    const day = date.getDate()\n    const month = date.getMonth() + 1\n    const year = date.getFullYear()\n    const today = new Date(month+'-'+day+'-'+year)\n\n    let chosenMonth = selectedDate.slice(5, 7)\n    let chosenDay = selectedDate.slice(8)\n    let chosenYear = selectedDate.slice(0, 4)\n    let chosenDateObj = new Date(chosenMonth + '-' + chosenDay + '-' + chosenYear)\n\n    if(chosenDateObj < today) {\n      alert('Please Select a Future Date')\n      return\n    }\n\n    let chosenDateString = chosenMonth + '-' + chosenDay + '-' + chosenYear\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const rentPeriod = Math.round(Math.abs((chosenDateObj - today) / oneDay));\n    const total = rentPeriod * currItem.rate\n    //(total)\n    setRentTotal(total)\n    // setSelectedDate(chosenDateObj)\n    setSelectedDateString(chosenDateString)\n    setConfirmRentDialog(true)\n  }\n\n  const handleEnlargeImage = (image) => {\n    setImage(image)\n    setEnlargeImage(true)\n  }\n\n  const closeImage = () => {\n    setEnlargeImage(false)\n  }\n\n  const handleCloseAll = () => {\n    setDialogOpen(false)\n    setConfirmRentDialog(false)\n  }\n\n  const handleClick = (sellerId) => {\n    history.replace(`/seller-profile/${sellerId}`)\n  }\n\n  const handleCloseConfirmRentDialog = () => {\n    setConfirmRentDialog(false)\n  }\n\n  const handleRentItem = async () => {\n    //(currItem)\n    let rate = currItem.rate\n    let seller_name = currItem.seller_username\n    let itemName = currItem.name\n    let imageURL = currItem.image_url\n    let category = currItem.category\n    let seller_id = currItem.seller_id\n    const body = {\n      currUserId,\n      itemName,\n      seller_name,\n      today,\n      selectedDateString,\n      rentTotal,\n      imageURL,\n      category,\n      rate,\n      seller_id\n    }\n\n    const res = await fetch(`/api/items-and-services/${currItem.id}/rent`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    const {new_rent_item} = await res.json()\n    //(new_rent_item)\n    updateSoldItems(currItem.id)\n    handleCloseAll()\n  }\n\n  let dataRowsRent = []\n\n    {if(rentItems[0] === 'no_items') {\n      return(\n        <div className=\"items-body-container\">\n        <h1 className=\"no-results-heading\">No Results Found</h1>\n      </div>\n      )\n    } else {\n      return(\n        <div className=\"home-page-rent-items-container\">\n          <div className=\"home-page-rent-items-container__photos-outer-container\">\n              {rentItems.map((item) => {\n                let url = item.image_url\n                return (\n                  <div className=\"home-page-rent-items-container__photos-inner-container\">\n                    <CardActionArea className={classes.cardActionArea} onClick={() => handleEnlargeImage(url)}>\n                      <Card className={classes.paper}>\n                        <CardContent className={classes.image}>\n                          <img className=\"item-image-homepage\" src={url} />\n                        </CardContent>\n                      </Card>\n                    </CardActionArea>\n                  </div>\n                )\n              })}\n          </div>\n          <div className=\"home-page-rent-items-container__item-table-and-description-outer-container\">\n            {rentItems.forEach((item, idx) => {\n              let date;\n              if(item.expiry_date){\n                let month = item.expiry_date.slice(5,7)\n                let day = item.expiry_date.slice(8,10)\n                let year = item.expiry_date.slice(0, 4)\n                date = month+'-'+day+'-'+year\n              }\n              dataRowsRent.push(createData(item.name, item.rate, item.rented, item.id, item.seller_name, item.image_url, item.category, item.description, item.seller_id, date))\n            })}\n            {dataRowsRent.map((item, idx) => {\n              return(\n                <div className=\"home-page-rent-items-container__item-table-and-description-inner-container\">\n                  <TableContainer className=\"home-page-rent-items-container__item-table-and-description-inner-container__table-container\">\n                    <Table className=\"home-page-rent-items-container__item-table-and-description-inner-container__table-container__table\" size=\"small\" aria-label=\"a dense table\">\n                      <TableHead className={classes.tableHead}>\n                        <TableRow className={classes.tableHead}>\n                          {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                          <TableCell align=\"right\" className={classes.tableCell}>Seller Name</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Item Name</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Rate per Day</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Availablity</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow key={dataRowsRent[idx].name}>\n                          <TableCell align=\"right\">{dataRowsRent[idx].seller_username}</TableCell>\n                          <TableCell align=\"right\">{dataRowsRent[idx].name}</TableCell>\n                          <TableCell align=\"right\">${dataRowsRent[idx].rate}</TableCell>\n                          <TableCell align=\"right\">{dataRowsRent[idx].rented === true ? `Unavailable Until: ${dataRowsRent[idx].return_date}` : 'Available'}</TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                  <div className=\"home-page-rent-items-container__item-table-and-description-inner-container__description-container\">\n                    <p>\n                      {dataRowsRent[idx].description}\n                    </p>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"home-page-rent-items-container__buttons-outer-container\">\n            {dataRowsRent.map((item, idx) => {\n              return(\n                <div className=\"home-page-rent-items-container__buttons-inner-container\">\n                  <div className=\"buy-button\">\n                    <Button variant=\"contained\" color=\"secondary\" style={{width: \"158.03px\"}} size=\"medium\" variant=\"contained\" onClick={() => {handleDialogOpen(dataRowsRent[idx])}}>\n                      Rent\n                    </Button>\n                  </div>\n                  <div className=\"divider-container\">\n                    <div className=\"bid-purchase-divider\"></div>\n                  </div>\n                  <div className=\"seller-profile-button\">\n                    <Button color=\"secondary\" size=\"medium\" variant=\"contained\" onClick={() => {handleClick(dataRowsRent[idx].seller_id)}}>\n                      View Seller Info\n                    </Button>\n                  </div>\n                </div>\n\n              )\n            })}\n          </div>\n\n          <Dialog\n          open={dialogOpen}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          scroll='body'\n          fullWidth={true}\n          maxWidth='sm'\n          // className={classes.rentDialog}\n          >\n            <div className=\"rent-item-dbox-content-container\">\n              <div className=\"date-picker-container\">\n                {/* <div className=\"rent-item-dbox-content-container__inner-container\"> */}\n                  <h5>Note: If you choose to rent this item, the beginning of the rent period will start today</h5>\n                  <h3 className=\"select-return-date-heading\">Please Select a Return Date:</h3>\n                  <form className={classes.container} noValidate>\n                    <TextField\n                      id=\"date\"\n                      type=\"date\"\n                      defaultValue={selectedDate}\n                      className={classes.textField}\n                      onChange={handleUpdateDate}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </form>\n                {/* </div> */}\n              </div>\n              <div className=\"rent-item-buttons-container\">\n                <div className=\"rent-item-buttons\">\n                  <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  // style={{ color: \"white\" }}\n                  size=\"small\"\n                  className={classes.confirmButton}\n                  onClick={handleConfirmRentDialog}\n                  type=\"submit\"\n                  name=\"confirm-button\">\n                    Confirm\n                  </Button>\n                  <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  // style={{ color: \"white\" }}\n                  size=\"small\"\n                  className={classes.cancelButton}\n                  onClick={handleDialogClose}\n                  type=\"submit\"\n                  name=\"cancel-button\">\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Dialog>\n\n          <Dialog\n          open={confirmRentDialog}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          scroll='body'\n          fullWidth={true}\n          maxWidth='xs'\n          // className={classes.rentDialog}\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {`Are you sure that you want to rent the selected item, which is to be returned on ${selectedDateString}, for a total of $${rentTotal}?`}\n            </DialogTitle>\n            <DialogActions>\n              <Button onClick={handleCloseConfirmRentDialog} color=\"secondary\">\n                Cancel\n              </Button>\n              <Button color=\"secondary\" onClick={handleRentItem}>\n                Confirm\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <Dialog\n          open={enlargeImage}\n          onClose={closeImage}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          >\n            <img className=\"item-image-enlarged\" src={image} />\n\n          </Dialog>\n\n        </div>\n      )\n    }\n  }\n}\n\nexport default RentableItemTable;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForRent.js",["323","324"],"import React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport './sellerProfile.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: 'white',\n    background: 'white',\n    color: theme.palette.secondary.contrastText,\n    height: '300px',\n    width: '300px',\n    marginLeft: '20px',\n    paddingTop: '50px',\n    paddingBottom: '50px',\n    paddingLeft: '20px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: 'center',\n    alignItems: \"center\",\n    padding: '10px',\n    height: '300px',\n    width: '300px',\n    marginBottom: '200px',\n    paddingRight: '50px'\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    // minWidth: 650,\n    minWidth: 350,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px',\n    width: '400px',\n    height: '94px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  gridItem: {\n    width: '100%',\n    // border: '2px solid black',\n    borderRadius: '5px'\n  }\n\n}))\n// rgb(206, 204, 204)\n\nconst SellerProfileForRent = (props) => {\n  let itemData = props.itemData['user_data']['items_for_rent']\n  let tableData = props.itemData['table_data']\n  const classes = useStyles()\n\n  return(\n    <>\n      <div className=\"divider\">\n      </div>\n      {itemData.length > 0 ?\n        <div className=\"seller-items-body-container-background\">\n          <div className=\"seller-items-body-container\">\n            {/* <div className=\"seller-items-container\"> */}\n              <Grid container spacing={1} className={classes.grid} >\n                {itemData.map((item, idx) => {\n                  let url = item.image_url\n                  return (\n                    <>\n                    {/* <div className=\"grid-item-container\"> */}\n                    <Grid item xs={12} md={12} lg={12} className={classes.gridItem}>\n                      <div className=\"item-name-seller-profile\"><h2 className=\"item-text\">{item.name}</h2></div>\n                      {/* <div className=\"inner-grid-container\"> */}\n                        <div className=\"seller-page-item-cards\">\n                          <Card className={classes.paper}>\n                            <CardContent className={classes.image}>\n                              <img className=\"item-image\" src={url} />\n                            </CardContent>\n                          </Card>\n                          <div className=\"description-table-container\">\n                            <div className=\"table-container\">\n\n                              <TableContainer className={classes.tableContainer}>\n                                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                  <TableHead className={classes.tableHead}>\n                                    <TableRow>\n                                      {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                                      <TableCell align=\"center\" className={classes.tableCell}>Daily Rate</TableCell>\n                                      <TableCell align=\"center\" className={classes.tableCell}>Availablity</TableCell>\n                                    </TableRow>\n                                  </TableHead>\n                                  <TableBody>\n                                    <TableRow key={tableData[idx].name}>\n                                      <TableCell align=\"center\">${tableData[idx].rate}</TableCell>\n                                      <TableCell align=\"center\">{tableData[idx].rented === true ? `Unavailable Until: ${tableData[idx].expiry_date}` : 'Available'}</TableCell>\n                                    </TableRow>\n                                  </TableBody>\n                                </Table>\n                              </TableContainer>\n                            </div>\n                            <div className=\"item-description-conatiner\">\n                              {item.description}\n                            </div>\n                          </div>\n                        </div>\n                    </Grid>\n                    <div className=\"divider\">\n                    </div>\n                    </>\n                  )\n                })}\n              </Grid>\n          </div>\n        </div>\n        :\n        <div className=\"no-items-message-seller-profile\">\n         <h1>No Items Have Been Posted For Rent by This User</h1>\n       </div>\n      }\n    </>\n  )\n}\n\nexport default SellerProfileForRent;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/seller_profile/SellerProfileForSale.js",["325","326"],"import React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport './sellerProfile.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: 'white',\n    background: 'white',\n    color: theme.palette.secondary.contrastText,\n    height: '300px',\n    width: '300px',\n    marginLeft: '20px',\n    paddingTop: '50px',\n    paddingBottom: '50px',\n    paddingLeft: '20px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: 'center',\n    alignItems: \"center\",\n    padding: '10px',\n    height: '300px',\n    width: '300px',\n    marginBottom: '200px',\n    paddingRight: '50px'\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    // minWidth: 650,\n    minWidth: 350,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px',\n    width: '400px',\n    height: '94px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  gridItem: {\n    width: '100%',\n    // border: '2px solid black',\n    borderRadius: '5px'\n  }\n\n}))\n// rgb(206, 204, 204)\n\nconst SellerProfileForSale = (props) => {\n  let itemData = props.itemData['user_data']['items_for_sale']\n  let tableData = props.itemData['table_data']\n  let user = props.itemData['user_data']['user']['username']\n  console.log('USER:', user)\n  const classes = useStyles()\n  return(\n    <>\n      <div className=\"divider\">\n      </div>\n      {itemData.length > 0 ?\n        <div className=\"seller-items-body-container-background\">\n          <div className=\"seller-items-body-container\">\n              <Grid container spacing={1} className={classes.grid} >\n                {itemData.map((item, idx) => {\n                  let url = item.image_url\n                  return (\n                    <>\n                      <Grid item xs={12} md={12} lg={12} className={classes.gridItem}>\n                        <div className=\"item-name-seller-profile\"><h2 className=\"item-text\">{item.name}</h2></div>\n                          <div className=\"seller-page-item-cards\">\n                            <Card className={classes.paper}>\n                              <CardContent className={classes.image}>\n                                <img className=\"item-image\" src={url} />\n                              </CardContent>\n                            </Card>\n                            <div className=\"description-table-container\">\n                              <div className=\"table-container\">\n                                <TableContainer className={classes.tableContainer}>\n                                  <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                                    <TableHead className={classes.tableHead}>\n                                      <TableRow>\n                                        {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                                        <TableCell align=\"center\" className={classes.tableCell}>Full Sale Price</TableCell>\n                                        <TableCell align=\"center\" className={classes.tableCell}>Current Bid</TableCell>\n                                        <TableCell align=\"center\" className={classes.tableCell}>Number of Bidders</TableCell>\n                                        <TableCell align=\"center\" className={classes.tableCell}>Days Remaining</TableCell>\n                                      </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                      <TableRow key={tableData[idx].name}>\n                                        <TableCell align=\"center\">${tableData[idx].price}</TableCell>\n                                        <TableCell align=\"center\">${tableData[idx].bid}</TableCell>\n                                        <TableCell align=\"center\">{tableData[idx].num_bidders}</TableCell>\n                                        <TableCell align=\"center\">{tableData[idx].days_remaining}</TableCell>\n                                      </TableRow>\n                                    </TableBody>\n                                  </Table>\n                                </TableContainer>\n                              </div>\n                              <div className=\"item-description-conatiner\">\n                                {item.description}\n                              </div>\n                            </div>\n                          </div>\n                      </Grid>\n                      <div className=\"divider\">\n                      </div>\n                    </>\n                  )\n                })}\n              </Grid>\n          </div>\n        </div>\n       :\n       <div className=\"no-items-message-seller-profile\">\n         <h1>No Items Have Been Posted For Sale by This User</h1>\n       </div>\n      }\n    </>\n  )\n}\n\nexport default SellerProfileForSale;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/ProfitsChart.js",["327"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport { useSelector } from \"react-redux\";\n\n\n\nconst ProfitsChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [profitData, setProfitData] = useState([])\n\n  let data =\n  [\n  { x: 1, y: 0, label: 'Janurary'},\n  { x: 2, y: 0, label: 'Februrary' },\n  { x: 3, y: 0, label: 'March' },\n  { x: 4, y: 0, label: 'April' },\n  { x: 5, y: 0, label: 'May' },\n  { x: 6, y: 0, label: 'June' },\n  { x: 7, y: 0, label: 'July' },\n  { x: 8, y: 0, label: 'August' },\n  { x: 9, y: 0, label: 'September' },\n  { x: 10, y: 0, label: 'October' },\n  { x: 11, y: 0, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      console.log('SALES DATA:', res)\n      items.forEach(item => {\n        console.log('ITEM:', item)\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        data[idx].y += item.price\n      })\n      setProfitData(data)\n    })()\n  }, [])\n\n\n  const options = {\n    animationEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Profits'\n    },\n    axisY: {\n      title: 'Profit',\n      prefix: '$'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      dataPoints: profitData\n    }]\n  }\n\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default ProfitsChart;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/SalesChart.js",["328","329","330"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst SalesChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [salesData, setSalesData] = useState([])\n\n  let data =\n  [\n  { x: 1, y: 0, label: 'Janurary'},\n  { x: 2, y: 0, label: 'Februrary' },\n  { x: 3, y: 0, label: 'March' },\n  { x: 4, y: 0, label: 'April' },\n  { x: 5, y: 0, label: 'May' },\n  { x: 6, y: 0, label: 'June' },\n  { x: 7, y: 0, label: 'July' },\n  { x: 8, y: 0, label: 'August' },\n  { x: 9, y: 0, label: 'September' },\n  { x: 10, y: 0, label: 'October' },\n  { x: 11, y: 0, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      //('SALES DATA:', data)\n      items.forEach(item => {\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        //(idx)\n        data[idx].y += 1\n        //(data)\n      })\n      setSalesData(data)\n    })()\n  }, [])\n\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Sales'\n    },\n    axisY: {\n      title: 'Number of Sales'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: salesData\n    }]\n  }\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default SalesChart;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/RentHistory.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { GiFalloutShelter } from 'react-icons/gi';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px',\n    marginTop: \"30px\"\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"black\",\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    // width: '800px'\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  Buttons: {\n    minWidth: '177px;',\n    maxWidth: '177px;',\n  }\n}))\n\nfunction createData(name, seller, rate, start_date, return_date, rent_total) {\n  return { name, seller, rate, start_date, return_date, rent_total };\n}\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nconst RentHistory = (props) => {\n  //(props.postedItems)\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [postedItems, setPostedItems] = useState({'items': [], 'users': []})\n  // const [dataRows, setDataRows] = useState([])\n  const [ratingVisibility, setRatingVisibility] = useState({})\n  const [currItem, setCurrItem] = useState(null)\n  const [itemRating, setItemRating] = useState(null)\n  const [selectedRatingButton, setSelectedRatingButton] = useState(null)\n  const [currentlyRentingButtonState, setCurrentlyRentingButtonState] = useState(true)\n  const [previouslyRentedButtonState, setPreviouslyRentedButtonState] = useState(false)\n  const classes = useStyles()\n  let items = []\n  let ratingState = {}\n  let dataRows = []\n  let rows = []\n  let currentlyRenting = props.postedItems.rented_items\n  let previouslyRented = props.postedItems.returned_rented_items\n  let itemsType;\n  if(currentlyRentingButtonState === true) {\n    itemsType = currentlyRenting\n  } else {\n    itemsType = previouslyRented\n  }\n\n  //('RETURNEDDDDD ITEMS:', props.postedItems.returned_rented_items)\n  itemsType.forEach((item, i) => {\n    ratingState[i] = false\n    let returnDate = item.return_date\n    let startDate = item.start_date\n\n    let startMonth = startDate.slice(5,7)\n    let startDay = startDate.slice(8,10)\n    let startYear = startDate.slice(0, 4)\n\n    let returnMonth = returnDate.slice(5,7)\n    let returnDay = returnDate.slice(8,10)\n    let returnYear = returnDate.slice(0, 4)\n\n    // startMonth+'-'+startDay+'-'+startYear\n\n    if(item.current_bid === null) {\n      dataRows.push(createData(item.item_name, item.seller_name, item.rate, startMonth+'-'+startDay+'-'+startYear, returnMonth+'-'+returnDay+'-'+returnYear, item.rent_total))\n    } else {\n      dataRows.push(createData(item.item_name, item.seller_name, item.rate, startMonth+'-'+startDay+'-'+startYear, returnMonth+'-'+returnDay+'-'+returnYear, item.rent_total))\n    }\n  })\n\n  const marks = [\n    {\n      value: 1,\n      label: '1',\n    },\n    {\n      value: 2,\n      label: '2',\n    },\n    {\n      value: 3,\n      label: '3',\n    },\n    {\n      value: 4,\n      label: '4',\n    },\n    {\n      value: 5,\n      label: '5',\n    },\n  ];\n\n  const changeButtonState = (e) => {\n    if(e.target.name === 'currently-renting') {\n      if(currentlyRentingButtonState === false) {\n        setCurrentlyRentingButtonState(true)\n        setPreviouslyRentedButtonState(false)\n      } else {\n        setCurrentlyRentingButtonState(false)\n        setPreviouslyRentedButtonState(true)\n\n      }\n    } else {\n      if(previouslyRentedButtonState === false) {\n        setPreviouslyRentedButtonState(true)\n        setCurrentlyRentingButtonState(false)\n\n      }else {\n        setPreviouslyRentedButtonState(false)\n        setCurrentlyRentingButtonState(true)\n      }\n    }\n  }\n\n  const updateItemRating = (e, value) => {\n    setItemRating(value)\n  }\n\n  const enableRating = (itemId, idx) => {\n    //(itemId)\n    let statecpy = {...ratingVisibility}\n    let value = ratingVisibility[idx]\n    statecpy[idx] = !value\n    if(selectedRatingButton !== null && selectedRatingButton !== idx) {\n      statecpy[selectedRatingButton] = false\n    }\n    setCurrItem(itemId)\n    setRatingVisibility(statecpy)\n    setSelectedRatingButton(idx)\n    // currItem = itemId\n    // ratingVisibility = statecpy\n    // selectedRatingButton = idx\n  }\n\n  const submitRating = async(itemId, idx) => {\n   const body = {\n      currUserId,\n      itemRating\n    }\n\n    const res = await fetch(`/api/items-and-services/${currItem}/rate-item`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type':'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const rating = await res.json()\n    //('UPDATED RATING OBJECT:', rating)\n\n    enableRating(itemId, idx)\n  }\n\n  return(\n    <>\n      {itemsType.length === 0 ?\n      <>\n        <div className=\"current-and-past-rent-buttons\">\n          <div className=\"currently-renting-button-container\">\n            <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={currentlyRentingButtonState ? 'contained' : 'outlined'} color=\"secondary\" name=\"currently-renting\" onClick={changeButtonState}>\n              Currently Renting\n            </Button>\n          </div>\n          <div className=\"current-and-past-rent-buttons-divider\"></div>\n          <div className=\"previously-rented-button-container\">\n            <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={previouslyRentedButtonState ? 'contained' : 'outlined'} color=\"secondary\" name=\"previously-rented\" onClick={changeButtonState}>\n              Previously Rented\n            </Button>\n          </div>\n        </div>\n        <h1 className=\"no-history-heading\">No Rent History...</h1>\n        <div className=\"items-body-container-user-dropdown\"/>\n      </>\n      :\n      <>\n      <div className=\"current-and-past-rent-buttons\">\n        <div className=\"currently-renting-button-container\">\n          <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={currentlyRentingButtonState ? 'contained' : 'outlined'} color=\"secondary\" name=\"currently-renting\" onClick={changeButtonState}>\n            Currently Renting\n          </Button>\n        </div>\n        <div className=\"current-and-past-rent-buttons-divider\"></div>\n        <div className=\"previously-rented-button-container\">\n          <Button className={classes.Buttons} aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={previouslyRentedButtonState ? 'contained' : 'outlined'} color=\"secondary\" name=\"previously-rented\" onClick={changeButtonState}>\n            Previously Rented\n          </Button>\n        </div>\n      </div>\n      <div>\n        <h1 className=\"purchase-history-heading\">\n          {currentlyRentingButtonState ? `Items You Are Currently Renting:` : `Items You Have Rented in the Past`}\n        </h1>\n      </div>\n      <div className=\"body-container-rent-history\">\n        <div className=\"body-container-rent-history__photos-container\">\n            {itemsType.map((item) => {\n              //(item)\n              let url = item.image_url\n              return (\n                <div className=\"item-photo-container-rent-history\">\n                  <Card className={classes.paper}>\n                    <CardContent className={classes.image}>\n                      <img className=\"item-image\" src={url} />\n                    </CardContent>\n                  </Card>\n                </div>\n              )\n            })}\n        </div>\n        <div className=\"body-container-rent-history__table-container\">\n          {itemsType.map((item, idx) => {\n            return(\n              <div className=\"body-container-rent-history__table-container__table\">\n                <TableContainer className={classes.tableContainer} style={{marginRight: \"20px\"}}>\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                      <TableHead className={classes.tableHead}>\n                        <TableRow>\n                          <TableCell align=\"center\" className={classes.tableCell}>seller</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Item Name</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Rate Per Day</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Date Rented</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Return Date</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Rent Total</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow key={dataRows[idx].name}>\n                          <TableCell align=\"center\">{dataRows[idx].seller}</TableCell>\n                          <TableCell align=\"center\">{dataRows[idx].name}</TableCell>\n                          <TableCell align=\"center\">${dataRows[idx].rate}</TableCell>\n                          <TableCell align=\"center\">{dataRows[idx].start_date}</TableCell>\n                          <TableCell align=\"center\">{dataRows[idx].return_date}</TableCell>\n                          <TableCell align=\"center\">${dataRows[idx].rent_total}</TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                  {currentlyRentingButtonState === true ?\n                  <> </>\n                  :\n                  <div className=\"rating-buttons-and-slider\">\n                    <div className=\"rate-and-submit-buttons\">\n                      <Button variant=\"contained\" color=\"secondary\" onClick={() => enableRating(item.id, idx)}>Rate item</Button>\n                      {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ? <></> : <div  className=\"submit-rating-button\"><Button variant=\"contained\" color=\"secondary\" onClick={() => submitRating(item.id, idx)}>Submit Rating</Button></div>}\n                    </div>\n                    {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ?\n                    <></>\n                    :\n                    <div className=\"slider\">\n                    <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n                      Rating:\n                    </Typography>\n                      <Slider\n                        defaultValue={props.postedItems.rent_reviews[idx].rating}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider-small-steps\"\n                        step={1}\n                        marks={marks}\n                        min={1}\n                        max={5}\n                        valueLabelDisplay=\"auto\"\n                        color=\"secondary\"\n                        onChange={updateItemRating}\n                      />\n                    </div>}\n                  </div>\n                }\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      </>\n      }\n    </>\n  )\n}\n\nexport default RentHistory;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedRentItems.js",["345","346","347","348","349","350","351","352","353","354","355","356"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    marginTop: \"30px\"\n  },\n  paper: {\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"black\",\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  }\n}))\n\nfunction createData(name, rate,rented, id, seller_username, image_url, category) {\n  return { name, rate,rented, id, seller_username, image_url, category};\n}\n\nconst PostedRentItems = (props) => {\n  //(props.postedItems.items_for_rent)\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [forSaleButtonState, setForSaleButtonState] = useState(true)\n  const [forRentButtonState, setForRentButtonState] = useState(false)\n  const [dataRows, setDataRows] = useState([])\n  const classes = useStyles()\n  let items = []\n  // //('ITEMS:', items)\n\n  const handleClick = (e) => {\n    if(e.target.name === 'for-sale') {\n      if(forSaleButtonState === false) {\n        setForSaleButtonState(true)\n        setForRentButtonState(false)\n      } else {\n        setForSaleButtonState(false)\n        setForRentButtonState(true)\n\n      }\n    } else {\n      if(forRentButtonState === false) {\n        setForRentButtonState(true)\n        setForSaleButtonState(false)\n\n      }else {\n        setForRentButtonState(false)\n        setForSaleButtonState(true)\n      }\n    }\n  }\n\n  let rows = []\n\n  props.postedItems.items_for_rent.forEach((item, idx) => {\n    const d1 = new Date(item.expiry_date)\n    //('EXPIRY DATE:', d1)\n    const today = new Date()\n    today.setDate(today.getDate()+0)\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n    rows.push(createData(item.name, item.rate, item.rented, item.id, item.seller_name, item.image_url, item.category))\n  })\n\n  return(\n    <>\n      {props.postedItems.items_for_rent.length === 0 ?\n        <>\n          <h1 className='no-items-posted-heading'>No Items Posted for Rent...</h1>\n          <h5 className=\"no-items-posted-heading\">HINT: If you would like to post something click on the dropdown menu located at the\n            top right of the page and choose either \"post an item for rent\" or \"post an item for sale\"\n          </h5>\n          <div className=\"items-body-container-user-dropdown\">\n          </div>\n        </>\n      :\n      <>\n        <div className=\"items-for-sale-heading-container\">\n          <h1 className=\"items-for-sale-heading\">\n            Your Items for Rent:\n          </h1>\n        </div>\n        <div className=\"body-container-posted-rent-items\">\n          <div className=\"body-container-posted-rent-items__photos-container\">\n              {props.postedItems.items_for_rent.map((item) => {\n                let url = item.image_url\n                return (\n                  <>\n                    <div className=\"item-photo-container-posted-rent-items\">\n                        <Card className={classes.paper}>\n                          <CardContent className={classes.image}>\n                            <img className=\"item-image\" src={url} />\n                          </CardContent>\n                        </Card>\n                    </div>\n                  </>\n                )\n              })}\n          </div>\n          <div className=\"body-container-posted-rent-items__for-rent-table-container\">\n            {props.postedItems.items_for_rent.map((item, idx) => {\n              return(\n                <div className=\"body-container-posted-rent-items__for-rent-table-container__for-rent-table\">\n                  <TableContainer className={classes.tableContainer} style={{marginRight: \"20px\"}}>\n                      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead className={classes.tableHead}>\n                          <TableRow className={classes.tableHead}>\n                            {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                            <TableCell align=\"center\" className={classes.tableCell}>Item Name</TableCell>\n                            <TableCell align=\"center\" className={classes.tableCell}>Rate per Day</TableCell>\n                            <TableCell align=\"center\" className={classes.tableCell}>Item Status</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n\n                          <TableRow key={rows[idx].name}>\n                            <TableCell align=\"center\">{rows[idx].name}</TableCell>\n                            <TableCell align=\"center\">${rows[idx].rate}</TableCell>\n                            <TableCell align=\"center\">{rows[idx].rented === true ? 'Rented' : 'Posted'}</TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </>\n      }\n    </>\n  )\n}\n\nexport default PostedRentItems;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostedSaleItems.js",["357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    marginTop: \"30px\"\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: \"black\",\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  }\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining) {\n  return { name, price, bid, num_bidders, days_remaining };\n}\n\nconst PostedSaleItems = (props) => {\n  //(props.postedItems.items_for_sale)\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [forSaleButtonState, setForSaleButtonState] = useState(true)\n  const [forRentButtonState, setForRentButtonState] = useState(false)\n  const [dataRows, setDataRows] = useState([])\n  const classes = useStyles()\n  let items = []\n  // //('ITEMS:', items)\n\n  // const handleClick = (e) => {\n  //   if(e.target.name === 'for-sale') {\n  //     if(forSaleButtonState === false) {\n  //       setForSaleButtonState(true)\n  //       setForRentButtonState(false)\n  //     } else {\n  //       setForSaleButtonState(false)\n  //       setForRentButtonState(true)\n\n  //     }\n  //   } else {\n  //     if(forRentButtonState === false) {\n  //       setForRentButtonState(true)\n  //       setForSaleButtonState(false)\n\n  //     }else {\n  //       setForRentButtonState(false)\n  //       setForSaleButtonState(true)\n  //     }\n  //   }\n  // }\n\n  let rows = []\n\n  props.postedItems.items_for_sale.forEach((item, idx) => {\n    const d1 = new Date(item.expiry_date)\n    //('EXPIRY DATE:', d1)\n    const today = new Date()\n    today.setDate(today.getDate()+0)\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n    if(item.current_bid === null) {\n      rows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining))\n    } else {\n      rows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining))\n    }\n  })\n\n  return(\n    <>\n      {props.postedItems.items_for_sale.length === 0 ?\n        <>\n          <h1 className=\"no-items-posted-heading\">No Items Posted for Sale...</h1>\n          <h5 className=\"no-items-posted-heading\">HINT: If you would like to post something click on the dropdown menu located at the\n            top right of the page and choose either \"post an item for rent\" or \"post an item for sale\"\n          </h5>\n          <div className=\"items-body-container-user-dropdown\">\n          </div>\n        </>\n      :\n      <>\n        <div className=\"items-for-sale-heading-container\">\n          <h1 className=\"items-for-sale-heading\">\n            Your Items for Sale:\n          </h1>\n        </div>\n        <div className=\"body-container-posted-sale-items\">\n          <div className=\"body-container-posted-sale-items__photos-container\">\n              {props.postedItems.items_for_sale.map((item) => {\n                let url = item.image_url\n                return (\n                  <>\n                    <div className=\"item-photo-container-posted-sale-items\">\n                        <Card className={classes.paper}>\n                          <CardContent className={classes.image}>\n                            <img className=\"item-image\" src={url} />\n                          </CardContent>\n                        </Card>\n                    </div>\n                  </>\n                )\n              })}\n          </div>\n          <div className=\"body-container-posted-sale-items__for-sale-table-container\">\n            {props.postedItems.items_for_sale.map((item, idx) => {\n              return(\n                <div className=\"body-container-posted-sale-items__for-sale-table-container__for-sale-table\">\n                  <TableContainer className={classes.tableContainer}  style={{marginRight: \"20px\"}}>\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                      <TableHead className={classes.tableHead}>\n                        <TableRow>\n                          {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                          <TableCell align=\"center\" className={classes.tableCell}>Item Name</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Full Sale Price</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Current Bid</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Number of Bidders</TableCell>\n                          <TableCell align=\"center\" className={classes.tableCell}>Days Remaining</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n\n                        <TableRow key={rows[idx].name}>\n                          <TableCell align=\"center\">{rows[idx].name}</TableCell>\n                          <TableCell align=\"center\">${rows[idx].price}</TableCell>\n                          <TableCell align=\"center\">${rows[idx].bid}</TableCell>\n                          <TableCell align=\"center\">{rows[idx].num_bidders}</TableCell>\n                          <TableCell align=\"center\">{rows[idx].days_remaining}</TableCell>\n                        </TableRow>\n\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </>\n      }\n    </>\n  )\n}\n\nexport default PostedSaleItems;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/itemsActions.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/user_dropdown/PostRentItem.js",["371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387"],"import React, { useState } from 'react';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setPostItemRentStatus } from '../../actions/itemsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button\n} from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { useForm } from 'react-hook-form';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from \"@material-ui/core/Select\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst fs = require('fs')\n\nconst useStyles = makeStyles((theme) => ({\n  itemFormModal: {\n    width: '400px',\n    margin: 'auto',\n    marginTop: '14vh',\n    backgroundColor: \"whitesmoke\",\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n\n  offerType: {\n    margin: '10px',\n    width: '100%'\n  },\n\n  formControl: {\n    width: '181px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  }\n}));\n\nconst PostRentItem = (props) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  const [itemCategory, setItemCategory] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [rate, setRate] = useState(null)\n  const [itemQuantity, setItemQuantity] = useState(\"\");\n  // const [imageURL, setImageURL] = useState('')\n  const [imageFile, setImageFile] = useState(null)\n  const [classTime, setClassTime] = useState(\"\");\n  const [modalClosed, setModalClosed] = useState('false')\n  const [encodedImg, setEncodedImg] = useState({})\n  const rent_form_state = useSelector(store => store.entities.post_item_rent_state.rentStatus)\n  const userId = useSelector(store => store.session.currentUser.id)\n  const username = useSelector(store => store.session.currentUser.username)\n  //(userId)\n  const { register, handleSubmit } = useForm()\n  const classes = useStyles()\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [popupVisible, setPopupVisible] = useState(false)\n  const[modalOpen, setModalOpen] = useState(true)\n  const [anchorElOffer, setAnchorElOffer] = useState(null);\n  const [anchorElCategory, setAnchorElCategory] = useState(null);\n  const [formErrors, setFormErrors] = useState([]);\n\n  // //('CURRENT USER ID:', userId)\n  let generatedImageURL;\n  // const handleClick = (event) => {\n  //   setAnchorElOffer(event.currentTarget);\n  // };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = (itemData) => {\n    setDialogOpen(true)\n  }\n\n  const handleCloseOffer = () => {\n    setAnchorElOffer(null);\n  };\n\n  const handleCloseCategory = () => {\n    setAnchorElCategory(null);\n  }\n\n  const handleRentPeriodSelection = (e) => {\n    let period = e.target.value\n    if (period === 'Day') {\n      setRate(itemPrice)\n    } else if(period === 'Week') {\n      setRate(Math.floor(Number(itemPrice)/7))\n    } else {\n      setRate(Math.floor(Number(itemPrice)/30))\n    }\n    handleCloseOffer()\n  }\n\n  const handleCategorySelection = (e) => {\n    //(e.target.value)\n    setItemCategory(e.target.value)\n    handleCloseCategory()\n  }\n\n  const handleInputChange = (e) => {\n    if (e.target.id === \"name-input\") {\n      setItemName(e.target.value);\n    } else if (e.target.id === \"description-input\") {\n      setItemDescription(e.target.value);\n    } else if(e.target.id === \"sell-price-input\") {\n      setItemPrice(e.target.value)\n    } else if(e.target.id === \"quantitiy-input\") {\n      setItemQuantity(e.target.value)\n    }\n  };\n\n  const handleCloseModal = (buttonName) => {\n    setModalOpen(false)\n    // //(e)\n    if(buttonName === 'close-button-rent') {\n      dispatch(setPostItemRentStatus(false))\n      return\n    }\n    setPopupVisible(true)\n    setTimeout(() => {\n      setPopupVisible(false)\n      dispatch(setPostItemRentStatus(false))\n    }, 2500)\n  }\n\n\n  const postItem = async() => {\n\n    //(generatedImageURL)\n    const body = {\n      userId,\n      username,\n      itemName,\n      itemDescription,\n      itemCategory,\n      itemPrice,\n      rate,\n      generatedImageURL,\n    }\n\n    //('EXPIRY DATE:', body)\n\n    const res = await fetch('/api/items-and-services/post-item-for-rent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const response = await res.json()\n    let errors = []\n    if(response.errors) {\n      response.errors.forEach(error => {\n        errors.push(error.msg)\n      })\n      setFormErrors(errors)\n      setDialogOpen(true)\n      return\n    }\n    handleCloseModal()\n  }\n\n  const uploadPhoto = async () => {\n    //(imageFile)\n    // //(data.image[0].name)\n    const fd = new FormData();\n    fd.append('file', imageFile)\n    // //(fd)\n    try {\n      const res = await fetch('/api/items-and-services/upload-photo', {\n        method: 'POST',\n        body: fd\n      })\n      const { imageURL } = await res.json()\n      generatedImageURL = imageURL\n      //(generatedImageURL)\n      postItem()\n    } catch(e) {\n      alert(e)\n      return\n    }\n  }\n\n  const validateForm = (e) => {\n    e.preventDefault()\n    // alert('Rent Functionality Still in Progress')\n    // return\n    let discoveredErrors = []\n    let requiredFields =\n    [\n    imageFile,\n    itemName,\n    itemDescription,\n    itemCategory,\n    itemPrice,\n    rate\n    ]\n    let errorMessages =\n    [\n      'You Must Upload an Image',\n      'You Must Enter an Item Name',\n      'You Must Enter an Item Description',\n      'You Must Pick a Category',\n      'You Must Enter an Item Price',\n      'You Must Pick a Rent Period'\n    ]\n\n    requiredFields.forEach((field, i) => {\n      if(!field) {\n        discoveredErrors.push(errorMessages[i])\n      }\n      setFormErrors(discoveredErrors)\n    })\n    if(discoveredErrors.length === 0) {\n      uploadPhoto()\n    } else {\n      setDialogOpen(true)\n    }\n  }\n\n  const postItemBody = (\n    <div className={classes.itemFormModal}>\n      <h2 id=\"simple-modal-title\">Item Info:</h2>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"name-input\" style={{color: \"black\"}}>Name</InputLabel>\n          <Input id=\"name-input\" onChange={handleInputChange} autoFocus style={{color: \"black\"}}/>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"description-input\" style={{color: \"black\"}}>Description</InputLabel>\n          <Input id=\"description-input\" onChange={handleInputChange} style={{color: \"black\"}}/>\n        </FormControl>\n      </div>\n      <div>\n      <FormControl className={classes.formControl}>\n          <InputLabel id=\"offer-type-select\" style={{color: \"black\"}}>Category</InputLabel>\n          <Select\n            labelId=\"offer-type-select\"\n            id=\"offer-type\"\n            onChange={(e) => handleCategorySelection(e)}\n          >\n            <MenuItem value={\"Books\"}>Books</MenuItem>\n            <MenuItem value={\"Clothing\"}>Clothing</MenuItem>\n            <MenuItem value={\"Electronics\"}>Electronics</MenuItem>\n            <MenuItem value={\"Home Decor\"}>Home Decor</MenuItem>\n            <MenuItem value={\"Kitchen\"}>Kitchen</MenuItem>\n            <MenuItem value={\"Music\"}>Music</MenuItem>\n            <MenuItem value={\"Video Games\"}>Video Games</MenuItem>\n          </Select>\n        </FormControl>\n        {/* <FormControl>\n          <InputLabel htmlFor=\"category-input\">Category</InputLabel>\n          <Input id=\"category-input\" onChange={handleInputChange} />\n        </FormControl> */}\n      </div>\n      {/* <div>\n        <FormControl>\n          <InputLabel htmlFor=\"quantitiy-input\">Quantity</InputLabel>\n          <Input id=\"quantitiy-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div> */}\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"sell-price-input\" style={{color: \"black\"}}>Rent Price</InputLabel>\n          <Input id=\"sell-price-input\" onChange={handleInputChange} style={{color: \"black\"}}/>\n\n        </FormControl>\n      </div>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"offer-type-select\" style={{color: \"black\"}}>Rent Period</InputLabel>\n          <Select\n            labelId=\"offer-type-select\"\n            id=\"offer-type\"\n            onChange={(e) => handleRentPeriodSelection(e)}\n          >\n            <MenuItem value={\"Day\"}>Day</MenuItem>\n            <MenuItem value={\"Week\"}>Week</MenuItem>\n            <MenuItem value={\"Month\"}>Month</MenuItem>\n            <MenuItem value={\"Year\"}>Year</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <div className=\"photo-upload-container\">\n        <form onChange={(e) => setImageFile(e.target.files[0])}>\n          <input type=\"file\" id=\"upload-image-input\" name='image'/>\n          {/* <button onClick={uploadPhoto} className=\"confirm-upload-button\">Confirm Upload</button> */}\n        </form>\n      </div>\n      <div className=\"post-item-or-service-buttons\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={validateForm}\n          type=\"submit\"\n          name=\"post-button\"\n        >\n          Post Item\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={()=>handleCloseModal('close-button-rent')}\n          type=\"submit\"\n          name=\"close-button-rent\"\n        >\n         Close\n        </Button>\n      </div>\n    </div>\n  );\n\n  return(\n    <>\n      {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Post Successful!</h2></div> : <></>}\n      <Modal\n      open={(() => {\n        if(rent_form_state === false || rent_form_state === 'undefined' || modalOpen === false) {\n          //('FALSE')\n          return false\n        }\n        //('TRUE')\n        return true\n      })()}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      >\n      {postItemBody}\n      </Modal>\n      <Dialog\n      open={dialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      >\n         <DialogTitle id=\"alert-dialog-title\">\n          {\"The Following Are Required:\"}\n        </DialogTitle>\n        <List>\n          {formErrors.map((error) => (\n            <ListItem>\n              <ListItemText>\n                {error}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n    </>\n  )\n}\n\nexport default PostRentItem;\n","/home/ryan/portfolio_projects/HiNeighbor/client/src/actions/searchCategoryActions.js",[],"/home/ryan/portfolio_projects/HiNeighbor/client/src/components/signup/SignUp.js",["388","389","390","391","392"],{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","severity":1,"message":"398","line":2,"column":32,"nodeType":"399","messageId":"400","endLine":2,"endColumn":40},{"ruleId":"397","severity":1,"message":"401","line":9,"column":8,"nodeType":"399","messageId":"400","endLine":9,"endColumn":13},{"ruleId":"397","severity":1,"message":"402","line":10,"column":8,"nodeType":"399","messageId":"400","endLine":10,"endColumn":16},{"ruleId":"397","severity":1,"message":"403","line":12,"column":8,"nodeType":"399","messageId":"400","endLine":12,"endColumn":23},{"ruleId":"397","severity":1,"message":"404","line":20,"column":9,"nodeType":"399","messageId":"400","endLine":20,"endColumn":14},{"ruleId":"397","severity":1,"message":"405","line":21,"column":9,"nodeType":"399","messageId":"400","endLine":21,"endColumn":19},{"ruleId":"397","severity":1,"message":"406","line":25,"column":9,"nodeType":"399","messageId":"400","endLine":25,"endColumn":16},{"ruleId":"407","severity":1,"message":"408","line":61,"column":6,"nodeType":"409","endLine":61,"endColumn":8,"suggestions":"410"},{"ruleId":"397","severity":1,"message":"411","line":4,"column":10,"nodeType":"399","messageId":"400","endLine":4,"endColumn":23},{"ruleId":"397","severity":1,"message":"412","line":4,"column":25,"nodeType":"399","messageId":"400","endLine":4,"endColumn":38},{"ruleId":"397","severity":1,"message":"413","line":4,"column":40,"nodeType":"399","messageId":"400","endLine":4,"endColumn":53},{"ruleId":"397","severity":1,"message":"414","line":6,"column":8,"nodeType":"399","messageId":"400","endLine":6,"endColumn":17},{"ruleId":"397","severity":1,"message":"415","line":8,"column":8,"nodeType":"399","messageId":"400","endLine":8,"endColumn":20},{"ruleId":"397","severity":1,"message":"398","line":9,"column":23,"nodeType":"399","messageId":"400","endLine":9,"endColumn":31},{"ruleId":"397","severity":1,"message":"416","line":28,"column":9,"nodeType":"399","messageId":"400","endLine":28,"endColumn":17},{"ruleId":"397","severity":1,"message":"417","line":29,"column":9,"nodeType":"399","messageId":"400","endLine":29,"endColumn":16},{"ruleId":"397","severity":1,"message":"418","line":34,"column":11,"nodeType":"399","messageId":"400","endLine":34,"endColumn":16},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"420","line":10,"column":23,"nodeType":"399","messageId":"400","endLine":10,"endColumn":34},{"ruleId":"421","severity":1,"message":"422","line":185,"column":11,"nodeType":"423","endLine":185,"endColumn":116},{"ruleId":"424","severity":1,"message":"425","line":270,"column":60,"nodeType":"426","endLine":270,"endColumn":75},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"427","line":9,"column":10,"nodeType":"399","messageId":"400","endLine":9,"endColumn":21},{"ruleId":"397","severity":1,"message":"428","line":10,"column":10,"nodeType":"399","messageId":"400","endLine":10,"endColumn":16},{"ruleId":"397","severity":1,"message":"404","line":15,"column":9,"nodeType":"399","messageId":"400","endLine":15,"endColumn":14},{"ruleId":"397","severity":1,"message":"429","line":16,"column":9,"nodeType":"399","messageId":"400","endLine":16,"endColumn":18},{"ruleId":"397","severity":1,"message":"430","line":20,"column":10,"nodeType":"399","messageId":"400","endLine":20,"endColumn":23},{"ruleId":"397","severity":1,"message":"431","line":20,"column":25,"nodeType":"399","messageId":"400","endLine":20,"endColumn":41},{"ruleId":"397","severity":1,"message":"432","line":23,"column":9,"nodeType":"399","messageId":"400","endLine":23,"endColumn":20},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"433","line":5,"column":3,"nodeType":"399","messageId":"400","endLine":5,"endColumn":17},{"ruleId":"397","severity":1,"message":"434","line":6,"column":3,"nodeType":"399","messageId":"400","endLine":6,"endColumn":7},{"ruleId":"397","severity":1,"message":"435","line":9,"column":22,"nodeType":"399","messageId":"400","endLine":9,"endColumn":32},{"ruleId":"397","severity":1,"message":"427","line":10,"column":10,"nodeType":"399","messageId":"400","endLine":10,"endColumn":21},{"ruleId":"397","severity":1,"message":"436","line":10,"column":36,"nodeType":"399","messageId":"400","endLine":10,"endColumn":43},{"ruleId":"397","severity":1,"message":"437","line":17,"column":8,"nodeType":"399","messageId":"400","endLine":17,"endColumn":13},{"ruleId":"397","severity":1,"message":"438","line":20,"column":10,"nodeType":"399","messageId":"400","endLine":20,"endColumn":26},{"ruleId":"397","severity":1,"message":"439","line":110,"column":10,"nodeType":"399","messageId":"400","endLine":110,"endColumn":21},{"ruleId":"397","severity":1,"message":"440","line":110,"column":23,"nodeType":"399","messageId":"400","endLine":110,"endColumn":37},{"ruleId":"397","severity":1,"message":"404","line":117,"column":7,"nodeType":"399","messageId":"400","endLine":117,"endColumn":12},{"ruleId":"397","severity":1,"message":"441","line":121,"column":7,"nodeType":"399","messageId":"400","endLine":121,"endColumn":11},{"ruleId":"397","severity":1,"message":"442","line":200,"column":11,"nodeType":"399","messageId":"400","endLine":200,"endColumn":17},{"ruleId":"421","severity":1,"message":"422","line":236,"column":27,"nodeType":"423","endLine":236,"endColumn":84},{"ruleId":"397","severity":1,"message":"443","line":3,"column":8,"nodeType":"399","messageId":"400","endLine":3,"endColumn":21},{"ruleId":"397","severity":1,"message":"444","line":16,"column":8,"nodeType":"399","messageId":"400","endLine":16,"endColumn":12},{"ruleId":"397","severity":1,"message":"445","line":23,"column":7,"nodeType":"399","messageId":"400","endLine":23,"endColumn":9},{"ruleId":"397","severity":1,"message":"446","line":76,"column":10,"nodeType":"399","messageId":"400","endLine":76,"endColumn":23},{"ruleId":"397","severity":1,"message":"447","line":77,"column":10,"nodeType":"399","messageId":"400","endLine":77,"endColumn":22},{"ruleId":"397","severity":1,"message":"448","line":80,"column":10,"nodeType":"399","messageId":"400","endLine":80,"endColumn":19},{"ruleId":"397","severity":1,"message":"449","line":80,"column":21,"nodeType":"399","messageId":"400","endLine":80,"endColumn":33},{"ruleId":"397","severity":1,"message":"450","line":81,"column":10,"nodeType":"399","messageId":"400","endLine":81,"endColumn":21},{"ruleId":"397","severity":1,"message":"451","line":81,"column":23,"nodeType":"399","messageId":"400","endLine":81,"endColumn":37},{"ruleId":"397","severity":1,"message":"452","line":82,"column":10,"nodeType":"399","messageId":"400","endLine":82,"endColumn":20},{"ruleId":"397","severity":1,"message":"453","line":82,"column":22,"nodeType":"399","messageId":"400","endLine":82,"endColumn":35},{"ruleId":"397","severity":1,"message":"454","line":87,"column":11,"nodeType":"399","messageId":"400","endLine":87,"endColumn":19},{"ruleId":"397","severity":1,"message":"455","line":87,"column":21,"nodeType":"399","messageId":"400","endLine":87,"endColumn":33},{"ruleId":"397","severity":1,"message":"456","line":90,"column":10,"nodeType":"399","messageId":"400","endLine":90,"endColumn":22},{"ruleId":"397","severity":1,"message":"457","line":90,"column":24,"nodeType":"399","messageId":"400","endLine":90,"endColumn":39},{"ruleId":"397","severity":1,"message":"458","line":93,"column":10,"nodeType":"399","messageId":"400","endLine":93,"endColumn":23},{"ruleId":"397","severity":1,"message":"459","line":94,"column":10,"nodeType":"399","messageId":"400","endLine":94,"endColumn":26},{"ruleId":"397","severity":1,"message":"460","line":107,"column":9,"nodeType":"399","messageId":"400","endLine":107,"endColumn":25},{"ruleId":"397","severity":1,"message":"461","line":119,"column":9,"nodeType":"399","messageId":"400","endLine":119,"endColumn":33},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"434","line":6,"column":3,"nodeType":"399","messageId":"400","endLine":6,"endColumn":7},{"ruleId":"397","severity":1,"message":"437","line":7,"column":3,"nodeType":"399","messageId":"400","endLine":7,"endColumn":8},{"ruleId":"397","severity":1,"message":"435","line":13,"column":22,"nodeType":"399","messageId":"400","endLine":13,"endColumn":32},{"ruleId":"397","severity":1,"message":"436","line":14,"column":36,"nodeType":"399","messageId":"400","endLine":14,"endColumn":43},{"ruleId":"397","severity":1,"message":"462","line":20,"column":22,"nodeType":"399","messageId":"400","endLine":20,"endColumn":26},{"ruleId":"397","severity":1,"message":"463","line":20,"column":28,"nodeType":"399","messageId":"400","endLine":20,"endColumn":34},{"ruleId":"464","severity":1,"message":"465","line":102,"column":5,"nodeType":"466","messageId":"467","endLine":102,"endColumn":11},{"ruleId":"464","severity":1,"message":"468","line":113,"column":3,"nodeType":"466","messageId":"467","endLine":113,"endColumn":15},{"ruleId":"397","severity":1,"message":"429","line":131,"column":7,"nodeType":"399","messageId":"400","endLine":131,"endColumn":16},{"ruleId":"469","severity":1,"message":"470","line":257,"column":3,"nodeType":"471","messageId":"472","endLine":446,"endColumn":4},{"ruleId":"421","severity":1,"message":"422","line":279,"column":25,"nodeType":"423","endLine":279,"endColumn":74},{"ruleId":"421","severity":1,"message":"422","line":439,"column":13,"nodeType":"423","endLine":439,"endColumn":64},{"ruleId":"397","severity":1,"message":"435","line":5,"column":22,"nodeType":"399","messageId":"400","endLine":5,"endColumn":32},{"ruleId":"397","severity":1,"message":"427","line":6,"column":10,"nodeType":"399","messageId":"400","endLine":6,"endColumn":21},{"ruleId":"397","severity":1,"message":"436","line":6,"column":36,"nodeType":"399","messageId":"400","endLine":6,"endColumn":43},{"ruleId":"397","severity":1,"message":"473","line":85,"column":10,"nodeType":"399","messageId":"400","endLine":85,"endColumn":20},{"ruleId":"397","severity":1,"message":"439","line":94,"column":10,"nodeType":"399","messageId":"400","endLine":94,"endColumn":21},{"ruleId":"397","severity":1,"message":"440","line":94,"column":23,"nodeType":"399","messageId":"400","endLine":94,"endColumn":37},{"ruleId":"397","severity":1,"message":"474","line":97,"column":10,"nodeType":"399","messageId":"400","endLine":97,"endColumn":18},{"ruleId":"407","severity":1,"message":"475","line":137,"column":6,"nodeType":"409","endLine":137,"endColumn":8,"suggestions":"476"},{"ruleId":"397","severity":1,"message":"433","line":3,"column":3,"nodeType":"399","messageId":"400","endLine":3,"endColumn":17},{"ruleId":"397","severity":1,"message":"434","line":4,"column":3,"nodeType":"399","messageId":"400","endLine":4,"endColumn":7},{"ruleId":"397","severity":1,"message":"427","line":7,"column":10,"nodeType":"399","messageId":"400","endLine":7,"endColumn":21},{"ruleId":"397","severity":1,"message":"436","line":7,"column":36,"nodeType":"399","messageId":"400","endLine":7,"endColumn":43},{"ruleId":"397","severity":1,"message":"435","line":10,"column":22,"nodeType":"399","messageId":"400","endLine":10,"endColumn":32},{"ruleId":"397","severity":1,"message":"477","line":30,"column":7,"nodeType":"399","messageId":"400","endLine":30,"endColumn":18},{"ruleId":"397","severity":1,"message":"441","line":62,"column":11,"nodeType":"399","messageId":"400","endLine":62,"endColumn":15},{"ruleId":"407","severity":1,"message":"475","line":72,"column":6,"nodeType":"409","endLine":72,"endColumn":8,"suggestions":"478"},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"427","line":5,"column":10,"nodeType":"399","messageId":"400","endLine":5,"endColumn":21},{"ruleId":"397","severity":1,"message":"479","line":12,"column":9,"nodeType":"399","messageId":"400","endLine":12,"endColumn":15},{"ruleId":"397","severity":1,"message":"480","line":13,"column":21,"nodeType":"399","messageId":"400","endLine":13,"endColumn":33},{"ruleId":"397","severity":1,"message":"481","line":61,"column":9,"nodeType":"399","messageId":"400","endLine":61,"endColumn":16},{"ruleId":"397","severity":1,"message":"433","line":3,"column":3,"nodeType":"399","messageId":"400","endLine":3,"endColumn":17},{"ruleId":"397","severity":1,"message":"434","line":4,"column":3,"nodeType":"399","messageId":"400","endLine":4,"endColumn":7},{"ruleId":"397","severity":1,"message":"427","line":7,"column":10,"nodeType":"399","messageId":"400","endLine":7,"endColumn":21},{"ruleId":"397","severity":1,"message":"420","line":7,"column":23,"nodeType":"399","messageId":"400","endLine":7,"endColumn":34},{"ruleId":"397","severity":1,"message":"436","line":7,"column":36,"nodeType":"399","messageId":"400","endLine":7,"endColumn":43},{"ruleId":"397","severity":1,"message":"435","line":8,"column":22,"nodeType":"399","messageId":"400","endLine":8,"endColumn":32},{"ruleId":"397","severity":1,"message":"482","line":33,"column":10,"nodeType":"399","messageId":"400","endLine":33,"endColumn":18},{"ruleId":"397","severity":1,"message":"483","line":33,"column":20,"nodeType":"399","messageId":"400","endLine":33,"endColumn":31},{"ruleId":"397","severity":1,"message":"484","line":36,"column":10,"nodeType":"399","messageId":"400","endLine":36,"endColumn":22},{"ruleId":"397","severity":1,"message":"485","line":37,"column":10,"nodeType":"399","messageId":"400","endLine":37,"endColumn":22},{"ruleId":"397","severity":1,"message":"417","line":38,"column":9,"nodeType":"399","messageId":"400","endLine":38,"endColumn":16},{"ruleId":"407","severity":1,"message":"486","line":98,"column":5,"nodeType":"409","endLine":98,"endColumn":7,"suggestions":"487"},{"ruleId":"488","severity":1,"message":"489","line":129,"column":100,"nodeType":"426","endLine":129,"endColumn":144},{"ruleId":"488","severity":1,"message":"489","line":132,"column":84,"nodeType":"426","endLine":132,"endColumn":128},{"ruleId":"397","severity":1,"message":"490","line":24,"column":9,"nodeType":"399","messageId":"400","endLine":24,"endColumn":19},{"ruleId":"397","severity":1,"message":"415","line":2,"column":8,"nodeType":"399","messageId":"400","endLine":2,"endColumn":20},{"ruleId":"397","severity":1,"message":"428","line":3,"column":8,"nodeType":"399","messageId":"400","endLine":3,"endColumn":14},{"ruleId":"397","severity":1,"message":"398","line":7,"column":23,"nodeType":"399","messageId":"400","endLine":7,"endColumn":31},{"ruleId":"397","severity":1,"message":"491","line":59,"column":9,"nodeType":"399","messageId":"400","endLine":59,"endColumn":26},{"ruleId":"397","severity":1,"message":"492","line":68,"column":9,"nodeType":"399","messageId":"400","endLine":68,"endColumn":30},{"ruleId":"469","severity":1,"message":"493","line":109,"column":1,"nodeType":"471","messageId":"494","endLine":109,"endColumn":41},{"ruleId":"397","severity":1,"message":"417","line":26,"column":9,"nodeType":"399","messageId":"400","endLine":26,"endColumn":16},{"ruleId":"397","severity":1,"message":"420","line":6,"column":23,"nodeType":"399","messageId":"400","endLine":6,"endColumn":34},{"ruleId":"397","severity":1,"message":"417","line":24,"column":9,"nodeType":"399","messageId":"400","endLine":24,"endColumn":16},{"ruleId":"397","severity":1,"message":"495","line":22,"column":10,"nodeType":"399","messageId":"400","endLine":22,"endColumn":26},{"ruleId":"397","severity":1,"message":"417","line":25,"column":9,"nodeType":"399","messageId":"400","endLine":25,"endColumn":16},{"ruleId":"397","severity":1,"message":"495","line":13,"column":10,"nodeType":"399","messageId":"400","endLine":13,"endColumn":26},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"434","line":6,"column":3,"nodeType":"399","messageId":"400","endLine":6,"endColumn":7},{"ruleId":"397","severity":1,"message":"437","line":7,"column":3,"nodeType":"399","messageId":"400","endLine":7,"endColumn":8},{"ruleId":"397","severity":1,"message":"496","line":9,"column":3,"nodeType":"399","messageId":"400","endLine":9,"endColumn":14},{"ruleId":"397","severity":1,"message":"497","line":10,"column":3,"nodeType":"399","messageId":"400","endLine":10,"endColumn":13},{"ruleId":"397","severity":1,"message":"498","line":11,"column":3,"nodeType":"399","messageId":"400","endLine":11,"endColumn":8},{"ruleId":"397","severity":1,"message":"435","line":13,"column":22,"nodeType":"399","messageId":"400","endLine":13,"endColumn":32},{"ruleId":"397","severity":1,"message":"436","line":14,"column":36,"nodeType":"399","messageId":"400","endLine":14,"endColumn":43},{"ruleId":"397","severity":1,"message":"499","line":15,"column":8,"nodeType":"399","messageId":"400","endLine":15,"endColumn":13},{"ruleId":"397","severity":1,"message":"462","line":20,"column":22,"nodeType":"399","messageId":"400","endLine":20,"endColumn":26},{"ruleId":"397","severity":1,"message":"463","line":20,"column":28,"nodeType":"399","messageId":"400","endLine":20,"endColumn":34},{"ruleId":"464","severity":1,"message":"500","line":99,"column":5,"nodeType":"466","messageId":"467","endLine":99,"endColumn":10},{"ruleId":"464","severity":1,"message":"500","line":104,"column":5,"nodeType":"466","messageId":"467","endLine":104,"endColumn":10},{"ruleId":"397","severity":1,"message":"501","line":137,"column":9,"nodeType":"399","messageId":"400","endLine":137,"endColumn":20},{"ruleId":"397","severity":1,"message":"502","line":250,"column":12,"nodeType":"399","messageId":"400","endLine":250,"endColumn":25},{"ruleId":"469","severity":1,"message":"470","line":258,"column":5,"nodeType":"471","messageId":"472","endLine":442,"endColumn":4},{"ruleId":"421","severity":1,"message":"422","line":275,"column":27,"nodeType":"423","endLine":275,"endColumn":76},{"ruleId":"488","severity":1,"message":"489","line":332,"column":109,"nodeType":"426","endLine":332,"endColumn":128},{"ruleId":"421","severity":1,"message":"422","line":435,"column":13,"nodeType":"423","endLine":435,"endColumn":64},{"ruleId":"464","severity":1,"message":"465","line":93,"column":5,"nodeType":"466","messageId":"467","endLine":93,"endColumn":11},{"ruleId":"421","severity":1,"message":"422","line":132,"column":31,"nodeType":"423","endLine":132,"endColumn":71},{"ruleId":"464","severity":1,"message":"465","line":93,"column":5,"nodeType":"466","messageId":"467","endLine":93,"endColumn":11},{"ruleId":"421","severity":1,"message":"422","line":130,"column":33,"nodeType":"423","endLine":130,"endColumn":73},{"ruleId":"407","severity":1,"message":"503","line":57,"column":6,"nodeType":"409","endLine":57,"endColumn":8,"suggestions":"504"},{"ruleId":"397","severity":1,"message":"428","line":4,"column":8,"nodeType":"399","messageId":"400","endLine":4,"endColumn":14},{"ruleId":"397","severity":1,"message":"427","line":5,"column":10,"nodeType":"399","messageId":"400","endLine":5,"endColumn":21},{"ruleId":"407","severity":1,"message":"503","line":59,"column":6,"nodeType":"409","endLine":59,"endColumn":8,"suggestions":"505"},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"433","line":5,"column":3,"nodeType":"399","messageId":"400","endLine":5,"endColumn":17},{"ruleId":"397","severity":1,"message":"434","line":6,"column":3,"nodeType":"399","messageId":"400","endLine":6,"endColumn":7},{"ruleId":"397","severity":1,"message":"435","line":9,"column":22,"nodeType":"399","messageId":"400","endLine":9,"endColumn":32},{"ruleId":"397","severity":1,"message":"427","line":10,"column":10,"nodeType":"399","messageId":"400","endLine":10,"endColumn":21},{"ruleId":"397","severity":1,"message":"436","line":10,"column":36,"nodeType":"399","messageId":"400","endLine":10,"endColumn":43},{"ruleId":"397","severity":1,"message":"437","line":17,"column":8,"nodeType":"399","messageId":"400","endLine":17,"endColumn":13},{"ruleId":"397","severity":1,"message":"438","line":20,"column":10,"nodeType":"399","messageId":"400","endLine":20,"endColumn":26},{"ruleId":"397","severity":1,"message":"439","line":113,"column":10,"nodeType":"399","messageId":"400","endLine":113,"endColumn":21},{"ruleId":"397","severity":1,"message":"440","line":113,"column":23,"nodeType":"399","messageId":"400","endLine":113,"endColumn":37},{"ruleId":"397","severity":1,"message":"404","line":122,"column":7,"nodeType":"399","messageId":"400","endLine":122,"endColumn":12},{"ruleId":"397","severity":1,"message":"441","line":125,"column":7,"nodeType":"399","messageId":"400","endLine":125,"endColumn":11},{"ruleId":"397","severity":1,"message":"442","line":237,"column":11,"nodeType":"399","messageId":"400","endLine":237,"endColumn":17},{"ruleId":"421","severity":1,"message":"422","line":292,"column":23,"nodeType":"423","endLine":292,"endColumn":63},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"434","line":5,"column":3,"nodeType":"399","messageId":"400","endLine":5,"endColumn":7},{"ruleId":"397","severity":1,"message":"435","line":7,"column":22,"nodeType":"399","messageId":"400","endLine":7,"endColumn":32},{"ruleId":"397","severity":1,"message":"427","line":8,"column":10,"nodeType":"399","messageId":"400","endLine":8,"endColumn":21},{"ruleId":"397","severity":1,"message":"436","line":8,"column":36,"nodeType":"399","messageId":"400","endLine":8,"endColumn":43},{"ruleId":"397","severity":1,"message":"506","line":63,"column":9,"nodeType":"399","messageId":"400","endLine":63,"endColumn":19},{"ruleId":"397","severity":1,"message":"474","line":66,"column":10,"nodeType":"399","messageId":"400","endLine":66,"endColumn":18},{"ruleId":"397","severity":1,"message":"507","line":66,"column":20,"nodeType":"399","messageId":"400","endLine":66,"endColumn":31},{"ruleId":"397","severity":1,"message":"404","line":68,"column":7,"nodeType":"399","messageId":"400","endLine":68,"endColumn":12},{"ruleId":"397","severity":1,"message":"508","line":71,"column":9,"nodeType":"399","messageId":"400","endLine":71,"endColumn":20},{"ruleId":"397","severity":1,"message":"509","line":101,"column":11,"nodeType":"399","messageId":"400","endLine":101,"endColumn":25},{"ruleId":"421","severity":1,"message":"422","line":132,"column":29,"nodeType":"423","endLine":132,"endColumn":69},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"434","line":5,"column":3,"nodeType":"399","messageId":"400","endLine":5,"endColumn":7},{"ruleId":"397","severity":1,"message":"435","line":7,"column":22,"nodeType":"399","messageId":"400","endLine":7,"endColumn":32},{"ruleId":"397","severity":1,"message":"427","line":8,"column":10,"nodeType":"399","messageId":"400","endLine":8,"endColumn":21},{"ruleId":"397","severity":1,"message":"436","line":8,"column":36,"nodeType":"399","messageId":"400","endLine":8,"endColumn":43},{"ruleId":"397","severity":1,"message":"506","line":64,"column":9,"nodeType":"399","messageId":"400","endLine":64,"endColumn":19},{"ruleId":"397","severity":1,"message":"510","line":65,"column":10,"nodeType":"399","messageId":"400","endLine":65,"endColumn":28},{"ruleId":"397","severity":1,"message":"511","line":65,"column":30,"nodeType":"399","messageId":"400","endLine":65,"endColumn":51},{"ruleId":"397","severity":1,"message":"512","line":66,"column":10,"nodeType":"399","messageId":"400","endLine":66,"endColumn":28},{"ruleId":"397","severity":1,"message":"513","line":66,"column":30,"nodeType":"399","messageId":"400","endLine":66,"endColumn":51},{"ruleId":"397","severity":1,"message":"474","line":67,"column":10,"nodeType":"399","messageId":"400","endLine":67,"endColumn":18},{"ruleId":"397","severity":1,"message":"507","line":67,"column":20,"nodeType":"399","messageId":"400","endLine":67,"endColumn":31},{"ruleId":"397","severity":1,"message":"404","line":69,"column":7,"nodeType":"399","messageId":"400","endLine":69,"endColumn":12},{"ruleId":"421","severity":1,"message":"422","line":137,"column":29,"nodeType":"423","endLine":137,"endColumn":69},{"ruleId":"397","severity":1,"message":"443","line":3,"column":8,"nodeType":"399","messageId":"400","endLine":3,"endColumn":21},{"ruleId":"397","severity":1,"message":"444","line":16,"column":8,"nodeType":"399","messageId":"400","endLine":16,"endColumn":12},{"ruleId":"397","severity":1,"message":"445","line":23,"column":7,"nodeType":"399","messageId":"400","endLine":23,"endColumn":9},{"ruleId":"397","severity":1,"message":"447","line":73,"column":10,"nodeType":"399","messageId":"400","endLine":73,"endColumn":22},{"ruleId":"397","severity":1,"message":"448","line":76,"column":10,"nodeType":"399","messageId":"400","endLine":76,"endColumn":19},{"ruleId":"397","severity":1,"message":"449","line":76,"column":21,"nodeType":"399","messageId":"400","endLine":76,"endColumn":33},{"ruleId":"397","severity":1,"message":"450","line":77,"column":10,"nodeType":"399","messageId":"400","endLine":77,"endColumn":21},{"ruleId":"397","severity":1,"message":"451","line":77,"column":23,"nodeType":"399","messageId":"400","endLine":77,"endColumn":37},{"ruleId":"397","severity":1,"message":"452","line":78,"column":10,"nodeType":"399","messageId":"400","endLine":78,"endColumn":20},{"ruleId":"397","severity":1,"message":"453","line":78,"column":22,"nodeType":"399","messageId":"400","endLine":78,"endColumn":35},{"ruleId":"397","severity":1,"message":"454","line":83,"column":11,"nodeType":"399","messageId":"400","endLine":83,"endColumn":19},{"ruleId":"397","severity":1,"message":"455","line":83,"column":21,"nodeType":"399","messageId":"400","endLine":83,"endColumn":33},{"ruleId":"397","severity":1,"message":"456","line":86,"column":10,"nodeType":"399","messageId":"400","endLine":86,"endColumn":22},{"ruleId":"397","severity":1,"message":"457","line":86,"column":24,"nodeType":"399","messageId":"400","endLine":86,"endColumn":39},{"ruleId":"397","severity":1,"message":"458","line":89,"column":10,"nodeType":"399","messageId":"400","endLine":89,"endColumn":23},{"ruleId":"397","severity":1,"message":"459","line":90,"column":10,"nodeType":"399","messageId":"400","endLine":90,"endColumn":26},{"ruleId":"397","severity":1,"message":"460","line":103,"column":9,"nodeType":"399","messageId":"400","endLine":103,"endColumn":25},{"ruleId":"397","severity":1,"message":"419","line":1,"column":27,"nodeType":"399","messageId":"400","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"420","line":10,"column":23,"nodeType":"399","messageId":"400","endLine":10,"endColumn":34},{"ruleId":"397","severity":1,"message":"514","line":39,"column":12,"nodeType":"399","messageId":"400","endLine":39,"endColumn":27},{"ruleId":"421","severity":1,"message":"422","line":151,"column":11,"nodeType":"423","endLine":151,"endColumn":116},{"ruleId":"424","severity":1,"message":"425","line":230,"column":60,"nodeType":"426","endLine":230,"endColumn":75},"no-native-reassign",["515"],"no-negated-in-lhs",["516"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Items' is defined but never used.","'PostItem' is defined but never used.","'PurchaseHistory' is defined but never used.","'items' is assigned a value but never used.","'form_state' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["517"],"'GiClawSlashes' is defined but never used.","'GiCrackedMask' is defined but never used.","'GiAbstract017' is defined but never used.","'holyGrail' is defined but never used.","'setUserCreds' is defined but never used.","'dispatch' is assigned a value but never used.","'classes' is assigned a value but never used.","'today' is assigned a value but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useDispatch' is defined but never used.","'Button' is defined but never used.","'rentItems' is assigned a value but never used.","'itemComponent' is assigned a value but never used.","'setItemComponent' is assigned a value but never used.","'handlePopUp' is assigned a value but never used.","'CardActionArea' is defined but never used.","'Grid' is defined but never used.","'withStyles' is defined but never used.","'connect' is defined but never used.","'Paper' is defined but never used.","'GiFalloutShelter' is defined but never used.","'postedItems' is assigned a value but never used.","'setPostedItems' is assigned a value but never used.","'rows' is assigned a value but never used.","'rating' is assigned a value but never used.","'DialogActions' is defined but never used.","'Menu' is defined but never used.","'fs' is assigned a value but never used.","'itemOfferType' is assigned a value but never used.","'itemQuantity' is assigned a value but never used.","'classTime' is assigned a value but never used.","'setClassTime' is assigned a value but never used.","'modalClosed' is assigned a value but never used.","'setModalClosed' is assigned a value but never used.","'encodedImg' is assigned a value but never used.","'setEncodedImg' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","'anchorElOffer' is assigned a value but never used.","'anchorElCategory' is assigned a value but never used.","'handleDialogOpen' is assigned a value but never used.","'handleOfferTypeSelection' is assigned a value but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","Duplicate key 'submitButton'.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'createData' is defined but never used.","'dataRows' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currUserId'. Either include it or remove the dependency array.",["518"],"'ratingState' is assigned a value but never used.",["519"],"'userId' is assigned a value but never used.","'setSalesData' is assigned a value but never used.","'graph_1' is assigned a value but never used.","'itemType' is assigned a value but never used.","'setItemType' is assigned a value but never used.","'forSaleItems' is assigned a value but never used.","'forRentItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["520"],"react/jsx-no-duplicate-props","No duplicate props allowed","'stateClone' is assigned a value but never used.","'handleDialogClose' is assigned a value but never used.","'handleDialogRentClose' is assigned a value but never used.","Block is redundant.","redundantBlock","'selectedCategory' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'Modal' is defined but never used.","Duplicate key 'color'.","'updateItems' is assigned a value but never used.","'new_rent_item' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findIndex', and 'userId'. Either include them or remove the dependency array.",["521"],["522"],"'currUserId' is assigned a value but never used.","'setDataRows' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'days_remaining' is assigned a value but never used.","'forSaleButtonState' is assigned a value but never used.","'setForSaleButtonState' is assigned a value but never used.","'forRentButtonState' is assigned a value but never used.","'setForRentButtonState' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"525","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"530","fix":"532"},"Update the dependencies array to be: [dispatch]",{"range":"533","text":"534"},"Update the dependencies array to be: [currUserId]",{"range":"535","text":"536"},{"range":"537","text":"536"},"Update the dependencies array to be: [id]",{"range":"538","text":"539"},"Update the dependencies array to be: [data, findIndex, userId]",{"range":"540","text":"541"},{"range":"542","text":"541"},[2209,2211],"[dispatch]",[3578,3580],"[currUserId]",[2440,2442],[3329,3331],"[id]",[1388,1390],"[data, findIndex, userId]",[1403,1405]]