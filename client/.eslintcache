[{"/home/ryan/aa_projects/hiNeighbor/client/src/index.js":"1","/home/ryan/aa_projects/hiNeighbor/client/src/theme.js":"2","/home/ryan/aa_projects/hiNeighbor/client/src/App.js":"3","/home/ryan/aa_projects/hiNeighbor/client/src/reportWebVitals.js":"4","/home/ryan/aa_projects/hiNeighbor/client/src/store/configureStore.js":"5","/home/ryan/aa_projects/hiNeighbor/client/src/actions/userCredsAction.js":"6","/home/ryan/aa_projects/hiNeighbor/client/src/components/ProtectedRoute.js":"7","/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/TopBar.js":"8","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/HomePage.js":"9","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/UserStats.js":"10","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Items.js":"11","/home/ryan/aa_projects/hiNeighbor/client/src/components/login/Login.js":"12","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js":"13","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostedItems.js":"14","/home/ryan/aa_projects/hiNeighbor/client/src/components/seller_profile/SellerProfile.js":"15","/home/ryan/aa_projects/hiNeighbor/client/src/reducers/userCredsReducer.js":"16","/home/ryan/aa_projects/hiNeighbor/client/src/reducers/searchCategoryReducer.js":"17","/home/ryan/aa_projects/hiNeighbor/client/src/actions/types.js":"18","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/PriceRange.js":"19","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Distance.js":"20","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/OfferType.js":"21","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/SearchBar.js":"22","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Category.js":"23","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/ProfitsChart.js":"24","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/SalesChart.js":"25","/home/ryan/aa_projects/hiNeighbor/client/src/actions/itemsActions.js":"26","/home/ryan/aa_projects/hiNeighbor/client/src/actions/searchCategoryActions.js":"27","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/UserDropdown.js":"28","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostItem.js":"29","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostRentItem.js":"30"},{"size":923,"mtime":1607042916884,"results":"31","hashOfConfig":"32"},{"size":260,"mtime":1607897400590,"results":"33","hashOfConfig":"32"},{"size":3340,"mtime":1610069792047,"results":"34","hashOfConfig":"32"},{"size":362,"mtime":1606955886074,"results":"35","hashOfConfig":"32"},{"size":549,"mtime":1607214752236,"results":"36","hashOfConfig":"32"},{"size":180,"mtime":1607042411814,"results":"37","hashOfConfig":"32"},{"size":270,"mtime":1607163007833,"results":"38","hashOfConfig":"32"},{"size":2072,"mtime":1610057808767,"results":"39","hashOfConfig":"32"},{"size":2180,"mtime":1610069792047,"results":"40","hashOfConfig":"32"},{"size":2386,"mtime":1607818201713,"results":"41","hashOfConfig":"32"},{"size":12391,"mtime":1610069792047,"results":"42","hashOfConfig":"32"},{"size":3274,"mtime":1610069792047,"results":"43","hashOfConfig":"32"},{"size":9069,"mtime":1610069792047,"results":"44","hashOfConfig":"32"},{"size":6569,"mtime":1610069792047,"results":"45","hashOfConfig":"32"},{"size":8410,"mtime":1610069792047,"results":"46","hashOfConfig":"32"},{"size":583,"mtime":1607198055613,"results":"47","hashOfConfig":"32"},{"size":1805,"mtime":1610064734537,"results":"48","hashOfConfig":"32"},{"size":410,"mtime":1610062093447,"results":"49","hashOfConfig":"32"},{"size":2227,"mtime":1608792815492,"results":"50","hashOfConfig":"32"},{"size":1570,"mtime":1607715358677,"results":"51","hashOfConfig":"32"},{"size":1669,"mtime":1608793018652,"results":"52","hashOfConfig":"32"},{"size":1797,"mtime":1610069792047,"results":"53","hashOfConfig":"32"},{"size":1821,"mtime":1608792917602,"results":"54","hashOfConfig":"32"},{"size":2299,"mtime":1610069792047,"results":"55","hashOfConfig":"32"},{"size":3428,"mtime":1610069792047,"results":"56","hashOfConfig":"32"},{"size":486,"mtime":1610064719727,"results":"57","hashOfConfig":"32"},{"size":551,"mtime":1607215538636,"results":"58","hashOfConfig":"32"},{"size":3285,"mtime":1610065065217,"results":"59","hashOfConfig":"32"},{"size":10933,"mtime":1610079085524,"results":"60","hashOfConfig":"32"},{"size":11166,"mtime":1610082522954,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1f3ig4u",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ryan/aa_projects/hiNeighbor/client/src/index.js",[],["141","142"],"/home/ryan/aa_projects/hiNeighbor/client/src/theme.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/App.js",["143","144","145","146","147","148","149"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Redirect, useHistory } from \"react-router-dom\";\nimport TopBar from './components/top-bar/TopBar'\nimport HomePage from './components/homepage/HomePage';\nimport Login from './components/login/Login';\nimport setUserCreds from './actions/userCredsAction'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Items from './components/homepage/Items';\nimport PostItem from './components/user_dropdown/PostItem';\nimport PostedItems from './components/user_dropdown/PostedItems';\nimport PurchaseHistory from './components/user_dropdown/PurchaseHistory';\nimport SellerProfile from './components/seller_profile/SellerProfile';\nimport UserStats from './components/user_dropdown/UserStats';\n\nconst App = () => {\n  const [authenticated, setAuthenticated] = useState(false);\n  const items = useSelector(store => store.entities.items_state)\n  const form_state = useSelector(store => store.entities.post_item_form_state.status)\n\n  // const[items, setItems] = useState([])\n  const dispatch = useDispatch();\n  const history = useHistory()\n\n\n  // AUTHENTICATES THE USER BY CHECKING TO SEE IF THEY HAVE A VALID ACCESS TOKEN\n  useEffect(() => {\n    (async () => {\n      try{\n        let token;\n        const cookieArr = document.cookie.split('=')\n        cookieArr.forEach((el, idx) => {\n          if(el === 'access_token') {\n            token = cookieArr[idx + 1]\n          }\n        })\n        if(!token) {\n          return\n        }\n        const res = await fetch('http://localhost:5000/api/users/authenticate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({'access_token': token})\n        })\n        if(res.status >= 400 && res.status < 500) {\n          return\n        }\n        const payload = await res.json()\n        console.log(payload)\n        dispatch(setUserCreds(payload))\n        setAuthenticated(true)\n      } catch(err) {\n        console.log(err)\n      }\n\n    })()\n  }, [])\n\n  return (\n    <BrowserRouter>\n      {/* {form_state === true ? <PostItem /> : <> </>} */}\n      <ProtectedRoute path=\"/\" authenticated={authenticated} exact={true}>\n        <TopBar setAuthenticated={setAuthenticated}/>\n        <HomePage />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/posted-items\" authenticated={authenticated} exact={true}>\n        <TopBar setAuthenticated={setAuthenticated}/>\n        <PostedItems />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/purchase-history\" authenticated={authenticated} exact={true}>\n        <TopBar setAuthenticated={setAuthenticated}/>\n        <PurchaseHistory />\n      </ProtectedRoute>\n      <ProtectedRoute path=\"/seller-profile/:id\" authenticated={authenticated} exact={true}>\n        <TopBar setAuthenticated={setAuthenticated}/>\n        <SellerProfile />\n      </ProtectedRoute>\n      <Route path=\"/login\" exact={true} >\n        <Login authenticated={authenticated} setAuthenticated={setAuthenticated}/>\n      </Route>\n      <ProtectedRoute path=\"/user-stats\" authenticated={authenticated} exact={true} >\n        <TopBar setAuthenticated={setAuthenticated}/>\n        <UserStats />\n      </ProtectedRoute>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/ryan/aa_projects/hiNeighbor/client/src/reportWebVitals.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/store/configureStore.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/actions/userCredsAction.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/ProtectedRoute.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/top-bar/TopBar.js",["150","151","152","153","154","155","156"],"import React from 'react';\nimport './top-bar.css'\nimport UserDropdown from '../user_dropdown/UserDropdown'\nimport { GiClawSlashes, GiCrackedMask, GiAbstract017 } from \"react-icons/gi\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport holyGrail from '../../images/holy_grail.PNG';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport setUserCreds from '../../actions/userCredsAction'\nimport { useHistory,  Redirect } from 'react-router-dom'\nimport { BsHouseFill } from \"react-icons/bs\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  topBar: {\n    backgroundColor: theme.palette.secondary.dark,\n    display: 'flex',\n    justifyContent: 'space-between',\n    height: '100px',\n  },\n  topBarRight: {\n    display: 'flex'\n  }\n}))\n// {classes.backgroundColor}\nconst TopBar = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const firstName = useSelector((store) => store.session.currentUser.firstName)\n  const history = useHistory();\n\n  const redirectToHome = () => {\n    const today = new Date()\n    // today.toLocalDateString()\n    // today.setDate(today.getDate())\n    console.log('TODAY:', today)\n    history.replace('/')\n  }\n  return (\n    <>\n      <div className=\"top-bar-container\">\n        <div className={classes.topBar}>\n          <div className=\"site-name-home-icon-container\">\n            <div className='site-name-container' onClick={redirectToHome}>\n              {/* <h2 className=\"site-name-text\">\n                Hi Neighbor!\n              </h2> */}\n            <h2 className=\"house-icon\">\n              <BsHouseFill />\n            </h2>\n            </div>\n          </div>\n          <div className='top-bar-right'>\n            <div className='username-container'>\n              <h2 className='username'>\n              Hello {firstName}!\n              </h2>\n            </div>\n            <div className='dropdown-button-container'>\n              <UserDropdown setAuthenticated={props.setAuthenticated}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n\nexport default TopBar;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/HomePage.js",["157","158","159","160"],"import React, { useState, useEffect } from 'react';\nimport './homepage.css';\nimport PriceRange from './PriceRange';\nimport Distance from './Distance';\nimport OfferType from './OfferType';\nimport SearchBar from './SearchBar';\nimport Category from './Category'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\n// import { view, Animated, TouchableOpacity, Text } from 'react-native';\nimport Items from './Items';\n\n\n\nconst HomePage = () => {\n  const items = useSelector(store => store.entities.items_state.items)\n  const [popupVisible, setPopupVisible] = useState(false)\n  console.log(items)\n\n  const handlePopUp = () => {\n    setPopupVisible(true)\n    setTimeout(() => {\n      setPopupVisible(false)\n    }, 3900);\n  }\n\n  // WAS TESTING THE INCLUDES FUNCTIONALITY OF SEQUELIZE ON THE SELLER PROFILE\n  // HERE SO THAT I COULD AVIOD A FEW CLICKS\n\n  // useEffect(() => {\n  //   (async() => {\n  //     const res = await fetch(`http://localhost:5000/api/users/${2}/get-seller-info`)\n  //     const sellerInfo = await res.json()\n  //     // items = postedItems\n  //     console.log('RETURNED ITEMS:', sellerInfo)\n  //     // setPostedItems(postedItems)\n  //   })()\n  // }, [])\n\n\n  return (\n    <>\n      {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Your purchase was successful</h2></div> : <></>}\n        <div className='category-contents-container'>\n        <Category />\n      </div>\n      <div className='search-container'>\n        <div className='toggles'>\n          <div className='price-range-container'>\n            <h4>\n              <PriceRange />\n            </h4>\n          </div>\n          <div className='distance-container'>\n            <h4>\n              <Distance />\n            </h4>\n          </div>\n          <div className='offer-type-container'>\n            <h4>\n              <OfferType />\n            </h4>\n          </div>\n        </div>\n        <div className='search-bar-container'>\n          <h4>\n            <SearchBar />\n          </h4>\n        </div>\n      </div>\n      {items.length > 0 ? <Items />  : <div className=\"items-area\"></div>}\n    </>\n\n  )\n}\n\n\nexport default HomePage;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/UserStats.js",["161","162","163","164","165"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SalesChart from './SalesChart';\nimport ProfitsChart from './ProfitsChart';\n\n\nconst UserStats = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [salesData, setSalesData] = useState([])\n  const [salesButtonState, setSalesButtonState] = useState(true)\n  const [profitsButtonState, setProfitsButtonState] = useState(false)\n\n  const handleClick = (e) => {\n    if(e.target.name === 'profits') {\n      if(profitsButtonState === false) {\n        setProfitsButtonState(true)\n        setSalesButtonState(false)\n      } else {\n        setProfitsButtonState(false)\n        setSalesButtonState(true)\n\n      }\n    } else {\n      if(salesButtonState === false) {\n        setSalesButtonState(true)\n        setProfitsButtonState(false)\n\n      }else {\n        setSalesButtonState(false)\n        setProfitsButtonState(true)\n      }\n    }\n  }\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Sales'\n    },\n    axisY: {\n      title: 'Number of Sales'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: salesData\n    }]\n  }\n  const graph_1 = (\n    <div className=\"chart-data\">\n      <CanvasJSChart options={ options } />\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"stats-buttons\">\n        <div>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={salesButtonState ? 'contained' : 'outlined'} color=\"primary\" onClick={handleClick} name=\"sales\">\n          Sales\n        </Button>\n        </div>\n        <div className=\"button-divider\"></div>\n        <div>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\"  variant={profitsButtonState ? 'contained' : 'outlined'} color=\"primary\" onClick={handleClick} name=\"profits\">\n          Profits\n        </Button>\n        </div>\n      </div>\n      <div>\n        {/* <CanvasJSChart options={ options } /> */}\n        {salesButtonState ? <SalesChart /> : <ProfitsChart />}\n      </div>\n    </>\n  )\n}\n\nexport default UserStats;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Items.js",["166","167","168","169","170","171","172","173","174"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Paper,\n  Button,\n  FormControl,\n  InputLabel,\n  Input,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setItems } from '../../actions/itemsActions';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useHistory, Link, Switch } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '50%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n    // border: '2px solid black'\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n    color: theme.palette.secondary.contrastText,\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '110px'\n  },\n  buyNow: {\n    maxHeight: \"50px\"\n  },\n  cardActionArea: {\n    width: '200px'\n  }\n\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining, item_id, current_bid, item_price) {\n  return { name, price, bid, num_bidders, days_remaining, item_id, current_bid, item_price };\n}\n\n\nconst Items = () => {\n  let items = useSelector(store => store.entities.items_state.items)\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [currItemId, setCurrItemId] = useState(null)\n  const [currBid, setCurrBid] = useState(null)\n  const [currItemPrice, setCurrItemPrice] = useState(null)\n  const [bidInput, setBidInput] = useState(null)\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const history = useHistory();\n  console.log('ITEMS:', items)\n\n  const updateBidInput = (e) => {\n    // console.log('BID INPUT:', e.target.value)\n    setBidInput(e.target.value)\n  }\n\n  const updateItems = (updatedItem) => {\n    // console.log('CURRENT ITEM OBJECT:', updatedItem)\n    const id = updatedItem.id\n    // console.log('ITEM ID:', id)\n    items.forEach((item, i) => {\n      // console.log('UPDATING ITEMS')\n      if(item.id === id) {\n        // console.log('CURR ITEM:', currItems[i])\n        items[i] = updatedItem\n        // console.log('CURRITEMS:', items)\n        dispatch(setItems(items))\n        // setCurrItemsState(currItems)\n      }\n    })\n  }\n\n  const updateSoldItems = (id) => {\n    let currItems = []\n    items.forEach((item, i) => {\n      if(Number(item.id) !== Number(id)) {\n        currItems.push(item)\n      }\n      dispatch(setItems(currItems))\n    })\n  }\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = (itemData) => {\n    console.log('ITEM DATA:', itemData)\n    setCurrItemId(itemData.itemId)\n    setDialogOpen(true)\n  }\n\n  const submitBid = async () => {\n\n    const body = {\n      bidInput,\n      currUserId\n    }\n\n    const res = await fetch(`http://localhost:5000/api/items-and-services/${currItemId}/bid`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    const updatedItem = await res.json()\n\n    console.log('RETURNED UPDATED ITEM:', updatedItem)\n\n    updateItems(updatedItem)\n    // alert(`bid of $${bidInput} was placed`)\n    setModalOpen(false)\n  }\n\n  const handlePurchase = async () => {\n\n    const body = {\n      currUserId\n    }\n\n    const res = await fetch(`http://localhost:5000/api/items-and-services/${currItemId}/purchase`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n    const {soldItemId} = await res.json()\n    console.log(soldItemId)\n\n    updateSoldItems(soldItemId)\n    handleDialogClose()\n  }\n\n  const handleClick = (sellerId) => {\n    history.replace('/seller-profile')\n    console.log(sellerId)\n  }\n\n  const openBidModal = (itemData) => {\n    console.log('ITEM DATA:', itemData)\n    setCurrItemId(itemData.itemId)\n    setCurrBid(itemData.currentBid)\n    setCurrItemPrice(itemData.itemPrice)\n    setModalOpen(true)\n  }\n\n  const closeModal = () => {\n    setModalOpen(false)\n  }\n  let dataRows = []\n  return(\n      <div className=\"items-body-container\">\n      <div className=\"items-container\">\n        <Grid container spacing={4} className={classes.grid} >\n          {items.map((item) => {\n            let url = item.image_url\n            return (\n              <Grid item xs={12} md={12}>\n                <Link to={`/seller-profile/${item.seller_id}`}>\n                <CardActionArea className={classes.cardActionArea}>\n                  <Card className={classes.paper}>\n                    <CardContent className={classes.image}>\n                      <img className=\"item-image-homepage\" src={url} />\n                    </CardContent>\n                  </Card>\n                </CardActionArea>\n                </Link>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </div>\n      <div className=\"item-data-container\">\n\n          {items.forEach((item, idx) => {\n\n            const d1 = new Date(item.expiry_date)\n            const today = new Date()\n            today.setDate(today.getDate()+0)\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n            const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n            if(item.current_bid === null) {\n              dataRows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining, item.id, item.current_bid, item.price))\n            } else {\n              dataRows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining, item.id, item.current_bid, item.price))\n            }\n\n          })}\n            {/* console.log(dataRows) */}\n          {dataRows.map((item, idx) => {\n            return(\n              <div className=\"main-page-items-table-container\">\n              <TableContainer className={classes.tableContainer}>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                  <TableHead className={classes.tableHead}>\n                    <TableRow className={classes.tableHead}>\n                      {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                      <TableCell align=\"right\" className={classes.tableCell}>Item Name</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Full Sale Price</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Current Bid</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Number of Bidders</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Days Remaining</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n\n                    <TableRow key={dataRows[idx].name}>\n                      {/* <TableCell component=\"th\" scope=\"row\">\n                        {dataRows.name}\n                      </TableCell> */}\n                      {/* <TableCell align=\"right\">{dataRows[idx].name}</TableCell> */}\n                      <TableCell align=\"right\">{dataRows[idx].name}</TableCell>\n                      <TableCell align=\"right\">${dataRows[idx].price}</TableCell>\n                      <TableCell align=\"right\">${dataRows[idx].bid}</TableCell>\n                      <TableCell align=\"right\">{dataRows[idx].num_bidders}</TableCell>\n                      <TableCell align=\"right\">{dataRows[idx].days_remaining}</TableCell>\n                    </TableRow>\n\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <div className=\"bid-buy-buttons-container\">\n                <div className=\"bid-button\">\n                <Button variant=\"contained\" color=\"primary\" variant=\"outlined\" onClick={() => {openBidModal({'itemId': dataRows[idx].item_id, 'currentBid': dataRows[idx].current_bid, 'itemPrice': dataRows[idx].item_price})}}>\n                  Bid\n                </Button>\n                </div>\n                <div className=\"bid-purchase-divider\"></div>\n                <div className=\"buy-button\">\n                <Button variant=\"contained\" color=\"primary\" size=\"medium\" variant=\"outlined\" onClick={() => {handleDialogOpen({'itemId': dataRows[idx].item_id, 'currentBid': dataRows[idx].current_bid, 'itemPrice': dataRows[idx].item_price})}}>\n                  Purchase\n                </Button>\n                </div>\n                </div>\n\n              </div>\n              )\n          })}\n\n      </div>\n\n      {/* BID MODAL */}\n\n      <Modal\n      open={modalOpen}\n      onClose={closeModal}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.itemFormModal}>\n          <h2 id=\"simple-modal-title\">Place Your Bid:</h2>\n          <div>\n            <FormControl>\n              <InputLabel htmlFor=\"bid-input\">Bid Amount</InputLabel>\n              <Input id=\"bid-input\" onChange={updateBidInput} autoFocus />\n            </FormControl>\n          </div>\n          <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ color: \"white\" }}\n            size=\"small\"\n            className={classes.submitButton}\n            onClick={() => {\n              if(Number(bidInput) <= currBid) {\n                alert('Your bid must be larger than the current bid amount')\n              } else if(Number(bidInput) > currItemPrice) {\n                alert('Your bid must be less than the item sell price')\n              } else {\n                submitBid()\n              }\n            }}\n            type=\"submit\"\n          >\n            Submit Bid\n          </Button>\n          </div>\n        </div>\n      </Modal>\n\n\n      {/* BUY NOW DIALOG BOX */}\n\n      <Dialog\n      open={dialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure that you want to purchase this item at its full sale price?\"}\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" autoFocus onClick={handlePurchase}>\n            Purchase Item\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default Items;\n// onClick={() => {handleClick(item.seller_id)}}\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/login/Login.js",["175","176","177"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, Redirect } from 'react-router-dom'\nimport setUserCreds from '../../actions/userCredsAction'\nimport './login.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      // width: '25ch',\n      width: '500px'\n    },\n  },\n}));\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const updateInput = (e) => {\n    if(e.target.name === 'password-input') {\n      setPassword(e.target.value)\n    } else {\n      setEmail(e.target.value)\n    }\n  }\n\n  const handleSubmit = async () => {\n    const body = {\n      email,\n      password\n    }\n    console.log(body)\n    const res = await fetch('http://localhost:5000/api/users/token', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const { user } = await res.json()\n\n    if(user) {\n      const payload = {\n        id: user.id,\n        username: user.userName,\n        firstName: user.firstName,\n        lastName: user.lastName\n      }\n      dispatch(setUserCreds(payload))\n      props.setAuthenticated(true)\n    }\n  }\n\n  const logInDemoUser = async () => {\n    const body = {\n      email: 'testuser@test.com',\n      password: 'password'\n    }\n    console.log(body)\n    const res = await fetch('http://localhost:5000/api/users/token', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const { user } = await res.json()\n\n    if(user) {\n      const payload = {\n        id: user.id,\n        username: user.userName,\n        firstName: user.firstName,\n        lastName: user.lastName\n      }\n      dispatch(setUserCreds(payload))\n      props.setAuthenticated(true)\n    }\n  }\n\n\n  if(props.authenticated === true) {\n    return <Redirect to=\"/\" exact={true}/>\n  }\n\n  return (\n    <div className=\"sign-in-container\">\n    <div className=\"sign-in-page\">\n      <div className=\"site-name-sign-in\">\n        <h1 className='site-name-text'>Hi Neighbor!</h1>\n      </div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField id=\"filled-basic\" label=\"Email:\" variant=\"filled\" name=\"email-input\" onChange={updateInput}/>\n        <div className=\"password-field\">\n        <TextField id=\"filled-basic\" label=\"Password:\" type=\"password\" variant=\"filled\" name=\"password-input\" fullWidth={true} onChange={updateInput}/>\n        </div>\n        <Button onClick={handleSubmit}  variant=\"contained\" color=\"secondary\">\n          Submit\n        </Button>\n        <div>\n        <Button onClick={logInDemoUser}  variant=\"contained\" color=\"secondary\" fullWidth={true}>\n          Log in as Demo User\n        </Button>\n        </div>\n      </form>\n    </div>\n    </div>\n  )\n}\n\n\nexport default Login;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PurchaseHistory.js",["178","179","180","181","182","183","184","185","186"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { GiFalloutShelter } from 'react-icons/gi';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    // width: '800px'\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n}))\n\nfunction createData(name, seller, purchase_price, purchase_date) {\n  return { name, seller, purchase_price, purchase_date };\n}\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nconst PurchaseHistory = () => {\n\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [postedItems, setPostedItems] = useState({'items': [], 'users': []})\n  const [dataRows, setDataRows] = useState([])\n  const[ratingVisibility, setRatingVisibility] = useState({})\n  const[currItem, setCurrItem] = useState(null)\n  const[itemRating, setItemRating] = useState(null)\n  const [selectedRatingButton, setSelectedRatingButton] = useState(null)\n  const classes = useStyles()\n  let items = []\n  let ratingState = {}\n  // console.log('ITEMS:', items)\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`http://localhost:5000/api/users/${currUserId}/get-purchase-history`)\n      const postedItems = await res.json()\n      // items = postedItems\n      // console.log('RETURNED ITEMS:', postedItems)\n      postedItems.items.forEach((item, i) => {\n        ratingState[i] = false\n        let month = item.date_sold.slice(5,7)\n        // console.log(month)\n        let day = item.date_sold.slice(8,10)\n        // console.log(day)\n        let year = item.date_sold.slice(0, 4)\n        if(item.current_bid === null) {\n          rows.push(createData(item.name, postedItems.users[item.seller_id - postedItems.items[0].seller_id].username, item.current_bid, month+'-'+day+'-'+year))\n        } else {\n          rows.push(createData(item.name, postedItems.users[item.seller_id - postedItems.items[0].seller_id].username, item.current_bid, month+'-'+day+'-'+year))\n        }\n      })\n      setDataRows(rows)\n      setRatingVisibility(ratingState)\n      setPostedItems(postedItems)\n    })()\n  }, [])\n\n  const updateItemRating = (e, value) => {\n    setItemRating(value)\n  }\n\n  const enableRating = (itemId, idx) => {\n    console.log(itemId)\n    let statecpy = {...ratingVisibility}\n    let value = ratingVisibility[idx]\n    statecpy[idx] = !value\n    if(selectedRatingButton !== null && selectedRatingButton !== idx) {\n      statecpy[selectedRatingButton] = false\n    }\n    setCurrItem(itemId)\n    setRatingVisibility(statecpy)\n    setSelectedRatingButton(idx)\n  }\n\n  const submitRating = async(itemId, idx) => {\n   const body = {\n      currUserId,\n      itemRating\n    }\n\n    const res = await fetch(`http://localhost:5000/api/items-and-services/${currItem}/rate-item`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type':'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const rating = await res.json()\n    console.log('UPDATED RATING OBJECT:', rating)\n\n    enableRating(itemId, idx)\n  }\n\n  return(\n    <>\n    {postedItems.items.length === 0 ? <h1>No Purchase History...</h1> :\n    <>\n    <div>\n      <h1 className=\"purchase-history-heading\">\n        Your Purchase History:\n      </h1>\n    </div>\n    <div className=\"items-body-container\">\n      <div className=\"items-container\">\n        <Grid container spacing={4} className={classes.grid} >\n          {postedItems.items.map((item) => {\n            // console.log(item)\n            let url = item.image_url\n            return (\n              <Grid item xs={12} md={12}>\n                <Card className={classes.paper}>\n                  <CardContent className={classes.image}>\n                    <img className=\"item-image\" src={url} />\n                  </CardContent>\n                </Card>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </div>\n      <div className=\"purchase-history-table-container\">\n\n          {postedItems.items.map((item, idx) => {\n            return(\n              <div className=\"purchase-history-table\">\n                 <TableContainer className={classes.tableContainer}>\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                      <TableHead className={classes.tableHead}>\n                        <TableRow>\n                          <TableCell align=\"right\" className={classes.tableCell}>seller</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Item Name</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Purchase Price</TableCell>\n                          <TableCell align=\"right\" className={classes.tableCell}>Purchase Date</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow key={dataRows[idx].name}>\n                          <TableCell align=\"right\">{dataRows[idx].seller}</TableCell>\n                          <TableCell align=\"right\">{dataRows[idx].name}</TableCell>\n                          <TableCell align=\"right\">${dataRows[idx].purchase_price}</TableCell>\n                          <TableCell align=\"right\">{dataRows[idx].purchase_date}</TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                  <div className=\"rating-buttons-and-slider\">\n                    <div className=\"rate-and-submit-buttons\">\n                      <Button variant=\"outlined\" color=\"primary\" onClick={() => enableRating(item.id, idx)}>Rate item</Button>\n                      {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ? <></> : <div  className=\"submit-rating-button\"><Button variant=\"outlined\" color=\"primary\" onClick={() => submitRating(item.id, idx)}>Submit Rating</Button></div>}\n                    </div>\n                    {ratingVisibility[idx] === false || ratingVisibility[idx] === undefined ?\n                    <></>\n                    :  <div className={classes.root}>\n                    <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n                      Rating:\n                    </Typography>\n                      <Slider\n                        defaultValue={postedItems.reviews[idx].rating}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider-small-steps\"\n                        step={1}\n                        marks\n                        min={1}\n                        max={5}\n                        valueLabelDisplay=\"auto\"\n                        onChange={updateItemRating}\n                      />\n                    </div>}\n                  </div>\n              </div>\n            )\n          })}\n      </div>\n    </div>\n    </>\n    }\n    </>\n  )\n}\n\nexport default PurchaseHistory;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostedItems.js",["187","188","189","190","191","192","193","194"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px'\n  },\n  paper: {\n    // padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: theme.palette.primary.light,\n    background: theme.palette.success.light,\n    color: theme.palette.secondary.contrastText,\n    height: '200px',\n    width: '200px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: '210px',\n    width: '200px',\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px'\n  }\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining) {\n  return { name, price, bid, num_bidders, days_remaining };\n}\n\nconst PostedItems = () => {\n\n  const currUserId = useSelector(store => store.session.currentUser.id)\n  const [postedItems, setPostedItems] = useState([])\n  const [dataRows, setDataRows] = useState([])\n  const classes = useStyles()\n  let items = []\n  // console.log('ITEMS:', items)\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`http://localhost:5000/api/users/${currUserId}/get-posted-items`)\n      const postedItems = await res.json()\n      // items = postedItems\n      if(postedItems.length === 0) {\n        return\n      }\n      console.log('RETURNED ITEMS:', postedItems)\n\n      postedItems.forEach((item, idx) => {\n        const d1 = new Date(postedItems[idx].expiry_date)\n        console.log('EXPIRY DATE:', d1)\n        const today = new Date()\n        today.setDate(today.getDate()+0)\n        const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n        if(item.current_bid === null) {\n          rows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining))\n        } else {\n          rows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining))\n        }\n      })\n      console.log('ROWS:', rows)\n      setDataRows(rows)\n      setPostedItems(postedItems)\n    })()\n  }, [])\n\n  return(\n    <>\n    {postedItems.length === 0 ? <h1>No Items Posted...</h1> :\n    <>\n    <div>\n      <h1 className=\"items-for-sale-heading\">\n        Your Items for Sale:\n      </h1>\n    </div>\n    <div className=\"items-body-container\">\n      <div className=\"items-container\">\n        <Grid container spacing={4} className={classes.grid} >\n          {postedItems.map((item) => {\n            console.log(item)\n            let url = item.image_url\n            return (\n              <>\n              <Grid item xs={12} md={12}>\n                <div className=\"item-name-posted-items\"><h2 className=\"item-text\">{item.name}</h2></div>\n                <Card className={classes.paper}>\n                  <CardContent className={classes.image}>\n                    <img className=\"item-image\" src={url} />\n                  </CardContent>\n                </Card>\n              </Grid>\n              <div className=\"item-divider\"></div>\n              </>\n            )\n          })}\n        </Grid>\n      </div>\n      <ul>\n        {postedItems.map((item, idx) => {\n          return(\n            <div className=\"posted-items-table-container\">\n              <TableContainer className={classes.tableContainer}>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                  <TableHead className={classes.tableHead}>\n                    <TableRow>\n                      {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                      <TableCell align=\"right\" className={classes.tableCell}>Full Sale Price</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Current Bid</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Number of Bidders</TableCell>\n                      <TableCell align=\"right\" className={classes.tableCell}>Days Remaining</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n\n                    <TableRow key={dataRows[idx].name}>\n                      {/* <TableCell component=\"th\" scope=\"row\">\n                        {dataRows.name}\n                      </TableCell> */}\n                      {/* <TableCell align=\"right\">{dataRows[idx].name}</TableCell> */}\n                      <TableCell align=\"right\">${dataRows[idx].price}</TableCell>\n                      <TableCell align=\"right\">${dataRows[idx].bid}</TableCell>\n                      <TableCell align=\"right\">{dataRows[idx].num_bidders}</TableCell>\n                      <TableCell align=\"right\">{dataRows[idx].days_remaining}</TableCell>\n                    </TableRow>\n\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </div>\n          )\n        })}\n      </ul>\n    </div>\n    </>\n    }\n    </>\n  )\n}\n\nexport default PostedItems;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/seller_profile/SellerProfile.js",["195","196","197","198","199","200","201","202","203","204","205","206","207"],"import React, { useState, useEffect } from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {\n  CardActionArea,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { GiClawSlashes, GiCrackedMask, GiAbstract017 } from \"react-icons/gi\";\nimport { useParams } from 'react-router';\nimport './sellerProfile.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    width: '100%',\n    margin: '0px',\n    // padding: '10px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    backgroundColor: 'white',\n    background: 'white',\n    color: theme.palette.secondary.contrastText,\n    height: '300px',\n    width: '300px',\n    marginLeft: '20px',\n    paddingTop: '50px',\n    paddingBottom: '50px',\n    paddingLeft: '20px'\n  },\n  typography: {\n    fontSize: theme.typography.fontSize\n  },\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: 'center',\n    alignItems: \"center\",\n    padding: '10px',\n    height: '300px',\n    width: '300px',\n    marginBottom: '200px',\n    paddingRight: '50px'\n  },\n  itemFormModal: {\n    // position: 'absolute',\n    position: \"absolute\",\n    // top: \"20rem\",\n    top: 100,\n    // left: 350,\n    left: 600,\n    // left: \"20rem\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n  table: {\n    // minWidth: 650,\n    minWidth: 350,\n  },\n  tableHead: {\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  tableRow: {\n    backgroundColor: 'whitesmoke'\n  },\n  tableContainer: {\n    paddingBottom: '0px',\n    backgroundColor: 'white',\n    height: '70px',\n    width: '400px',\n    height: '94px'\n  },\n  tableCell: {\n    color: theme.palette.secondary.contrastText\n  },\n\n}))\n\nfunction createData(name, price, bid, num_bidders, days_remaining) {\n  return { name, price, bid, num_bidders, days_remaining };\n}\n\n\n\nconst SellerProfile = () => {\n\n  const { id } = useParams()\n  const [userData, setUserData] = useState({'items': [], 'user': {}, 'sold': {}, 'reviews': {}})\n  const [dataRows, setDataRows] = useState([])\n  const classes = useStyles()\n  useEffect(() => {\n    (async() => {\n      let rows = []\n      const res = await fetch(`http://localhost:5000/api/users/${id}/get-seller-info`)\n      const sellerInfo = await res.json()\n      console.log('RETURNED ITEMS:', sellerInfo)\n      sellerInfo.items.forEach(item => {\n        const d1 = new Date(item.expiry_date)\n        const today = new Date()\n        today.setDate(today.getDate()+0)\n        const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        const days_remaining = Math.round(Math.abs((today - d1) / oneDay));\n        if(item.current_bid === null) {\n          rows.push(createData(item.name, item.price, 0, item.num_bids, days_remaining))\n        } else {\n          rows.push(createData(item.name, item.price, item.current_bid, item.num_bids, days_remaining))\n        }\n      })\n      setDataRows(rows)\n      setUserData(sellerInfo)\n    })()\n  },[])\n\n  return(\n    <>\n      <div className=\"seller-info\">\n        <div className=\"seller-username\">\n          <h3> Seller: </h3><h4 className=\"username\">{userData.user.username}</h4>\n        </div>\n        {/* <div className=\"seller-icon\">\n          <h2>\n            <GiCrackedMask />\n          </h2>\n        </div> */}\n        <div className=\"seller-sold-items-count\">\n          <h3> Items sold:</h3><h4 className=\"sell-count\">{userData.sold.count}</h4>\n        </div>\n        <div className=\"seller-sold-items-count\">\n          <h3> Average Rating:</h3><h4 className=\"average-ratings\">{userData.reviews.average === 0 ? 'No Ratings' : `${Number(userData.reviews.average).toFixed(2)} Stars`}</h4>\n        </div>\n        <div className=\"num-seller-ratings\">\n          <h3>Ratings:</h3><h4 className=\"num-ratings\">{userData.reviews.num_ratings === 0 ? <p> No Ratings</p> : <p>{userData.reviews.num_ratings}</p>}</h4>\n        </div>\n      </div>\n      <div>\n        <h1 className=\"current-items-heading\">\n        {userData.user.username} is Currently Selling the Following Items:\n        </h1>\n      </div>\n      <div className=\"seller-items-body-container\">\n        {/* <div className=\"seller-items-container\"> */}\n          <Grid container spacing={1} className={classes.grid} >\n            {userData.items.map((item, idx) => {\n              let url = item.image_url\n              return (\n                <>\n                <Grid item xs={12} md={12}>\n                  <div className=\"item-name-seller-profile\"><h2 className=\"item-text\">{item.name}</h2></div>\n                  {/* <div className=\"inner-grid-container\"> */}\n                    <div className=\"seller-page-item-cards\">\n                      <Card className={classes.paper}>\n                        <CardContent className={classes.image}>\n                          <img className=\"item-image\" src={url} />\n                        </CardContent>\n                      </Card>\n                      <div className=\"description-table-container\">\n                        <div className=\"table-container\">\n\n                          <TableContainer className={classes.tableContainer}>\n                            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                              <TableHead className={classes.tableHead}>\n                                <TableRow>\n                                  {/* <TableCell align=\"right\">Item Name</TableCell> */}\n                                  <TableCell align=\"right\" className={classes.tableCell}>Full Sale Price</TableCell>\n                                  <TableCell align=\"right\" className={classes.tableCell}>Current Bid</TableCell>\n                                  <TableCell align=\"right\" className={classes.tableCell}>Number of Bidders</TableCell>\n                                  <TableCell align=\"right\" className={classes.tableCell}>Days Remaining</TableCell>\n                                </TableRow>\n                              </TableHead>\n                              <TableBody>\n\n                                <TableRow key={dataRows[idx].name}>\n                                  {/* <TableCell component=\"th\" scope=\"row\">\n                                    {dataRows.name}\n                                  </TableCell> */}\n                                  {/* <TableCell align=\"right\">{dataRows[idx].name}</TableCell> */}\n                                  <TableCell align=\"right\">${dataRows[idx].price}</TableCell>\n                                  <TableCell align=\"right\">${dataRows[idx].bid}</TableCell>\n                                  <TableCell align=\"right\">{dataRows[idx].num_bidders}</TableCell>\n                                  <TableCell align=\"right\">{dataRows[idx].days_remaining}</TableCell>\n                                </TableRow>\n\n                              </TableBody>\n                            </Table>\n                          </TableContainer>\n\n                        </div>\n                        <div className=\"item-description-conatiner\">\n                          {item.description}\n                        </div>\n                      </div>\n                    </div>\n\n                  {/* </div> */}\n                </Grid>\n                <div className=\"divider\">\n\n                </div>\n                </>\n              )\n            })}\n          </Grid>\n        {/* </div> */}\n      </div>\n    </>\n  )\n}\n\nexport default SellerProfile;\n","/home/ryan/aa_projects/hiNeighbor/client/src/reducers/userCredsReducer.js",["208"],"import { SET_USER_CREDS } from '../actions/types';\nimport setUserCreds from '../actions/userCredsAction';\n\nconst initialState = {\n  // session: {\n  //   // currentUserId: '',\n  //   // currentUsername: '',\n  //   // currentUserFirstName: '',\n  //   // currentUserLastName: ''\n  // },\n\n}\n\nconst setUserCredsReducer = (state = initialState, action) => {\n  const currentUser = action.currentUserData\n  switch(action.type) {\n    case SET_USER_CREDS:\n      return {\n        ...state,\n        currentUser\n      }\n    default:\n      return state;\n  }\n}\n\nexport default setUserCredsReducer;\n","/home/ryan/aa_projects/hiNeighbor/client/src/reducers/searchCategoryReducer.js",["209"],"const _ = require('lodash')\nconst { SET_PRICE_RANGE, SET_CATEGORY, SET_DISTANCE, SET_OFFER_TYPE, SET_ITEMS, SET_POST_ITEM_FORM_STATUS, SET_POST_ITEM_RENT_STATUS  } = require(\"../actions/types\")\n\n\nconst initialState = {\n  search_params: {\n  },\n  items_state: {\n    items: []\n  },\n  post_item_form_state: {\n    status: false\n  },\n  post_item_rent_state: {\n    rentStatus: false\n  }\n}\nconst searchCategoryReducer = (state = initialState, action) => {\n\n\n  const stateClone = _.cloneDeep(state)\n  console.log('ACTION:', action)\n\n  switch(action.type) {\n    case SET_CATEGORY:\n      let category = action.category.category\n      return {\n        ...state,\n       search_params: {...state.search_params,  category}\n      }\n    case SET_PRICE_RANGE:\n      let price_range = action.price_range.price_range\n    return {\n      ...state,\n      search_params: {...state.search_params, price_range}\n    }\n    case SET_DISTANCE:\n      let distance = action.distance.distance\n    return {\n      ...state,\n      search_params: {...state.search_params, distance}\n    }\n    case SET_OFFER_TYPE:\n      let offer_type = action.offer_type.offer_type\n    return {\n      ...state,\n      search_params: {...state.search_params,  offer_type}\n    }\n    case SET_POST_ITEM_FORM_STATUS:\n      let status = action.status\n      return{\n        ...state,\n        post_item_form_state: {...state.post_item_form_state, status}\n      }\n    case SET_POST_ITEM_RENT_STATUS:\n      let rentStatus = action.rentStatus\n      return{\n        ...state,\n        post_item_rent_state: {...state.post_item_rent_state, rentStatus}\n      }\n    case SET_ITEMS:\n      let items = action.items\n    return {\n      ...state,\n      items_state: {...state.items_state, items}\n    }\n    default:\n      return state;\n  }\n}\n\nexport default searchCategoryReducer;\n","/home/ryan/aa_projects/hiNeighbor/client/src/actions/types.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/PriceRange.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Distance.js",["210"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { GiPathDistance } from \"react-icons/gi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setDistance } from '../../actions/searchCategoryActions';\n\nconst Distance = () => {\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const options = ['0 - 5 mi', '10 - 20 mi', '20 mi +']\n  const dispatch = useDispatch();\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = async (e, idx) => {\n\n    dispatch(setDistance({\n      distance: options[idx]\n    }))\n    setSelectedCategory(options[idx])\n    setAnchorEl(null);\n  };\n\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant=\"outlined\" color=\"primary\">\n        <GiPathDistance /> Distance: {selectedCategory ? selectedCategory : <p className=\"distance-selection\">Any</p>}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, idx) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(event, idx)}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\nexport default Distance;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/OfferType.js",["211"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MdLocalGroceryStore } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setOfferType} from '../../actions/searchCategoryActions';\n\n\nconst OfferType = () => {\n\n  let defaultOfferType = useSelector(store => store.entities.search_params.offer_type)\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const options = ['Purchase', 'Rent', 'Services']\n  const dispatch = useDispatch();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = async (e, idx) => {\n\n    dispatch(setOfferType({\n      offer_type: options[idx]\n    }))\n    setSelectedCategory(options[idx])\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant=\"outlined\" color=\"primary\">\n        <MdLocalGroceryStore /> OfferType: {defaultOfferType ? defaultOfferType : <p className=\"offer-type-selection\">Any</p>}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, idx) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(event, idx)}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\n\nexport default OfferType;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/SearchBar.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/homepage/Category.js",["212"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { setCategory } from '../../actions/searchCategoryActions';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Category = () => {\n\n  let defaultCategory = useSelector(store => store.entities.search_params.category)\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null)\n  const dispatch = useDispatch();\n  const options = ['Books', 'Clothing', 'Electronics', 'Home Decor', 'Kitchen', 'Music', 'Video Games', ]\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuItemClick = async (e, idx) => {\n\n    dispatch(setCategory({\n      category: options[idx]\n    }))\n    setSelectedCategory(options[idx])\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }\n\n  return (\n    <div className='category-contents'>\n      <span>\n        <h2>\n          Category:\n        </h2>\n      </span>\n      <div className=\"chosen-category\">\n        <h3>\n        {defaultCategory ? defaultCategory : <p>Any</p>}\n        </h3>\n      </div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        <GiHamburgerMenu />\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {options.map((option, idx) => (\n          <MenuItem onClick={(event) => handleMenuItemClick(event, idx)}>\n            {options[idx]}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nexport default Category;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/ProfitsChart.js",["213","214","215"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst ProfitsChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [profitData, setProfitData] = useState([])\n\n\n\n  // const months = {1: 'Janurary', 2: 'Februrary', 3: 'March', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'August', 9: 'September', 10: 'October', 11: 'November', 12: 'December'}\n  let data =\n  [\n  { x: 1, y: 30, label: 'Janurary'},\n  { x: 2, y: 40, label: 'Februrary' },\n  { x: 3, y: 35, label: 'March' },\n  { x: 4, y: 70, label: 'April' },\n  { x: 5, y: 90, label: 'May' },\n  { x: 6, y: 50, label: 'June' },\n  { x: 7, y: 100, label: 'July' },\n  { x: 8, y: 50, label: 'August' },\n  { x: 9, y: 90, label: 'September' },\n  { x: 10, y: 80, label: 'October' },\n  { x: 11, y: 90, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      console.log('SALES DATA:', data)\n      items.forEach(item => {\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        if(item.price !== item.current_bid) {\n          data[idx].y += item.current_bid\n        }else {\n          data[idx].y += item.price\n        }\n      })\n      setProfitData(data)\n    })()\n  }, [])\n\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Profits'\n    },\n    axisY: {\n      title: 'Profit',\n      prefix: '$'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: profitData\n    }]\n  }\n\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default ProfitsChart;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/SalesChart.js",["216","217","218","219","220","221","222"],"import React, { useState, useEffect } from 'react';\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport './user_dropdown.css'\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n\nconst SalesChart = () => {\n\n  const userId = useSelector(store => store.session.currentUser.id)\n  const [salesData, setSalesData] = useState([])\n  const [salesButtonState, setSalesButtonState] = useState(true)\n  const [profitsButtonState, setProfitsButtonState] = useState(false)\n\n\n  // const months = {1: 'Janurary', 2: 'Februrary', 3: 'March', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'August', 9: 'September', 10: 'October', 11: 'November', 12: 'December'}\n  let data =\n  [\n  { x: 1, y: 10, label: 'Janurary'},\n  { x: 2, y: 5, label: 'Februrary' },\n  { x: 3, y: 15, label: 'March' },\n  { x: 4, y: 20, label: 'April' },\n  { x: 5, y: 10, label: 'May' },\n  { x: 6, y: 2, label: 'June' },\n  { x: 7, y: 3, label: 'July' },\n  { x: 8, y: 9, label: 'August' },\n  { x: 9, y: 25, label: 'September' },\n  { x: 10, y: 4, label: 'October' },\n  { x: 11, y: 9, label: 'November' },\n  { x: 12, y: 0, label: 'December' },\n  ]\n\n  const findIndex = {\n    '01': 0,\n    '02': 1,\n    '03': 2,\n    '04': 3,\n    '05': 4,\n    '06': 5,\n    '07': 6,\n    '08': 7,\n    '09': 8,\n    '10': 9,\n    '11': 10,\n    '12': 11\n  }\n\n  useEffect(() => {\n    (async() => {\n      const res = await fetch(`http://localhost:5000/api/users/${userId}/chart-data`)\n      const items = await res.json()\n      console.log('SALES DATA:', data)\n      items.forEach(item => {\n        let date = item.date_sold.slice(5, 7)\n        let idx = findIndex[date]\n        console.log(idx)\n        data[idx].y += 1\n        console.log(data)\n      })\n      setSalesData(data)\n    })()\n  }, [])\n\n  const handleClick = (e) => {\n    if(e.target.name === 'profits') {\n      if(profitsButtonState === false) {\n        setProfitsButtonState(true)\n        setSalesButtonState(false)\n      } else {\n        setProfitsButtonState(false)\n        setSalesButtonState(true)\n\n      }\n    } else {\n      if(salesButtonState === false) {\n        setSalesButtonState(true)\n        setProfitsButtonState(false)\n\n      }else {\n        setSalesButtonState(false)\n        setProfitsButtonState(true)\n      }\n    }\n  }\n\n  const resetItem = async() => {\n    // await fetch(`http://localhost:5000/api/items-and-services/${12}/unpurchase`,{\n      //   method: 'PATCH'\n      // })\n    }\n\n    const getCheese = async() => {\n      // const res = await fetch(`http://localhost:5000/api/items-and-services/${12}/cheese`)\n      // const {date} = await res.json()\n\n      // const dateobj = new Date(date)\n    // const diffDays = Math.round(Math.abs((dateobj - d1) / oneDay));\n\n    // console.log(diffDays)\n  }\n\n\n  const options = {\n    animationEnabled: true,\n    // exportEnabled: true,\n    theme: 'light2',\n    title: {\n      text: 'Sales'\n    },\n    axisY: {\n      title: 'Number of Sales'\n    },\n    axisX: [\n      {\n        title: 'Month of the Year',\n        interval: 1\n      },\n    ],\n    data: [{\n      type: 'line',\n      // toolTipContent: `${months[x]}`,\n      dataPoints: salesData\n    }]\n  }\n  const graph_1 = (\n    <div className=\"chart-data\">\n      <CanvasJSChart options={ options } />\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"chart-data\">\n        <CanvasJSChart options={ options } />\n      </div>\n    </>\n  )\n}\n\nexport default SalesChart;\n","/home/ryan/aa_projects/hiNeighbor/client/src/actions/itemsActions.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/actions/searchCategoryActions.js",[],"/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/UserDropdown.js",["223","224","225","226","227"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { BiDotsVerticalRounded } from \"react-icons/bi\";\nimport { useHistory,  Redirect } from 'react-router-dom'\nimport PostItem from './PostItem';\nimport PostRentItem from './PostRentItem';\nimport { setPostItemFormStatus } from '../../actions/itemsActions';\nimport { setPostItemRentStatus } from '../../actions/itemsActions';\n\n\n\n\nconst UserDropdown = (props) => {\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const form_state = useSelector(store => store.entities.post_item_form_state.status)\n  const rent_form_state = useSelector(store => store.entities.post_item_rent_state.rentStatus)\n  console.log(rent_form_state)\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    setAnchorEl(null);\n    document.cookie = \"access_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    props.setAuthenticated(false)\n  };\n\n  const handlePostedItems = () => {\n    history.replace('/posted-items')\n  }\n\n  const handlePurchaseHistory = () => {\n    history.replace('/purchase-history')\n  }\n\n  const handleMyStats = () => {\n    history.replace('/user-stats')\n  }\n\n  // const togglePostItemForm = () => {\n  //   console.log('here')\n  //   setVisibility(true)\n  //   return(<PostItem visible={visibility}/>)\n  // }\n\n  console.log(form_state)\n\n  const handleDialogClose = () => {\n    dispatch(setPostItemFormStatus(false))\n    // setDialogOpen(false);\n  };\n\n  const handleDialogOpen = () => {\n   dispatch(setPostItemFormStatus(true))\n  };\n\n  const handleDialogRentClose = () => {\n    dispatch(setPostItemRentStatus(false))\n    // setDialogOpen(false);\n  };\n\n  const handleDialogRentOpen = () => {\n   dispatch(setPostItemRentStatus(true))\n  };\n\n  return (\n    <>\n      <div>\n        {/* <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}> */}\n          <h2 className=\"three-dots\">\n            <BiDotsVerticalRounded aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}/>\n          </h2>\n        {/* </Button> */}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={handleDialogOpen}> Post an Item for Sale</MenuItem>\n          <MenuItem onClick={handleDialogRentOpen}> Post an Item for Rent</MenuItem>\n          <MenuItem onClick={handleMyStats}>My Stats</MenuItem>\n          <MenuItem onClick={handlePostedItems}>Posted Items</MenuItem>\n          <MenuItem onClick={handlePurchaseHistory}>Purchase History</MenuItem>\n          <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        </Menu>\n      </div>\n      {rent_form_state === true ? <PostRentItem /> : <> </>}\n      {form_state === true ? <PostItem /> : <> </>}\n\n      {/* <PostRentItem /> */}\n    </>\n\n  );\n}\n\n{/* || rent_form_state.length === 0) */}\n// || form_state.length === 0)\n\nexport default UserDropdown;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostItem.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"import React, { useState } from 'react';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setPostItemFormStatus } from '../../actions/itemsActions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button\n} from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { useForm } from 'react-hook-form';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from \"@material-ui/core/Select\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst fs = require('fs')\n\nconst useStyles = makeStyles((theme) => ({\n  itemFormModal: {\n    // position: \"absolute\",\n    // top: '50rem',\n    // left: '50vh',\n    // top: '50vh',\n    width: '400px',\n    margin: 'auto',\n    marginTop: '14vh',\n    backgroundColor: theme.palette.background.paper,\n    // // border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    // padding: theme.spacing(2, 4, 3),\n    paddingLeft: \"5rem\",\n    paddingRight: \"5rem\",\n    paddingTop: \"2rem\",\n    paddingBottom: \"3rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"2px solid white\",\n  },\n\n  submitButton: {\n    marginTop: \"2rem\",\n  },\n\n  dialogBox: {\n    width: '200px',\n    heigth: '200px'\n  },\n\n  offerType: {\n    margin: '10px',\n    width: '100%'\n  },\n\n  formControl: {\n    width: '181px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  }\n}));\n\nconst PostItem = (props) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemDescription, setItemDescription] = useState(\"\");\n  const [itemCategory, setItemCategory] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"\");\n  const [itemOfferType, setItemOfferType] = useState(\"\");\n  const [itemQuantity, setItemQuantity] = useState(\"\");\n  // const [imageURL, setImageURL] = useState('')\n  const [imageFile, setImageFile] = useState(null)\n  const [classTime, setClassTime] = useState(\"\");\n  const [modalClosed, setModalClosed] = useState('false')\n  const [encodedImg, setEncodedImg] = useState({})\n  const form_state = useSelector(store => store.entities.post_item_form_state.status)\n  const userId = useSelector(store => store.session.currentUser.id)\n  console.log(userId)\n  const { register, handleSubmit } = useForm()\n  const classes = useStyles()\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [popupVisible, setPopupVisible] = useState(false)\n  const[modalOpen, setModalOpen] = useState(true)\n  const [anchorElOffer, setAnchorElOffer] = useState(null);\n  const [anchorElCategory, setAnchorElCategory] = useState(null);\n  const [formErrors, setFormErrors] = useState([]);\n\n  // console.log('CURRENT USER ID:', userId)\n  let generatedImageURL;\n  // const handleClick = (event) => {\n  //   setAnchorElOffer(event.currentTarget);\n  // };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleDialogOpen = (itemData) => {\n    setDialogOpen(true)\n  }\n\n  const handleCloseOffer = () => {\n    setAnchorElOffer(null);\n  };\n\n  const handleCloseCategory = () => {\n    setAnchorElCategory(null);\n  }\n\n  const handleOfferTypeSelection = (e) => {\n    console.log(e.target.value)\n    setItemOfferType(e.target.value)\n    handleCloseOffer()\n  }\n\n  const handleCategorySelection = (e) => {\n    console.log(e.target.value)\n    setItemCategory(e.target.value)\n    handleCloseCategory()\n  }\n\n  const handleInputChange = (e) => {\n    if (e.target.id === \"name-input\") {\n      setItemName(e.target.value);\n    } else if (e.target.id === \"description-input\") {\n      setItemDescription(e.target.value);\n    } else if(e.target.id === \"sell-price-input\") {\n      setItemPrice(e.target.value)\n    } else if(e.target.id === \"quantitiy-input\") {\n      setItemQuantity(e.target.value)\n    }\n  };\n\n  const handleCloseModal = (buttonName) => {\n    setModalOpen(false)\n    // console.log(e)\n    if(buttonName === 'close-button') {\n      dispatch(setPostItemFormStatus(false))\n      return\n    }\n    setPopupVisible(true)\n    setTimeout(() => {\n      setPopupVisible(false)\n      dispatch(setPostItemFormStatus(false))\n    }, 2500)\n  }\n\n\n  const postItem = async() => {\n\n\n    const expiryDate = new Date()\n    expiryDate.setDate(expiryDate.getDate() + 30);\n    console.log(generatedImageURL)\n\n    const body = {\n      userId,\n      itemName,\n      itemDescription,\n      itemCategory,\n      itemPrice,\n      generatedImageURL,\n      expiryDate\n    }\n\n    console.log('EXPIRY DATE:', body)\n\n    const res = await fetch('http://localhost:5000/api/items-and-services/post-item', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n\n    const newItem = await res.json()\n    console.log(newItem)\n    handleCloseModal()\n  }\n\n  const uploadPhoto = async () => {\n    console.log(imageFile)\n    // console.log(data.image[0].name)\n    const fd = new FormData();\n    fd.append('file', imageFile)\n    // console.log(fd)\n    try {\n      const res = await fetch('http://localhost:5000/api/items-and-services/upload-photo', {\n        method: 'POST',\n        body: fd\n      })\n      const { imageURL } = await res.json()\n      generatedImageURL = imageURL\n      console.log(generatedImageURL)\n      postItem()\n    } catch(e) {\n      alert(e)\n      return\n    }\n  }\n\n  const validateForm = (e) => {\n    e.preventDefault()\n    let discoveredErrors = []\n    let requiredFields =\n    [\n    imageFile,\n    itemName,\n    itemDescription,\n    itemCategory,\n    itemPrice,\n    ]\n    let errorMessages =\n    [\n      'You Must Upload an Image',\n      'You Must Enter an Item Name',\n      'You Must Enter an Item Description',\n      'You Must Pick a Category',\n      'You Must Enter an Item Price',\n    ]\n\n    requiredFields.forEach((field, i) => {\n      if(!field) {\n        discoveredErrors.push(errorMessages[i])\n      }\n      setFormErrors(discoveredErrors)\n    })\n\n    if(discoveredErrors.length === 0) {\n      uploadPhoto()\n    } else {\n      setDialogOpen(true)\n    }\n  }\n\n  const postItemBody = (\n    <div className={classes.itemFormModal}>\n      <h2 id=\"simple-modal-title\">Item Info:</h2>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"name-input\">Name</InputLabel>\n          <Input id=\"name-input\" onChange={handleInputChange} autoFocus />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n          <Input id=\"description-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div>\n      <div>\n      <FormControl className={classes.formControl}>\n          <InputLabel id=\"offer-type-select\">Category</InputLabel>\n          <Select\n            labelId=\"offer-type-select\"\n            id=\"offer-type\"\n            onChange={(e) => handleCategorySelection(e)}\n          >\n            <MenuItem value={\"Books\"}>Books</MenuItem>\n            <MenuItem value={\"Clothing\"}>Clothing</MenuItem>\n            <MenuItem value={\"Electronics\"}>Electronics</MenuItem>\n            <MenuItem value={\"Home Decor\"}>Home Decor</MenuItem>\n            <MenuItem value={\"Kitchen\"}>Kitchen</MenuItem>\n            <MenuItem value={\"Music\"}>Music</MenuItem>\n            <MenuItem value={\"Video Games\"}>Video Games</MenuItem>\n          </Select>\n        </FormControl>\n        {/* <FormControl>\n          <InputLabel htmlFor=\"category-input\">Category</InputLabel>\n          <Input id=\"category-input\" onChange={handleInputChange} />\n        </FormControl> */}\n      </div>\n      {/* <div>\n        <FormControl>\n          <InputLabel htmlFor=\"quantitiy-input\">Quantity</InputLabel>\n          <Input id=\"quantitiy-input\" onChange={handleInputChange} />\n        </FormControl>\n      </div> */}\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"sell-price-input\">Sell Price</InputLabel>\n          <Input id=\"sell-price-input\" onChange={handleInputChange} />\n\n        </FormControl>\n      </div>\n      {/* <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"offer-type-select\">Offer Type</InputLabel>\n          <Select\n            labelId=\"offer-type-select\"\n            id=\"offer-type\"\n            onChange={(e) => handleOfferTypeSelection(e)}\n          >\n            <MenuItem value={\"Rent\"}>Rent</MenuItem>\n            <MenuItem value={\"Sell\"}>Sell</MenuItem>\n          </Select>\n        </FormControl>\n      </div> */}\n      <div className=\"photo-upload-container\">\n        <form onChange={(e) => setImageFile(e.target.files[0])}>\n          <input type=\"file\" id=\"upload-image-input\" name='image'/>\n          {/* <button onClick={uploadPhoto} className=\"confirm-upload-button\">Confirm Upload</button> */}\n        </form>\n      </div>\n      <div className=\"post-item-or-service-buttons\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={validateForm}\n          type=\"submit\"\n          name=\"post-button\"\n        >\n          Post Item\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ color: \"white\" }}\n          size=\"small\"\n          className={classes.submitButton}\n          onClick={()=>handleCloseModal('close-button')}\n          type=\"submit\"\n          name=\"close-button\"\n        >\n         Close\n        </Button>\n      </div>\n    </div>\n  );\n\n  return(\n    <>\n      {popupVisible ? <div className=\"fade-test\" style={{display:\"block\"}}><h2>Post Successful!</h2></div> : <></>}\n      <Modal\n      open={(() => {\n        if(form_state === false || form_state === 'undefined' || modalOpen === false) {\n          console.log('FALSE')\n          return false\n        }\n        console.log('TRUE')\n        return true\n      })()}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      >\n      {postItemBody}\n      </Modal>\n      <Dialog\n      open={dialogOpen}\n      onClose={handleDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      >\n         <DialogTitle id=\"alert-dialog-title\">\n          {\"The Following Are Required:\"}\n        </DialogTitle>\n        <List>\n          {formErrors.map((error) => (\n            <ListItem>\n              <ListItemText>\n                {error}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n    </>\n  )\n}\n\nexport default PostItem;\n","/home/ryan/aa_projects/hiNeighbor/client/src/components/user_dropdown/PostRentItem.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263"],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":2,"column":32,"nodeType":"270","messageId":"271","endLine":2,"endColumn":40},{"ruleId":"268","severity":1,"message":"272","line":9,"column":8,"nodeType":"270","messageId":"271","endLine":9,"endColumn":13},{"ruleId":"268","severity":1,"message":"273","line":10,"column":8,"nodeType":"270","messageId":"271","endLine":10,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":18,"column":9,"nodeType":"270","messageId":"271","endLine":18,"endColumn":14},{"ruleId":"268","severity":1,"message":"275","line":19,"column":9,"nodeType":"270","messageId":"271","endLine":19,"endColumn":19},{"ruleId":"268","severity":1,"message":"276","line":23,"column":9,"nodeType":"270","messageId":"271","endLine":23,"endColumn":16},{"ruleId":"277","severity":1,"message":"278","line":59,"column":6,"nodeType":"279","endLine":59,"endColumn":8,"suggestions":"280"},{"ruleId":"268","severity":1,"message":"281","line":4,"column":10,"nodeType":"270","messageId":"271","endLine":4,"endColumn":23},{"ruleId":"268","severity":1,"message":"282","line":4,"column":25,"nodeType":"270","messageId":"271","endLine":4,"endColumn":38},{"ruleId":"268","severity":1,"message":"283","line":4,"column":40,"nodeType":"270","messageId":"271","endLine":4,"endColumn":53},{"ruleId":"268","severity":1,"message":"284","line":6,"column":8,"nodeType":"270","messageId":"271","endLine":6,"endColumn":17},{"ruleId":"268","severity":1,"message":"285","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":20},{"ruleId":"268","severity":1,"message":"269","line":9,"column":23,"nodeType":"270","messageId":"271","endLine":9,"endColumn":31},{"ruleId":"268","severity":1,"message":"286","line":28,"column":9,"nodeType":"270","messageId":"271","endLine":28,"endColumn":17},{"ruleId":"268","severity":1,"message":"287","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"288","line":8,"column":10,"nodeType":"270","messageId":"271","endLine":8,"endColumn":21},{"ruleId":"268","severity":1,"message":"289","line":9,"column":10,"nodeType":"270","messageId":"271","endLine":9,"endColumn":16},{"ruleId":"268","severity":1,"message":"290","line":20,"column":9,"nodeType":"270","messageId":"271","endLine":20,"endColumn":20},{"ruleId":"268","severity":1,"message":"287","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"288","line":5,"column":10,"nodeType":"270","messageId":"271","endLine":5,"endColumn":21},{"ruleId":"268","severity":1,"message":"291","line":12,"column":9,"nodeType":"270","messageId":"271","endLine":12,"endColumn":15},{"ruleId":"268","severity":1,"message":"292","line":13,"column":21,"nodeType":"270","messageId":"271","endLine":13,"endColumn":33},{"ruleId":"268","severity":1,"message":"293","line":61,"column":9,"nodeType":"270","messageId":"271","endLine":61,"endColumn":16},{"ruleId":"268","severity":1,"message":"287","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"294","line":7,"column":3,"nodeType":"270","messageId":"271","endLine":7,"endColumn":8},{"ruleId":"268","severity":1,"message":"295","line":13,"column":22,"nodeType":"270","messageId":"271","endLine":13,"endColumn":32},{"ruleId":"268","severity":1,"message":"296","line":14,"column":36,"nodeType":"270","messageId":"271","endLine":14,"endColumn":43},{"ruleId":"268","severity":1,"message":"297","line":20,"column":28,"nodeType":"270","messageId":"271","endLine":20,"endColumn":34},{"ruleId":"268","severity":1,"message":"298","line":214,"column":9,"nodeType":"270","messageId":"271","endLine":214,"endColumn":20},{"ruleId":"299","severity":1,"message":"300","line":243,"column":23,"nodeType":"301","endLine":243,"endColumn":72},{"ruleId":"302","severity":1,"message":"303","line":304,"column":61,"nodeType":"304","endLine":304,"endColumn":79},{"ruleId":"302","severity":1,"message":"303","line":310,"column":75,"nodeType":"304","endLine":310,"endColumn":93},{"ruleId":"268","severity":1,"message":"287","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"305","line":5,"column":23,"nodeType":"270","messageId":"271","endLine":5,"endColumn":34},{"ruleId":"268","severity":1,"message":"276","line":26,"column":9,"nodeType":"270","messageId":"271","endLine":26,"endColumn":16},{"ruleId":"268","severity":1,"message":"306","line":5,"column":3,"nodeType":"270","messageId":"271","endLine":5,"endColumn":17},{"ruleId":"268","severity":1,"message":"295","line":9,"column":22,"nodeType":"270","messageId":"271","endLine":9,"endColumn":32},{"ruleId":"268","severity":1,"message":"288","line":10,"column":10,"nodeType":"270","messageId":"271","endLine":10,"endColumn":21},{"ruleId":"268","severity":1,"message":"296","line":10,"column":36,"nodeType":"270","messageId":"271","endLine":10,"endColumn":43},{"ruleId":"268","severity":1,"message":"294","line":17,"column":8,"nodeType":"270","messageId":"271","endLine":17,"endColumn":13},{"ruleId":"268","severity":1,"message":"307","line":20,"column":10,"nodeType":"270","messageId":"271","endLine":20,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":115,"column":7,"nodeType":"270","messageId":"271","endLine":115,"endColumn":12},{"ruleId":"277","severity":1,"message":"308","line":142,"column":6,"nodeType":"279","endLine":142,"endColumn":8,"suggestions":"309"},{"ruleId":"299","severity":1,"message":"300","line":200,"column":21,"nodeType":"301","endLine":200,"endColumn":61},{"ruleId":"268","severity":1,"message":"306","line":5,"column":3,"nodeType":"270","messageId":"271","endLine":5,"endColumn":17},{"ruleId":"268","severity":1,"message":"289","line":7,"column":3,"nodeType":"270","messageId":"271","endLine":7,"endColumn":9},{"ruleId":"268","severity":1,"message":"295","line":9,"column":22,"nodeType":"270","messageId":"271","endLine":9,"endColumn":32},{"ruleId":"268","severity":1,"message":"288","line":10,"column":10,"nodeType":"270","messageId":"271","endLine":10,"endColumn":21},{"ruleId":"268","severity":1,"message":"296","line":10,"column":36,"nodeType":"270","messageId":"271","endLine":10,"endColumn":43},{"ruleId":"268","severity":1,"message":"274","line":104,"column":7,"nodeType":"270","messageId":"271","endLine":104,"endColumn":12},{"ruleId":"277","severity":1,"message":"310","line":134,"column":6,"nodeType":"279","endLine":134,"endColumn":8,"suggestions":"311"},{"ruleId":"299","severity":1,"message":"300","line":157,"column":21,"nodeType":"301","endLine":157,"endColumn":61},{"ruleId":"268","severity":1,"message":"306","line":5,"column":3,"nodeType":"270","messageId":"271","endLine":5,"endColumn":17},{"ruleId":"268","severity":1,"message":"289","line":7,"column":3,"nodeType":"270","messageId":"271","endLine":7,"endColumn":9},{"ruleId":"268","severity":1,"message":"295","line":9,"column":22,"nodeType":"270","messageId":"271","endLine":9,"endColumn":32},{"ruleId":"268","severity":1,"message":"288","line":10,"column":10,"nodeType":"270","messageId":"271","endLine":10,"endColumn":21},{"ruleId":"268","severity":1,"message":"305","line":10,"column":23,"nodeType":"270","messageId":"271","endLine":10,"endColumn":34},{"ruleId":"268","severity":1,"message":"296","line":10,"column":36,"nodeType":"270","messageId":"271","endLine":10,"endColumn":43},{"ruleId":"268","severity":1,"message":"281","line":11,"column":10,"nodeType":"270","messageId":"271","endLine":11,"endColumn":23},{"ruleId":"268","severity":1,"message":"282","line":11,"column":25,"nodeType":"270","messageId":"271","endLine":11,"endColumn":38},{"ruleId":"268","severity":1,"message":"283","line":11,"column":40,"nodeType":"270","messageId":"271","endLine":11,"endColumn":53},{"ruleId":"268","severity":1,"message":"294","line":20,"column":8,"nodeType":"270","messageId":"271","endLine":20,"endColumn":13},{"ruleId":"312","severity":1,"message":"313","line":104,"column":5,"nodeType":"314","messageId":"315","endLine":104,"endColumn":11},{"ruleId":"277","severity":1,"message":"316","line":145,"column":5,"nodeType":"279","endLine":145,"endColumn":7,"suggestions":"317"},{"ruleId":"299","severity":1,"message":"300","line":186,"column":27,"nodeType":"301","endLine":186,"endColumn":67},{"ruleId":"268","severity":1,"message":"285","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":20},{"ruleId":"268","severity":1,"message":"318","line":21,"column":9,"nodeType":"270","messageId":"271","endLine":21,"endColumn":19},{"ruleId":"268","severity":1,"message":"305","line":6,"column":23,"nodeType":"270","messageId":"271","endLine":6,"endColumn":34},{"ruleId":"268","severity":1,"message":"319","line":14,"column":10,"nodeType":"270","messageId":"271","endLine":14,"endColumn":26},{"ruleId":"268","severity":1,"message":"319","line":13,"column":10,"nodeType":"270","messageId":"271","endLine":13,"endColumn":26},{"ruleId":"268","severity":1,"message":"289","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":14},{"ruleId":"268","severity":1,"message":"288","line":5,"column":10,"nodeType":"270","messageId":"271","endLine":5,"endColumn":21},{"ruleId":"277","severity":1,"message":"320","line":64,"column":6,"nodeType":"279","endLine":64,"endColumn":8,"suggestions":"321"},{"ruleId":"268","severity":1,"message":"289","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":14},{"ruleId":"268","severity":1,"message":"288","line":5,"column":10,"nodeType":"270","messageId":"271","endLine":5,"endColumn":21},{"ruleId":"277","severity":1,"message":"320","line":63,"column":6,"nodeType":"279","endLine":63,"endColumn":8,"suggestions":"322"},{"ruleId":"268","severity":1,"message":"298","line":65,"column":9,"nodeType":"270","messageId":"271","endLine":65,"endColumn":20},{"ruleId":"268","severity":1,"message":"323","line":87,"column":9,"nodeType":"270","messageId":"271","endLine":87,"endColumn":18},{"ruleId":"268","severity":1,"message":"324","line":93,"column":11,"nodeType":"270","messageId":"271","endLine":93,"endColumn":20},{"ruleId":"268","severity":1,"message":"293","line":126,"column":9,"nodeType":"270","messageId":"271","endLine":126,"endColumn":16},{"ruleId":"268","severity":1,"message":"289","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":7,"column":23,"nodeType":"270","messageId":"271","endLine":7,"endColumn":31},{"ruleId":"268","severity":1,"message":"325","line":59,"column":9,"nodeType":"270","messageId":"271","endLine":59,"endColumn":26},{"ruleId":"268","severity":1,"message":"326","line":68,"column":9,"nodeType":"270","messageId":"271","endLine":68,"endColumn":30},{"ruleId":"327","severity":1,"message":"328","line":109,"column":1,"nodeType":"329","messageId":"330","endLine":109,"endColumn":41},{"ruleId":"268","severity":1,"message":"331","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":21},{"ruleId":"268","severity":1,"message":"332","line":16,"column":8,"nodeType":"270","messageId":"271","endLine":16,"endColumn":12},{"ruleId":"268","severity":1,"message":"333","line":23,"column":7,"nodeType":"270","messageId":"271","endLine":23,"endColumn":9},{"ruleId":"268","severity":1,"message":"334","line":76,"column":10,"nodeType":"270","messageId":"271","endLine":76,"endColumn":23},{"ruleId":"268","severity":1,"message":"335","line":77,"column":10,"nodeType":"270","messageId":"271","endLine":77,"endColumn":22},{"ruleId":"268","severity":1,"message":"336","line":80,"column":10,"nodeType":"270","messageId":"271","endLine":80,"endColumn":19},{"ruleId":"268","severity":1,"message":"337","line":80,"column":21,"nodeType":"270","messageId":"271","endLine":80,"endColumn":33},{"ruleId":"268","severity":1,"message":"338","line":81,"column":10,"nodeType":"270","messageId":"271","endLine":81,"endColumn":21},{"ruleId":"268","severity":1,"message":"339","line":81,"column":23,"nodeType":"270","messageId":"271","endLine":81,"endColumn":37},{"ruleId":"268","severity":1,"message":"340","line":82,"column":10,"nodeType":"270","messageId":"271","endLine":82,"endColumn":20},{"ruleId":"268","severity":1,"message":"341","line":82,"column":22,"nodeType":"270","messageId":"271","endLine":82,"endColumn":35},{"ruleId":"268","severity":1,"message":"342","line":86,"column":11,"nodeType":"270","messageId":"271","endLine":86,"endColumn":19},{"ruleId":"268","severity":1,"message":"343","line":86,"column":21,"nodeType":"270","messageId":"271","endLine":86,"endColumn":33},{"ruleId":"268","severity":1,"message":"344","line":89,"column":10,"nodeType":"270","messageId":"271","endLine":89,"endColumn":22},{"ruleId":"268","severity":1,"message":"345","line":89,"column":24,"nodeType":"270","messageId":"271","endLine":89,"endColumn":39},{"ruleId":"268","severity":1,"message":"346","line":92,"column":10,"nodeType":"270","messageId":"271","endLine":92,"endColumn":23},{"ruleId":"268","severity":1,"message":"347","line":93,"column":10,"nodeType":"270","messageId":"271","endLine":93,"endColumn":26},{"ruleId":"268","severity":1,"message":"348","line":106,"column":9,"nodeType":"270","messageId":"271","endLine":106,"endColumn":25},{"ruleId":"268","severity":1,"message":"349","line":118,"column":9,"nodeType":"270","messageId":"271","endLine":118,"endColumn":33},{"ruleId":"268","severity":1,"message":"331","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":21},{"ruleId":"268","severity":1,"message":"332","line":16,"column":8,"nodeType":"270","messageId":"271","endLine":16,"endColumn":12},{"ruleId":"268","severity":1,"message":"333","line":23,"column":7,"nodeType":"270","messageId":"271","endLine":23,"endColumn":9},{"ruleId":"268","severity":1,"message":"335","line":73,"column":10,"nodeType":"270","messageId":"271","endLine":73,"endColumn":22},{"ruleId":"268","severity":1,"message":"336","line":76,"column":10,"nodeType":"270","messageId":"271","endLine":76,"endColumn":19},{"ruleId":"268","severity":1,"message":"337","line":76,"column":21,"nodeType":"270","messageId":"271","endLine":76,"endColumn":33},{"ruleId":"268","severity":1,"message":"338","line":77,"column":10,"nodeType":"270","messageId":"271","endLine":77,"endColumn":21},{"ruleId":"268","severity":1,"message":"339","line":77,"column":23,"nodeType":"270","messageId":"271","endLine":77,"endColumn":37},{"ruleId":"268","severity":1,"message":"340","line":78,"column":10,"nodeType":"270","messageId":"271","endLine":78,"endColumn":20},{"ruleId":"268","severity":1,"message":"341","line":78,"column":22,"nodeType":"270","messageId":"271","endLine":78,"endColumn":35},{"ruleId":"268","severity":1,"message":"342","line":82,"column":11,"nodeType":"270","messageId":"271","endLine":82,"endColumn":19},{"ruleId":"268","severity":1,"message":"343","line":82,"column":21,"nodeType":"270","messageId":"271","endLine":82,"endColumn":33},{"ruleId":"268","severity":1,"message":"344","line":85,"column":10,"nodeType":"270","messageId":"271","endLine":85,"endColumn":22},{"ruleId":"268","severity":1,"message":"345","line":85,"column":24,"nodeType":"270","messageId":"271","endLine":85,"endColumn":39},{"ruleId":"268","severity":1,"message":"346","line":88,"column":10,"nodeType":"270","messageId":"271","endLine":88,"endColumn":23},{"ruleId":"268","severity":1,"message":"347","line":89,"column":10,"nodeType":"270","messageId":"271","endLine":89,"endColumn":26},{"ruleId":"268","severity":1,"message":"348","line":102,"column":9,"nodeType":"270","messageId":"271","endLine":102,"endColumn":25},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Items' is defined but never used.","'PostItem' is defined but never used.","'items' is assigned a value but never used.","'form_state' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["352"],"'GiClawSlashes' is defined but never used.","'GiCrackedMask' is defined but never used.","'GiAbstract017' is defined but never used.","'holyGrail' is defined but never used.","'setUserCreds' is defined but never used.","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Button' is defined but never used.","'handlePopUp' is assigned a value but never used.","'userId' is assigned a value but never used.","'setSalesData' is assigned a value but never used.","'graph_1' is assigned a value but never used.","'Paper' is defined but never used.","'withStyles' is defined but never used.","'connect' is defined but never used.","'Switch' is defined but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useSelector' is defined but never used.","'CardActionArea' is defined but never used.","'GiFalloutShelter' is defined but never used.","React Hook useEffect has missing dependencies: 'currUserId' and 'ratingState'. Either include them or remove the dependency array.",["353"],"React Hook useEffect has a missing dependency: 'currUserId'. Either include it or remove the dependency array.",["354"],"no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["355"],"'stateClone' is assigned a value but never used.","'selectedCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'findIndex', and 'userId'. Either include them or remove the dependency array.",["356"],["357"],"'resetItem' is assigned a value but never used.","'getCheese' is assigned a value but never used.","'handleDialogClose' is assigned a value but never used.","'handleDialogRentClose' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'DialogActions' is defined but never used.","'Menu' is defined but never used.","'fs' is assigned a value but never used.","'itemOfferType' is assigned a value but never used.","'itemQuantity' is assigned a value but never used.","'classTime' is assigned a value but never used.","'setClassTime' is assigned a value but never used.","'modalClosed' is assigned a value but never used.","'setModalClosed' is assigned a value but never used.","'encodedImg' is assigned a value but never used.","'setEncodedImg' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","'anchorElOffer' is assigned a value but never used.","'anchorElCategory' is assigned a value but never used.","'handleDialogOpen' is assigned a value but never used.","'handleOfferTypeSelection' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"366","fix":"368"},"Update the dependencies array to be: [dispatch]",{"range":"369","text":"370"},"Update the dependencies array to be: [currUserId, ratingState]",{"range":"371","text":"372"},"Update the dependencies array to be: [currUserId]",{"range":"373","text":"374"},"Update the dependencies array to be: [id]",{"range":"375","text":"376"},"Update the dependencies array to be: [data, findIndex, userId]",{"range":"377","text":"378"},{"range":"379","text":"378"},[2112,2114],"[dispatch]",[4241,4243],"[currUserId, ratingState]",[3703,3705],"[currUserId]",[3929,3931],"[id]",[1707,1709],"[data, findIndex, userId]",[1755,1757]]